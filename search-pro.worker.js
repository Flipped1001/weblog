const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":375,\"nextId\":375,\"documentIds\":{\"0\":\"1\",\"1\":\"1#📋-个人信息\",\"2\":\"1#📝-简介\",\"3\":\"1#🚀-技能\",\"4\":\"1#🖥️-编程语言\",\"5\":\"1#🌐-前端技术\",\"6\":\"1#🛠️-后端技术\",\"7\":\"1#🗄️-数据库\",\"8\":\"1#🔧-工具\",\"9\":\"1#📚-项目经验\",\"10\":\"1#📦-项目名称1\",\"11\":\"1#📝-项目名称2\",\"12\":\"1#🎓-教育背景\",\"13\":\"1#🎖️-证书\",\"14\":\"1#🎨-兴趣爱好\",\"15\":\"1#💬-个人格言\",\"16\":\"2\",\"17\":\"3\",\"18\":\"4\",\"19\":\"5\",\"20\":\"6\",\"21\":\"6#_1-limit-m-1\",\"22\":\"6#_2-limit-offset-count\",\"23\":\"7\",\"24\":\"8\",\"25\":\"9\",\"26\":\"10\",\"27\":\"10#dcl\",\"28\":\"11\",\"29\":\"11#ddl\",\"30\":\"12\",\"31\":\"12#dml\",\"32\":\"13\",\"33\":\"13#dql\",\"34\":\"13#聚合函数\",\"35\":\"14\",\"36\":\"14#explain-一个sql语句可以查询到什么\",\"37\":\"15\",\"38\":\"15#字符串函数\",\"39\":\"15#数值函数\",\"40\":\"15#日期函数\",\"41\":\"15#流程函数\",\"42\":\"16\",\"43\":\"16#约束\",\"44\":\"16#外键约束\",\"45\":\"17\",\"46\":\"17#cors-cross-origin-resource-sharing-跨域资源共享\",\"47\":\"18\",\"48\":\"18#_1-tcp和udp的区别\",\"49\":\"18#_2-tcp是如何做链接管理的\",\"50\":\"18#_3-tcp是如何保证可靠的\",\"51\":\"18#_4-重传机制有哪些\",\"52\":\"18#_5-tcp是如何保证有序的\",\"53\":\"18#_6-粘包问题\",\"54\":\"18#_7-滑动窗口\",\"55\":\"18#_8-拥塞控制\",\"56\":\"18#_9-tcp的三次握手和四次挥手\",\"57\":\"18#三次握手\",\"58\":\"18#_1-第一次握手\",\"59\":\"18#_2-第二次握手\",\"60\":\"18#_3-第三次握手\",\"61\":\"18#四次挥手\",\"62\":\"18#_1-第一次挥手\",\"63\":\"18#_2-第二次挥手\",\"64\":\"18#_3-第三次挥手\",\"65\":\"18#_4-第四次挥手\",\"66\":\"18#_10-time-wait状态的意义\",\"67\":\"18#_11-为什么需要三次握手而不是四次-两次\",\"68\":\"18#什么是restful风格\",\"69\":\"18#用户登录\",\"70\":\"18#_1-什么是oauth2-0\",\"71\":\"18#a-oauth-2-0-授权模式\",\"72\":\"18#_2-用户扫码是如何实现的\",\"73\":\"18#_3-如果要实现不同域名下的cookie正常使用-应该怎么处理\",\"74\":\"18#_4-假如1亿用户体量-如何设计一个登录验签服务\",\"75\":\"19\",\"76\":\"19#cup-cache\",\"77\":\"19#如何写出让-cpu-跑得更快的代码\",\"78\":\"19#数据缓存\",\"79\":\"19#指令缓存\",\"80\":\"19#多核-cpu-的缓存命中率\",\"81\":\"20\",\"82\":\"20#cpu如何执行任务的\",\"83\":\"20#cache-伪共享是什么\",\"84\":\"20#避免伪共享的方法\",\"85\":\"20#cpu-是根据什么来选择当前要执行的线程。\",\"86\":\"20#调度类\",\"87\":\"20#完全公平调度\",\"88\":\"20#cpu-运行队列\",\"89\":\"20#调整优先级\",\"90\":\"21\",\"91\":\"21#cpu-cache-的数据写入\",\"92\":\"21#写直达\",\"93\":\"21#写回\",\"94\":\"21#缓存一致性问题\",\"95\":\"21#总线嗅探\",\"96\":\"21#mesi-协议\",\"97\":\"22\",\"98\":\"22#中断\",\"99\":\"22#软中断\",\"100\":\"23\",\"101\":\"23#_1-虚拟内存\",\"102\":\"23#问题背景\",\"103\":\"23#基本概念\",\"104\":\"23#_1-1-内存分段\",\"105\":\"23#内存碎片\",\"106\":\"23#内存交换效率低\",\"107\":\"23#_1-2-内存分页\",\"108\":\"23#简单分页-有缺陷\",\"109\":\"23#多级页表\",\"110\":\"23#tlb\",\"111\":\"23#_1-3-段页式内存管理\",\"112\":\"23#linux内存布局\",\"113\":\"23#内核空间与用户空间的区别\",\"114\":\"23#虚拟内存的作用\",\"115\":\"23#虚拟内存的功能\",\"116\":\"23#虚拟内存管理器\",\"117\":\"24\",\"118\":\"24#内存\",\"119\":\"24#中央处理器\",\"120\":\"24#总线\",\"121\":\"24#输入、输出设备\",\"122\":\"24#存储器的层次结构\",\"123\":\"25\",\"124\":\"25#线程的优势\",\"125\":\"25#理解线程\",\"126\":\"25#线程与进程的比较\",\"127\":\"25#线程的上下文切换\",\"128\":\"25#线程的实现方式\",\"129\":\"25#线程的优劣势\",\"130\":\"26\",\"131\":\"26#用补码的形式保存负数\",\"132\":\"26#十进制小数与二进制的转换\",\"133\":\"26#计算机是怎么存小数的\",\"134\":\"26#在计算机中-0-1-0-2-并不等于完整的-0-3。\",\"135\":\"27\",\"136\":\"27#进程的状态\",\"137\":\"27#进程的控制结构\",\"138\":\"27#进程的控制\",\"139\":\"27#进程的上下文切换\",\"140\":\"28\",\"141\":\"28#http基本概念\",\"142\":\"28#http是什么\",\"143\":\"28#http常见的状态码\",\"144\":\"28#http常见字段有哪些\",\"145\":\"28#get与post请求\",\"146\":\"28#get与post的区别\",\"147\":\"28#get和post的方法都是安全和幂等的吗\",\"148\":\"28#http缓存技术\",\"149\":\"28#强缓存\",\"150\":\"28#协商缓存\",\"151\":\"28#http特性\",\"152\":\"29\",\"153\":\"29#_1-如何避免发送http请求\",\"154\":\"29#_2-如何减少http请求次数\",\"155\":\"29#_3-如何减少http响应的数据大小\",\"156\":\"29#_1-http的性能问题\",\"157\":\"29#_2-兼容http1-1\",\"158\":\"29#_3-头部压缩\",\"159\":\"29#静态表编码\",\"160\":\"29#动态编码表\",\"161\":\"29#_4-二进制帧\",\"162\":\"29#_5-并发传输\",\"163\":\"29#_6-服务器主动推送资源\",\"164\":\"29#_1-http2的问题\",\"165\":\"29#_1-队头阻塞\",\"166\":\"29#_2-tcp与tls的握手延迟\",\"167\":\"29#_3-网络迁移需要重新连接\",\"168\":\"29#_2-quic协议的特点\",\"169\":\"29#_1-无队头阻塞\",\"170\":\"29#_2-更快连接建立\",\"171\":\"29#_3-连接迁移\",\"172\":\"29#_3-http3协议\",\"173\":\"30\",\"174\":\"30#_1-分析性能损耗\",\"175\":\"30#硬件优化\",\"176\":\"30#软件优化\",\"177\":\"30#证书优化\",\"178\":\"30#会话复用\",\"179\":\"30#https中tcp三次握手和tls握手能同时进行吗\",\"180\":\"31\",\"181\":\"31#http和https\",\"182\":\"31#_1-http和https的区别\",\"183\":\"31#_2-https解决了http的那些问题\",\"184\":\"31#如何解决的\",\"185\":\"31#_3-https是如何建立连接的-期间交互了什么\",\"186\":\"31#_4-https的应用数据时如保证完整性的\",\"187\":\"32\",\"188\":\"32#tcp-是有三个特点-面向连接、可靠、基于字节流。\",\"189\":\"32#_1-http和rpc的区别\",\"190\":\"32#_2-websocket是什么\",\"191\":\"33\",\"192\":\"33#apr\",\"193\":\"33#dhcp\",\"194\":\"33#nat\",\"195\":\"33#icmp\",\"196\":\"34\",\"197\":\"34#ping的工作原理\",\"198\":\"34#查询报文类型\",\"199\":\"34#traceroute\",\"200\":\"34#断网了还能ping通127-0-0-1吗\",\"201\":\"34#什么是127-0-0-1\",\"202\":\"34#tcp和ping数据的区别\",\"203\":\"34#为什么断网了还能ping通127-0-0-1\",\"204\":\"34#_127-0-0-1和localhost和0-0-00有什么区别\",\"205\":\"35\",\"206\":\"35#ip基本认识\",\"207\":\"35#ip的基础知识\",\"208\":\"35#ip的分类\",\"209\":\"35#什么是a-b-c类\",\"210\":\"35#什么是d类-e类\",\"211\":\"35#无分类地址cidr\",\"212\":\"35#公有-ip-地址与私有-ip-地址\",\"213\":\"35#ip-地址与路由控制\",\"214\":\"35#ip分片与重组\",\"215\":\"35#ipv6-基本认识\",\"216\":\"35#ipv6的首部改进\",\"217\":\"36\",\"218\":\"36#为什么-time-wait-等待的时间是-2msl\",\"219\":\"36#为什么需要-time-wait-状态\",\"220\":\"36#time-wait-过多有什么危害\",\"221\":\"36#如何优化-time-wait\",\"222\":\"36#服务器出现大量-time-wait-状态的原因有哪些\",\"223\":\"36#服务器出现大量-close-wait-状态的原因有哪些\",\"224\":\"37\",\"225\":\"37#什么是syn攻击-如何避免syn攻击\",\"226\":\"37#什么时syn超时-如何解决syn超时\",\"227\":\"38\",\"228\":\"38#udp和tcp的区别和应用场景\",\"229\":\"38#tcp和udp的区别\",\"230\":\"38#连接\",\"231\":\"39\",\"232\":\"39#针对tcp应该如何socket编程\",\"233\":\"39#listen-时候参数-backlog-的意义\",\"234\":\"39#accept-发生在三次握手的哪一步\",\"235\":\"39#客户端调用-close-了-连接是断开的流程是什么\",\"236\":\"39#服务端没有调用listen-客户端请求建立连接会发生什么\",\"237\":\"39#没有listen可以建立tcp连接吗\",\"238\":\"39#没有accpet-能建立tcp连接吗\",\"239\":\"39#为什么半连接队列要设计成哈希表\",\"240\":\"39#会有一个cookies队列吗\",\"241\":\"39#cookies方案为什么不直接取代半连接队列\",\"242\":\"39#tcp和udp可以同时绑定相同的端口吗\",\"243\":\"39#_1-tcp和udp可以同时绑定相同的端口吗\",\"244\":\"39#_2-多个tcp可以同时绑定一个端口吗\",\"245\":\"39#_3-重启-tcp-服务进程时-为什么会有-address-in-use-的报错信息\",\"246\":\"39#_4-重启-tcp-服务进程时-如何避免-address-in-use-的报错信息\",\"247\":\"39#_5-客户端的端口可以重复使用吗\",\"248\":\"39#_6-多个客户端可以-bind-同一个端口吗\",\"249\":\"39#_7-客户端-tcp-连接-time-wait-状态过多-会导致端口资源耗尽而无法建立新的连接吗\",\"250\":\"40\",\"251\":\"40#如何优化tcp\",\"252\":\"40#tcp三次握手的性能提升\",\"253\":\"40#tcp四次挥手性能的提升\",\"254\":\"40#tcp传输数据的性能提升\",\"255\":\"41\",\"256\":\"41#tcp基本认识\",\"257\":\"41#tcp的头格式\",\"258\":\"41#tcp工作在那一层\",\"259\":\"41#什么是tcp协议\",\"260\":\"41#什么是tcp连接\",\"261\":\"41#如何确定一个tcp连接\",\"262\":\"41#如何理解tcp是基于字节流的协议\",\"263\":\"41#先来说说为什么-udp-是面向报文的协议\",\"264\":\"41#再来说说为什么-tcp-是面向字节流的协议\",\"265\":\"41#tcp半连接队列和全连接队列\",\"266\":\"41#syn报文在什么情况下会被丢弃\",\"267\":\"41#拔掉网线之后-tcp连接会消失吗\",\"268\":\"41#为什么-tcp-tw-reuse-默认是关闭的\",\"269\":\"41#用了tcp传输数据就一定不会丢包吗\",\"270\":\"42\",\"271\":\"42#拥塞控制\",\"272\":\"42#慢启动\",\"273\":\"42#拥塞避免\",\"274\":\"42#拥塞发生\",\"275\":\"42#快速恢复\",\"276\":\"43\",\"277\":\"43#滑动窗口\",\"278\":\"43#窗口大小由哪一方决定\",\"279\":\"43#发送方的滑动窗口\",\"280\":\"43#程序如何表示发送方的四个部分呢\",\"281\":\"43#接收方的滑动窗口\",\"282\":\"43#接收窗口和发送窗口的大小是相等的吗\",\"283\":\"43#流量控制\",\"284\":\"43#操作系统缓冲区和滑动窗口的关系\",\"285\":\"43#窗口关闭\",\"286\":\"43#糊涂窗口综合征\",\"287\":\"44\",\"288\":\"44#tcp的重传机制\",\"289\":\"44#_1-超时重传\",\"290\":\"44#_2-快速重传\",\"291\":\"44#_3-sack方法\",\"292\":\"44#_4-duplicate-sack\",\"293\":\"45\",\"294\":\"45#tcp连接的建立\",\"295\":\"45#为什么是三次握手\",\"296\":\"45#为什么每次建立tcp链接的时候-初始化序列号的都要求不一样\",\"297\":\"45#初始序列号isn是如何随机产生的\",\"298\":\"45#既然ip层会分片-为什么tcp层还需要mss\",\"299\":\"45#当第一次握手丢失\",\"300\":\"45#第二次握手丢失\",\"301\":\"45#第三次握手丢失\",\"302\":\"45#为什么每次建立tcp连接-初始化序列号都要不一样\",\"303\":\"45#tcp-序列号和确认号是如何变化的\",\"304\":\"45#万能公式\",\"305\":\"45#已建立的tcp连接-收到syn会发生什么\",\"306\":\"45#killcx-的工具\",\"307\":\"45#tcpkill-的工具\",\"308\":\"45#tcp-的-keepalive-和-http-的-keep-alive-是一个东西吗\",\"309\":\"46\",\"310\":\"46#tcp断开连接\",\"311\":\"46#tcp的四次挥手\",\"312\":\"46#第一次挥手丢失\",\"313\":\"46#第二次挥手丢失\",\"314\":\"46#第三次挥手丢失\",\"315\":\"46#第四次挥手丢失\",\"316\":\"46#tcp四次挥手可以变成三次吗\",\"317\":\"46#粗暴关闭vs优雅关闭\",\"318\":\"46#什么情况下会出现三次挥手\",\"319\":\"46#四次挥手中收到乱序的fin包怎么办\",\"320\":\"46#在time-wait状态的tcp接收到syn报文会怎么样\",\"321\":\"46#syn合法\",\"322\":\"46#syn非法\",\"323\":\"46#在-time-wait-状态-收到-rst-会断开连接吗\",\"324\":\"46#如果已经建立了链接-客户端突然挂怎么办\",\"325\":\"46#如果已经建立了链接-服务端突然挂怎么办\",\"326\":\"46#tcp连接-一端断电和进程崩溃有什么区别\",\"327\":\"46#客户端主机宕机又重启\",\"328\":\"47\",\"329\":\"47#如何基于udp实现可靠传输\",\"330\":\"47#quic是如何实现可靠传输的\",\"331\":\"47#packet-header\",\"332\":\"47#quic-frame-header\",\"333\":\"47#quic-是如何解决-tcp-队头阻塞问题的\",\"334\":\"47#quic-是如何做流量控制的\",\"335\":\"47#quic-对拥塞控制改进\",\"336\":\"47#quic-更快的连接建立\",\"337\":\"47#quic-是如何迁移连接的\",\"338\":\"48\",\"339\":\"48#网络模型\",\"340\":\"49\",\"341\":\"49#应用层\",\"342\":\"49#用户态和内核态\",\"343\":\"49#传输层-作为传输媒介\",\"344\":\"49#网络层-有着实际的传输功能\",\"345\":\"49#ip协议的寻址作用\",\"346\":\"49#ip协议还可以路由\",\"347\":\"49#网络接口层\",\"348\":\"50\",\"349\":\"50#_1-浏览器第一步工作是解析ulr-然后生产http请求消息-然后会委托操作系统发送消息\",\"350\":\"50#_2-在发送之前-必须查询服务器域名对应的ip地址-在委托操作系统发送消息时必须提供通讯对象的ip地址\",\"351\":\"50#dns服务器-专门保存了-web-服务器域名与-ip-的对应关系\",\"352\":\"50#只指路不带路\",\"353\":\"50#_3-通过dns获取到ip后-把传输工作给操作系统中的协议栈\",\"354\":\"50#_4-http协议是基于tcp协议传输的\",\"355\":\"50#_1-第一次握手\",\"356\":\"50#_2-第二次握手\",\"357\":\"50#_3-第三次握手\",\"358\":\"50#完整的tcp报文\",\"359\":\"50#_4-ip\",\"360\":\"50#_5-mac\",\"361\":\"50#_5-网卡-真正的数据发送\",\"362\":\"50#_6-交换机\",\"363\":\"50#_7-路由器\",\"364\":\"50#_8-客户端-服务器\",\"365\":\"51\",\"366\":\"52\",\"367\":\"53\",\"368\":\"54\",\"369\":\"55\",\"370\":\"56\",\"371\":\"57\",\"372\":\"58\",\"373\":\"59\",\"374\":\"60\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2],\"1\":[2],\"2\":[2],\"3\":[2],\"4\":[2],\"5\":[2],\"6\":[2],\"7\":[2],\"8\":[2],\"9\":[2],\"10\":[2],\"11\":[2],\"12\":[2],\"13\":[2],\"14\":[2],\"15\":[2],\"16\":[1],\"17\":[1],\"18\":[2,16],\"19\":[2,16],\"20\":[2,61],\"21\":[2,9],\"22\":[2,12],\"23\":[2,17],\"24\":[2,111],\"25\":[2,17],\"26\":[1],\"27\":[1,83],\"28\":[1],\"29\":[1],\"30\":[1],\"31\":[1,53],\"32\":[1],\"33\":[1,95],\"34\":[1,136],\"35\":[2],\"36\":[3],\"37\":[1],\"38\":[1,43],\"39\":[1,41],\"40\":[1,66],\"41\":[1,113],\"42\":[1],\"43\":[1,65],\"44\":[1,137],\"45\":[1],\"46\":[7],\"47\":[1],\"48\":[2],\"49\":[3],\"50\":[3],\"51\":[3],\"52\":[3],\"53\":[3],\"54\":[2],\"55\":[2],\"56\":[3],\"57\":[1],\"58\":[2],\"59\":[2],\"60\":[2],\"61\":[1],\"62\":[2],\"63\":[2],\"64\":[2],\"65\":[2],\"66\":[3],\"67\":[3],\"68\":[2],\"69\":[2],\"70\":[4],\"71\":[5],\"72\":[2],\"73\":[4],\"74\":[4],\"75\":[2],\"76\":[2],\"77\":[4],\"78\":[1],\"79\":[1],\"80\":[3],\"81\":[2],\"82\":[1],\"83\":[3],\"84\":[1],\"85\":[3],\"86\":[1],\"87\":[1],\"88\":[2],\"89\":[1],\"90\":[1],\"91\":[3],\"92\":[1],\"93\":[1],\"94\":[1],\"95\":[1],\"96\":[2],\"97\":[2],\"98\":[1],\"99\":[1],\"100\":[1],\"101\":[2],\"102\":[1],\"103\":[1],\"104\":[2],\"105\":[1],\"106\":[1],\"107\":[3],\"108\":[3],\"109\":[1],\"110\":[1],\"111\":[3],\"112\":[1],\"113\":[1],\"114\":[1],\"115\":[1],\"116\":[1],\"117\":[1],\"118\":[2],\"119\":[2],\"120\":[2],\"121\":[2],\"122\":[1],\"123\":[1],\"124\":[1],\"125\":[1],\"126\":[1],\"127\":[1],\"128\":[1],\"129\":[1],\"130\":[1],\"131\":[2],\"132\":[1],\"133\":[2],\"134\":[1],\"135\":[1],\"136\":[2],\"137\":[2],\"138\":[1],\"139\":[1],\"140\":[1],\"141\":[1],\"142\":[2],\"143\":[2],\"144\":[2],\"145\":[2],\"146\":[2],\"147\":[2],\"148\":[1],\"149\":[2],\"150\":[2],\"151\":[2],\"152\":[1],\"153\":[2],\"154\":[2],\"155\":[3],\"156\":[2],\"157\":[3],\"158\":[2],\"159\":[1],\"160\":[1],\"161\":[2],\"162\":[2],\"163\":[2],\"164\":[2],\"165\":[3],\"166\":[2],\"167\":[2],\"168\":[2],\"169\":[2],\"170\":[2],\"171\":[2],\"172\":[2],\"173\":[1],\"174\":[2],\"175\":[1],\"176\":[1],\"177\":[1],\"178\":[1],\"179\":[1],\"180\":[1],\"181\":[2],\"182\":[3],\"183\":[3],\"184\":[2],\"185\":[4],\"186\":[2],\"187\":[1],\"188\":[4],\"189\":[2],\"190\":[2],\"191\":[1],\"192\":[2],\"193\":[2],\"194\":[2],\"195\":[2],\"196\":[1],\"197\":[1],\"198\":[1],\"199\":[2],\"200\":[4],\"201\":[3],\"202\":[2],\"203\":[4],\"204\":[5],\"205\":[1],\"206\":[1],\"207\":[1],\"208\":[2],\"209\":[4],\"210\":[3],\"211\":[1],\"212\":[4],\"213\":[2],\"214\":[1],\"215\":[2],\"216\":[2],\"217\":[3],\"218\":[6],\"219\":[5],\"220\":[4],\"221\":[4],\"222\":[5],\"223\":[5],\"224\":[1],\"225\":[3],\"226\":[3],\"227\":[1],\"228\":[2],\"229\":[2],\"230\":[2],\"231\":[1],\"232\":[2],\"233\":[5],\"234\":[3],\"235\":[5],\"236\":[3],\"237\":[2],\"238\":[3],\"239\":[2],\"240\":[1],\"241\":[2],\"242\":[2],\"243\":[3],\"244\":[2],\"245\":[1],\"246\":[10],\"247\":[1],\"248\":[1],\"249\":[9],\"250\":[1],\"251\":[2],\"252\":[2],\"253\":[2],\"254\":[2],\"255\":[1],\"256\":[1],\"257\":[2],\"258\":[2],\"259\":[2],\"260\":[2],\"261\":[2],\"262\":[2],\"263\":[4],\"264\":[4],\"265\":[1],\"266\":[2],\"267\":[3],\"268\":[1],\"269\":[2],\"270\":[1],\"271\":[2],\"272\":[1],\"273\":[1],\"274\":[1],\"275\":[1],\"276\":[1],\"277\":[1],\"278\":[2],\"279\":[2],\"280\":[2],\"281\":[2],\"282\":[2],\"283\":[1],\"284\":[2],\"285\":[1],\"286\":[1],\"287\":[1],\"288\":[1],\"289\":[2],\"290\":[2],\"291\":[2],\"292\":[3],\"293\":[1],\"294\":[2],\"295\":[2],\"296\":[3],\"297\":[2],\"298\":[3],\"299\":[2],\"300\":[2],\"301\":[2],\"302\":[3],\"303\":[3],\"304\":[1],\"305\":[3],\"306\":[2],\"307\":[2],\"308\":[1],\"309\":[1],\"310\":[1],\"311\":[2],\"312\":[2],\"313\":[2],\"314\":[2],\"315\":[1],\"316\":[2],\"317\":[2],\"318\":[2],\"319\":[1],\"320\":[3],\"321\":[2],\"322\":[2],\"323\":[8],\"324\":[2],\"325\":[2],\"326\":[3],\"327\":[2],\"328\":[1],\"329\":[1],\"330\":[2],\"331\":[2],\"332\":[3],\"333\":[5],\"334\":[3],\"335\":[2],\"336\":[2],\"337\":[3],\"338\":[1],\"339\":[2],\"340\":[1],\"341\":[2],\"342\":[2],\"343\":[3],\"344\":[3],\"345\":[2],\"346\":[1],\"347\":[2],\"348\":[2],\"349\":[4],\"350\":[3],\"351\":[4],\"352\":[1],\"353\":[3],\"354\":[2],\"355\":[2],\"356\":[2],\"357\":[2],\"358\":[2],\"359\":[2],\"360\":[2],\"361\":[4],\"362\":[2],\"363\":[2],\"364\":[3],\"365\":[1,3],\"366\":[1],\"367\":[2],\"368\":[1],\"369\":[1],\"370\":[1],\"371\":[1],\"372\":[1],\"373\":[1],\"374\":[1]},\"averageFieldLength\":[2.0053333333333345,27.38803587509289],\"storedFields\":{\"0\":{\"h\":\"🌟 Flipped的个人介绍页 🌟\"},\"1\":{\"h\":\"📋 个人信息\"},\"2\":{\"h\":\"📝 简介\"},\"3\":{\"h\":\"🚀 技能\"},\"4\":{\"h\":\"🖥️ 编程语言\"},\"5\":{\"h\":\"🌐 前端技术\"},\"6\":{\"h\":\"🛠️ 后端技术\"},\"7\":{\"h\":\"🗄️ 数据库\"},\"8\":{\"h\":\"🔧 工具\"},\"9\":{\"h\":\"📚 项目经验\"},\"10\":{\"h\":\"📦 项目名称1\"},\"11\":{\"h\":\"📝 项目名称2\"},\"12\":{\"h\":\"🎓 教育背景\"},\"13\":{\"h\":\"🎖️ 证书\"},\"14\":{\"h\":\"🎨 兴趣爱好\"},\"15\":{\"h\":\"💬 个人格言\"},\"16\":{\"h\":\"LeetCode\"},\"17\":{\"h\":\"学习笔记\"},\"18\":{\"h\":\"1148.游戏玩法分析\",\"t\":[\"-- LeetCode -- 1148.文章浏览I select author_id as id from Views where viewer_id = author_id group by author_id order by id\"]},\"19\":{\"h\":\"1527.患有某种疾病的患者\",\"t\":[\"-- LeetCode -- 1527.患有某种疾病的患者 SELECT patient_id, patient_name, conditions FROM Patients WHERE conditions LIKE 'DIAB1%' OR conditions LIKE '% DIAB1%'; -- 用LIKE查找含有DIAB1为前缀的conditions\"]},\"20\":{\"h\":\"176`177.第N高的数据\",\"t\":[\"-- LeetCode -- 176.第二高的薪水 SELECT MAX(salary) AS SecondHighestSalary FROM Employee WHERE salary < ( SELECT MAX(salary) FROM Employee ) -- 子查询找到最大的 `salary`,外层查询找到出最大值的剩余数中的最大值 SELECT (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET 1) AS SecondHighestSalary -- 由于需要输出null，使用 LIMIT 1 OFFSET 1 时，如果表中的行数少于2行，即只有1行或者为空，那么查询将不会返回任何结果，包括 null，所以将查询设为一个子查询，这样外层查询在无数据查询的情况下会返回一个null SELECT IFNULL( (SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET 1), NULL) AS SecondHighestSalary -- 使用IFNULL，将空值的情况返回一个NULL值 -- 177.第N高的薪水 CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN DECLARE M INT; SET M=N-1; RETURN ( SELECT IFNULL( ( SELECT DISTINCT salary FROM Employee ORDER BY salary DESC LIMIT 1 OFFSET M ),null) AS getNthHighestSalary ); END -- 在 LIMIT 子句中使用 OFFSET 时，不能直接将参数N递给 OFFSET。参数必须是一个常量或一个变量，不能是函数参数。 -- DECLARE M INT 声明了一个变量 -- SET M = N-1 赋值\"]},\"21\":{\"h\":\"1.\",\"t\":[\"这种语法用于从查询结果的第 M 行开始，返回接下来的1行数据。\",\"这里的 M 是一个整数，表示从结果集的哪一条记录开始返回数据。\",\"这种语法通常用于分页或获取某一个特定位置的记录。\"]},\"22\":{\"h\":\"2.\",\"t\":[\"这种语法用于跳过查询结果的前 offset 条记录，然后返回接下来的 count 条记录。\",\"offset 是一个整数，表示要跳过的记录数。\",\"count 也是一个整数，表示在跳过 offset 条记录后，要返回的记录数。\"]},\"23\":{\"h\":\"2356.每位教师所教授的科目种类的数量\",\"t\":[\"-- LeetCode -- 2356.每位教师所教授的科目种类的数量 select teacher_id, count(distinct subject_id ) as cnt from Teacher group by teacher_id -- 用distinct去重\"]},\"24\":{\"h\":\"551.游戏玩法分析\",\"t\":[\"-- LeetCode -- 551.游戏玩法分析 select player_id,min(event_date) as first_login from Activity group by player_id -- 简短，易懂 select distinct A.player_id, FIRST_VALUE(A.event_date)Over( PARTITION BY A.player_id ORDER BY A.event_date ) AS first_login from Activity as A -- PARTITION BY A.player_id：这表示窗口函数将按 player_id 进行分区。每个不同的 player_id 都会创建一个独立的分区。 -- ORDER BY A.event_date：这表示在每个分区内，数据将按 event_date 升序排序。FIRST_VALUE() 将返回每个分区内第一个（最早的）event_date。\",\"SUM(amount) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS sum_past_6_days -- 计算当前行和前六行的数据的amount的总和 COUNT(*) OVER (ORDER BY visited_on ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS days_count -- 计数前六行和当前行的数据 ROW_NUMBER() OVER (ORDER BY visited_on) AS rn -- ROW_NUMBER()：为结果集中的每一行分配一个唯一的序号，通常基于ORDER BY子句定义的顺序。 RANK()：为结果集中的每一行分配一个排名，排名相同（即并列）的行会得到相同的排名，后续的排名会跳过。 DENSE_RANK()：与RANK()类似，但是排名不会跳过，即使存在并列排名。 NTILE(n)：将结果集分为n个大致相等的组，返回每行所属的组号。 LEAD(column)：返回当前行之后第n行的数据，如果没有后续行，则返回NULL。 LAG(column)：返回当前行之前第n行的数据，如果没有前面的行，则返回NULL。 FIRST_VALUE() 是一个窗口函数，它返回在每个分区内按指定顺序的第一个值。 FIRST_VALUE(A.event_date) OVER ( PARTITION BY A.player_id ORDER BY A.event_date ) -- PARTITION BY A.player_id：这表示窗口函数将按 player_id 进行分区。每个不同的 player_id 都会创建一个独立的分区。 -- ORDER BY A.event_date：这表示在每个分区内，数据将按 event_date 升序排序。FIRST_VALUE() 将返回每个分区内第一个（最早的）event_date。 LAST_VALUE()：返回窗口定义中指定的排序后最后一行的数据。 SUM()：计算窗口中的总和。 AVG()：计算窗口中的平均值。 MIN()：找到窗口中的最小值。 MAX()：找到窗口中的最大值。 STDDEV_POP()：计算窗口内值的总体标准差。 STDDEV_SAMP()：计算窗口内值的样本标准差。 VAR_POP()：计算窗口内值的总体方差。 VAR_SAMP()：计算窗口内值的样本方差。 PERCENT_RANK()：返回窗口中每行的百分比排名。 CUME_DIST()：返回当前行及其之前所有行的累积分布。 #todo 窗口函数通常搭配OVER()函数使用\"]},\"25\":{\"h\":\"586.订单最多的客户\",\"t\":[\"-- LeetCode -- 586.订单最多的客户 select customer_number from Orders Group by customer_number order by count(*) desc limit 1 -- 用limit限制返回一行数据\"]},\"26\":{\"h\":\"SQL的DCL\"},\"27\":{\"h\":\"DCL\",\"t\":[\"DCL数据控制语言，用来创建数据库用户,控制数据库的访问权限\",\"1. 查询用户 USE mysql; SELECT * FROM `user`; 2. 创建用户 CREATE USER '用户名'@'主机名' IDENTIFIED BY '密码'; 3. 修改用户密码 ALTER USER '用户名'@'主机名' IDENTIFIED WITH mysql_native_password BY '新密码'; 4. 删除用户 DROP USER '用户名'@'主机名'; #创建用户只能在当前主机上访问，密码123456 CREATE USER 'main'@'localhost' IDENTIFIED BY '123456'; #创建用户能在任意主机上访问，密码123456 CREATE USER 'main'@'%' IDENTIFIED BY '123456'; #修改用户密码 ALTER USER 'mian'@'%' IDENTIFIED WITH mysql_native_password BY '1234'; #删除用户 DROP USER 'mian'@'localhost';\",\"注意:\",\"主机名可以使用%通配。\",\"这类SQL开发人员操作的比较少,主要是DBA(Database Administrator 数据库管理员)使用。\",\"权限\",\"说明\",\"ALL, ALL PRIVILEGES\",\"所有权限\",\"SELECT\",\"查询数据\",\"INSERT\",\"插入数据\",\"UPDATE\",\"修改数据\",\"DELETE\",\"删除数据\",\"ALTER\",\"修改表\",\"DROP\",\"删除数据库/表/视图\",\"CREATE\",\"创建数据库/表\",\"1. 查询权限 SHOW GRANTS FOR '用户名’@'主机名’; 2. 授予权限 GRANT 权限列表 ON 数据库名.表名 TO '用户名'@'主机名'; 3. 撤销权限 REVOKE 权限列表 ON 数据库名.表名 FROM '用户名'@'主机名';\",\"注意:\",\"多个权限之间,使用逗号分隔\",\"授权时,数据库名和表名可以使用*进行通配,代表所有。\"]},\"28\":{\"h\":\"SQL的DDL\"},\"29\":{\"h\":\"DDL\"},\"30\":{\"h\":\"SQL的DML\"},\"31\":{\"h\":\"DML\",\"t\":[\"DML数据库操作语言，用来对数据库表中的数据进行增删改查\",\"#给指定字段添加数据 INSERT INTO 表名(字段名1，字段名2,...)VALUE(值1，值2) #例子 INSERT INTO `flipped-user1`(`NAME`，`AGE`)VALUE('ALice',30) #给全部的字段添加数据 INSERT INTO 表名 VALUES(值1，值2,..) #例子 INSERT INTO `flipped-user1`VALUES(NULL,'Alice',30); #批量添加数据 INSERT INTO 表名(字段名1,字段名2, .. )VALUES(值1,值2,.),(值1,值2, .. ),(值1,值2, ... ); INSERT INTO 表名VALUES(值1,值2,.),(值1,值2, .. ),(值1,值2, ... ); #例子 INSERT INTO `flipped-user1` (`NAME`, `AGE`) VALUES ('Alice', 2), ('Bob', 3), ('Charlie', 4); #修改数据 UPDATE 表名 SET 字段名1=值1,字段名2=值2,...[WHERE 条件]; #例子 UPDATE `flipped-user1`SET name = '倪浩' WHERE name='flipped'; #删除数据（NULL 是一个特殊的值，不能使用普通的等号（=）进行比较，应该使用 IS NULL 进行比较） DELETE FROM 表名 [WHERE 条件] DELETE FROM `flipped-user1` WHERE `name` IS NULL;\"]},\"32\":{\"h\":\"SQL的DQL\"},\"33\":{\"h\":\"DQL\",\"t\":[\"DQL数据查询语言，用来查询数据库中表的记录\",\"FROM: 确定要查询的表。 JOIN: 如果有多表查询，处理表连接。 WHERE: 过滤符合条件的记录。 GROUP BY: 将记录进行分组。 HAVING: 过滤分组后的记录。 SELECT: 选择要返回的列。 DISTINCT: 去除重复的记录。 ORDER BY: 对记录进行排序。 LIMIT/OFFSET: 返回限定的记录数。 #基本查询 1.查询多个字段 SELECT 字段1，字段2，字段3....FROM 表名; SELECT * FROM 表名; 2.设置别名 SELECT 字段1[AS 别名1],字段2[AS 别名2]...FROM 表名; #例子 SELECT `workadress` AS '工作地点' FROM `emp`; 也可以省去AS SELECT `workadress` '工作地点' FROM `emp`; 3.去除重复记录 SELECT DISTINCT 字段列表 FROM 表名; #例子 SELECT DISTINCT `workadress` '工作地点' FROM `emp`; #条件查询 SELECT 字段列表 FROM 表名 WHERE 条件列表; #例子 SELECT * FROM `emp` WHERE `idcard` IS NOT NULL; SELECT * FROM `emp` WHERE `age` > 15 AND `age` < 20; SELECT * FROM `emp` WHERE `age` BETWEEN 15 AND 20; SELECT * FROM `emp` WHERE `age`= 18 OR `age`= 20 OR `age`= 40; SELECT * FROM `emp` WHERE `age` IN(18,20,40); 查询两个字的姓名 SELECT * FROM `emp` WHERE `name` LIKE '__';\",\"比较运算符\",\"功能\",\">\",\"大于\",\">=\",\"大于等于\",\"<\",\"小于\",\"<=\",\"小于等于\",\"=\",\"等于\",\"<> 或 !=\",\"不等\",\"BETWEEN ... AND ...\",\"在某个范围之内(含最小、最大值)\",\"IN( ... )\",\"在in之后的列表中的值,多选一\",\"LIKE 占位符\",\"模糊匹配(_匹配单个字符,%匹配任意个字符)\",\"IS NULL\",\"是NULL\",\"逻辑运算符\",\"功能\",\"AND 或 &&\",\"并且(多个条件同时成立)\",\"OR 或Ⅱ\",\"或者(多个条件任意一个成立)\",\"NOT 或!\",\"非,不是\"]},\"34\":{\"h\":\"聚合函数\",\"t\":[\"函数\",\"功能\",\"count\",\"统计数量\",\"max\",\"最大值\",\"min\",\"最小值\",\"avg\",\"平均值\",\"sum\",\"求和\",\"SELECT 聚合函数(字段列表) FROM 表名; #统计数量 SELECT COUNT(*) FROM `emp`; SELECT COUNT(`id`) FROM `emp`; #统计平均数 SELECT AVG(`age`) FROM `emp`; #统计最大值 SELECT MAX(`age`) FROM `emp`; #最小值 SELECT MIN(`age`) FROM `emp`; SELECT SUM(`age`) FROM `emp` WHERE `workadress` = `西安`;\",\"SELECT 字段列表 FROM 表名[WHERE 条件]GROUP BY 分组字段[HAVING 分组后的过滤条件]; #根据性别分组，并计算总和 SELECT `gender` ,COUNT(*) FROM `emp` GROUP BY `gender`; #根据性别分组，并计算年龄平均值 SELECT `gender`, AVG(`age`) FROM `emp` GROUP BY `gender`; #查询年龄小于45，根据工作地址分组，并获取人数大于三的工作地址 SELECT `workadress`, COUNT(*) FROM `emp`WHERE `age` < 45 GROUP BY `workadress` HAVING COUNT(*) > 3;\",\"1.where与having区别\",\"执行时机不同: where是分组之前进行过滤,不满足where条件,不参与分组;而having是分组之后对结果进行过滤。\",\"判断条件不同:where不能对聚合函数进行判断,而having可以。\",\"注意· 执行顺序:where>聚合函数>having。· 分组之后,查询的字段一般为聚合函数和分组字段,查询其他字段无任何意义。\",\"SELECT 字段列表 FROM 表名 ORDER BY 字段1 排序方式1，字段2 排序方式2; #根据年龄进行升序排序 SELECT * FROM `emp` ORDER BY `age` ASC; #根据年龄进行升序排序，如果年龄相同，再按照入职时间进行降序排序 SELECT * FROM `emp` ORDER BY `age` ASC, `entrydate` DESC;\",\"排序方式\",\"ASC: 升序(默认值)\",\"DESC: 降序\",\"注意:如果是多字段排序,当第一个字段值相同时,才会根据第二个字段进行排序。\",\"SELECT 字段列表 FROM 表名 LIMIT 起始索引,查询记录数; #查询第一页数据，每页展示十条数据 SELECT * FROM `emp` LIMIT 0,10; #查询第二页数据，每页展示十条数据 SELECT * FROM `emp` LIMIT 10,10;\",\"注意\",\"*起始索引从0开始,起始索引=(查询页码-1)每页显示记录数。\",\"分页查询是数据库的方言,不同的数据库有不同的实现,MySQL中是LIMIT。\",\"如果查询的是第一页数据,起始索引可以省略,直接简写为limit 10。\",\"1. 查询年龄为20,21,22,23岁的员工信息。 2. 查询性别为男,并且年龄在20-40岁(含)以内的姓名为三个字的员工。 3. 统计员工表中,年龄小于60岁的,男性员工和女性员工的人数。 4. 查询所有年龄小于等于35岁员工的姓名和年龄,并对查询结果按年龄升序排序,如果年龄相同按入职时间降序排序。 5. 查询性别为男,且年龄在20-40岁(含)以内的前5个员工信息,对查询的结果按年龄升序排序,年龄相同按入职时间升序排序。 SELECT * FROM `emp` WHERE `age` IN (20,21,22,23); SELECT * FROM `emp` WHERE `age`>=20 AND `age`<=40 AND `name` LIKE '___'; SELECT `gender`, COUNT(*) FROM `emp` WHERE `age` < 60 GROUP BY `gender`; SELECT `name`,`age` FROM `emp` WHERE `age`<=35 ORDER BY `age` , `entrydate` DESC; SELECT * FROM `emp` WHERE `gender` = '男' AND `age`>=20 AND `age`<=40 ORDER BY `entydate` ASC LIMIT 5 ;\"]},\"35\":{\"h\":\"EXPLAIN 一个SQL语句\"},\"36\":{\"h\":\"EXPLAIN 一个SQL语句可以查询到什么？\"},\"37\":{\"h\":\"SQL中的函数\"},\"38\":{\"h\":\"字符串函数\",\"t\":[\"函数\",\"功能\",\"CONCAT(S1,S2,….Sn)\",\"字符串拼接,将S1,S2,…Sn拼接成一个字符串\",\"LOWER(str)\",\"将字符串str全部转为小写\",\"UPPER(str)\",\"将字符串str全部转为大写\",\"LPAD(str,n,pad)\",\"左填充,用字符串pad对str的左边进行填充,达到n个字符串长度\",\"RPAD(str,n,pad)\",\"右填充,用字符串pad对str的右边进行填充,达到n个字符串长度\",\"TRIM(str)\",\"去掉字符串头部和尾部的空格\",\"SUBSTRING(str,start,len)\",\"返回从字符串str从start位置起的len个长度的字符串\",\"#由于业务需求变更,企业员工的工号,统一为5位数,目前不足5位数的全部在前面补0。比如:1号员工的工号应该为00001。 UPDATE `emp` SET `workon` = LPAD(`workon`,5,'0');\"]},\"39\":{\"h\":\"数值函数\",\"t\":[\"函数\",\"功能\",\"CEIL(x)\",\"向上取整\",\"FLOOR(×)\",\"向下取整\",\"MOD(x,y)\",\"返回x/y的模\",\"RAND()\",\"返回0~1内的随机数\",\"ROUND(x,y)\",\"求参数x的四舍五入的值,保留y位小数\",\"-- ceil select ceil(1.1); #结果2 -- floor select floor(1.9); #结果1 -- mod select mod(3,4); #结果3 取余 -- rand select rand(); #0-1内的随机数 -- round select round(2.34,2); #通过数据库的函数,生成一个六位数的随机验证码。 select lpad(round(rand() * 1000000,0),6,'0');\"]},\"40\":{\"h\":\"日期函数\",\"t\":[\"函数\",\"功能\",\"CURDATE()\",\"返回当前日期\",\"CURTIME()\",\"返回当前时间\",\"NOW()\",\"返回当前日期和时间\",\"YEAR(date)\",\"获取指定date的年份\",\"MONTH(date)\",\"获取指定date的月份\",\"DAY(date)\",\"获取指定date的日期\",\"DATE_ADD(date, INTERVAL expr type)\",\"返回一个日期/时间值加上一个时间间隔expr后的时间值\",\"DATEDIFF(date1,date2)\",\"返回起始时间date1和 结束时间date2之间的天数\",\"DATE_SUB(date, INTERVAL value unit)\",\"从指定的日期或时间值中减去指定的时间间隔。\",\"select curdate();#获取当前日期 select curtime();#获取当前时间 select now();#获取当前日期和时间 select YEAR(now());#获取当前年份 select MONTH(now());#获取当前月份 select DAY(now());#获取当前的日期（某一日） select date_add(now(),INTERVAL 60 DAY);#间隔60天 select DATE_SUB(date, INTERVAL value unit) #从指定的日期或时间值中减去指定的时间间隔。 select datediff('2018-09-01','2024-12-18')#求取两个时间之间的天数（第一个减第二个时间） #查询所有员工入职天数，并根据入职天数倒序排序 select `name`,datediff(curdate(),`entrydate`) as 'entrydates' from `emp` order by 'entrydates' de;\"]},\"41\":{\"h\":\"流程函数\",\"t\":[\"函数\",\"功能\",\"IF(value , t, f)\",\"如果value为true，则返回t，否则返回f\",\"IFNULL(value1, value2)\",\"如果value1不为空，返回value1，否则返回value2\",\"CASE WHEN [val1] THEN [res1] ... ELSE[default] END\",\"如果val1为true，返回res1，... 否则返回default默认值\",\"CASE[expr] WHEN [val1] THEN [res1] ...ELSE[default] END\",\"如果expr的值等于val1，返回res1，...否则返回default默认值\",\"select if(true,\\\"ok\\\",\\\"error\\\"); select ifnull(\\\"ok\\\",\\\"default\\\") -- 需求: 查询emp 表的员工姓名和工作地址(北京/上海 ---> 一线城市 ， 其他 ---> 二线城市) select `name`, (case `address` when '北京' then '一线城市' when '上海' then '一线城市' else '二线城市' end) as '工作地址' from emp; -- 案例: 统计班级各个学员的成绩，展示的规则如下: -- >= 85，展示优秀 -- >= 60，展示及格 -- 否则，展示不及格 create table score( id int comment 'ID', name varchar(20) comment '姓名', math int comment '数学', english int comment '英语', chinese int comment '语文' )comment '学员成绩表'; insert into score (id, name, math, english, chinese) values (1, 'Tom', 67, 88, 95), (2, 'Rose', 23, 66, 90), (3, 'Jack', 56, 98, 76); SELECT id, `name`, (case WHEN `math` >=85 THEN '优秀' WHEN `math` >=60 THEN '及格' ELSE '不及格' END)AS '数学', `english`, `chinese` FROM `score`;\"]},\"42\":{\"h\":\"SQL的约束\"},\"43\":{\"h\":\"约束\",\"t\":[\"概念:约束是作用于表中字段上的规则，用于限制存储在表中的数据。 目的:保证数据库中数据的正确、有效性和完整性\",\"分类\",\"描述\",\"关键字\",\"非空约束\",\"限制该字段数据不能为NULL\",\"NOT NULL\",\"唯一约束\",\"保证该字段的所有数据都是唯一，不重复的\",\"UNIOUE\",\"主键约束\",\"主键是一行数据的唯一标识，要求非空且唯一\",\"PRIMARY KEY\",\"默认约束\",\"保存数据时，如果未指定该字段的值，则采用默认值\",\"DEFAULT\",\"检查约束(8.0.16版本之后)\",\"保证字段值满足某一个条件\",\"CHECK\",\"外键约束\",\"用来让两张表的数据之间建立连接，保证数据的一致性和完整性\",\"FOREIGN KEY\",\"CREATE TABLE user ( id INT PRIMARY KEY AUTO_INCREMENT COMMENT '主键', name VARCHAR(10) NOT NULL UNIQUE COMMENT '姓名', age INT CHECK (age > 0 AND age <= 120) COMMENT '年龄', status CHAR(1) DEFAULT '1' COMMENT '状态', gender CHAR(1) COMMENT '性别' ) COMMENT '用户表';\"]},\"44\":{\"h\":\"外键约束\",\"t\":[\"概念：外键用来让两张表的数据之间建立连接，从而保证数据的一致性和完整性\",\"-- 创建表 dept CREATE TABLE dept ( id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'ID', name VARCHAR(50) NOT NULL COMMENT '部门名称' ) COMMENT '部门表'; -- 插入数据 INSERT INTO dept (id, name) VALUES (1, '研发部'), (2, '市场部'), (3, '财务部'), (4, '销售部'), (5, '总经办'); -- 创建表 emp CREATE TABLE emp ( id INT AUTO_INCREMENT PRIMARY KEY COMMENT 'ID', name VARCHAR(50) NOT NULL COMMENT '姓名', age INT COMMENT '年龄', job VARCHAR(20) COMMENT '职位', salary INT COMMENT '薪资', entrydate DATE COMMENT '入职时间', managerid INT COMMENT '直属领导ID', dept_id INT COMMENT '部门ID' ) COMMENT '员工表'; -- 插入数据 INSERT INTO emp (name, age, job, salary, entrydate, managerid, dept_id) VALUES ('金庸', 66, '总裁', 20000, '2000-01-01', NULL, 5), ('张无忌', 20, '项目经理', 12500, '2005-12-05', 1, 1), ('杨道', 33, '开发', 8400, '2000-11-03', 2, 1), ('韦一笑', 48, '开发', 11000, '2002-08-05', 2, 1), ('常遇春', 43, '开发', 10580, '2004-09-07', 3, 1), ('小昭', 19, '程序员鼓励师', 6600, '2004-10-12', 2, 1); -- 添加外键 ALTER TABLE emp ADD CONSTRAINT fk_emp_dept_id FOREIGN KEY (dept_id) REFERENCES dept(id); -- 删除外键 ALTER TABLE emp DROP FOREIGN KEY fk_emp_dept_id;\",\"-- 添加外键 CREATE TABLE 表名( 字段名 数据类型 ... [CONSTRAINT] [外键名称] FOREIGN KEY(外键字段名) REFERENCES 主表(主表列名) ); ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY(外键字段) REFERENCES 主表(主表列名); -- 删除外键 ALTER TABLE 表名 DROP FOREIGN KEY 外键名称;\",\"外键的(删除/更新)行为：\",\"行为\",\"说明\",\"NO ACTION\",\"当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新。(与 RESTRICT一致)\",\"RESTRICT\",\"当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除/更新。(与NO ACTION 一致\",\"CASCADE\",\"当在父表中删除/更新对应记录时，首先检查该记录是否有对应外键，如果有，则也删除/更新外键在子表中的记录。\",\"SET NULL\",\"当在父表中删除对应记录时，首先检查该记录是否有对应外键，如果有则设置子表中该外键值为null(这就要求该外键允许取null)\",\"SET DEFAULT\",\"父表有变更时，子表将外键列设置成一个默认的值(Innodb不支持)\",\"ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段) REFERENCES 主表名(主表字段) ON UPDATE CASCADE ON DELETE CASCADE; ALTER TABLE emp ADD CONSTRAINT fk_emp_dept_id FOREIGN KEY (dept_id) REFERENCES dept(id) ON UPDATE CASCADE ON DELETE CASCADE;\"]},\"45\":{\"h\":\"CORS策略\"},\"46\":{\"h\":\"CORS( Cross-Origin Resource Sharing )跨域资源共享：\"},\"47\":{\"h\":\"用户登录\"},\"48\":{\"h\":\"1.TCP和UDP的区别\"},\"49\":{\"h\":\"2.TCP是如何做链接管理的？\"},\"50\":{\"h\":\"3.TCP是如何保证可靠的？\"},\"51\":{\"h\":\"4.重传机制有哪些？\"},\"52\":{\"h\":\"5.TCP是如何保证有序的？\"},\"53\":{\"h\":\"6.粘包问题？\"},\"54\":{\"h\":\"7.滑动窗口\"},\"55\":{\"h\":\"8.拥塞控制\"},\"56\":{\"h\":\"9.TCP的三次握手和四次挥手？\"},\"57\":{\"h\":\"三次握手\"},\"58\":{\"h\":\"1.第一次握手\"},\"59\":{\"h\":\"2.第二次握手\"},\"60\":{\"h\":\"3.第三次握手\"},\"61\":{\"h\":\"四次挥手\"},\"62\":{\"h\":\"1.第一次挥手\"},\"63\":{\"h\":\"2.第二次挥手\"},\"64\":{\"h\":\"3.第三次挥手\"},\"65\":{\"h\":\"4.第四次挥手\"},\"66\":{\"h\":\"10.time_wait状态的意义\"},\"67\":{\"h\":\"11.为什么需要三次握手而不是四次，两次\"},\"68\":{\"h\":\"什么是restful风格？\"},\"69\":{\"h\":\"用户登录：\"},\"70\":{\"h\":\"1.什么是OAUTH2.0?\"},\"71\":{\"h\":\"a. OAuth 2.0 授权模式\"},\"72\":{\"h\":\"2.用户扫码是如何实现的\"},\"73\":{\"h\":\"3. 如果要实现不同域名下的cookie正常使用，应该怎么处理？\"},\"74\":{\"h\":\"4.假如1亿用户体量，如何设计一个登录验签服务？\"},\"75\":{\"h\":\"CPU Cache\"},\"76\":{\"h\":\"cup cache\"},\"77\":{\"h\":\"如何写出让 CPU 跑得更快的代码？\"},\"78\":{\"h\":\"数据缓存\"},\"79\":{\"h\":\"指令缓存\"},\"80\":{\"h\":\"多核 CPU 的缓存命中率\"},\"81\":{\"h\":\"CUP是如何执行任务的?\"},\"82\":{\"h\":\"CPU如何执行任务的\"},\"83\":{\"h\":\"Cache 伪共享是什么？\"},\"84\":{\"h\":\"避免伪共享的方法\"},\"85\":{\"h\":\"CPU 是根据什么来选择当前要执行的线程。\"},\"86\":{\"h\":\"调度类\"},\"87\":{\"h\":\"完全公平调度\"},\"88\":{\"h\":\"CPU 运行队列\"},\"89\":{\"h\":\"调整优先级\"},\"90\":{\"h\":\"CUP的缓存一致性\"},\"91\":{\"h\":\"CPU Cache 的数据写入\"},\"92\":{\"h\":\"写直达\"},\"93\":{\"h\":\"写回\"},\"94\":{\"h\":\"缓存一致性问题\"},\"95\":{\"h\":\"总线嗅探\"},\"96\":{\"h\":\"MESI 协议\"},\"97\":{\"h\":\"什么是中断？\"},\"98\":{\"h\":\"中断\"},\"99\":{\"h\":\"软中断\"},\"100\":{\"h\":\"内存管理\"},\"101\":{\"h\":\"1. 虚拟内存\"},\"102\":{\"h\":\"问题背景\"},\"103\":{\"h\":\"基本概念\"},\"104\":{\"h\":\"1.1 内存分段\"},\"105\":{\"h\":\"内存碎片\"},\"106\":{\"h\":\"内存交换效率低\"},\"107\":{\"h\":\"1.2 内存分页\"},\"108\":{\"h\":\"简单分页（有缺陷）\"},\"109\":{\"h\":\"多级页表\"},\"110\":{\"h\":\"TLB\"},\"111\":{\"h\":\"1.3 段页式内存管理\"},\"112\":{\"h\":\"Linux内存布局\"},\"113\":{\"h\":\"内核空间与用户空间的区别\"},\"114\":{\"h\":\"虚拟内存的作用\"},\"115\":{\"h\":\"虚拟内存的功能\"},\"116\":{\"h\":\"虚拟内存管理器\"},\"117\":{\"h\":\"冯诺依曼模型\"},\"118\":{\"h\":\"内存：\"},\"119\":{\"h\":\"中央处理器：\"},\"120\":{\"h\":\"总线：\"},\"121\":{\"h\":\"输入、输出设备\"},\"122\":{\"h\":\"存储器的层次结构\"},\"123\":{\"h\":\"线程\"},\"124\":{\"h\":\"线程的优势\"},\"125\":{\"h\":\"理解线程\"},\"126\":{\"h\":\"线程与进程的比较\"},\"127\":{\"h\":\"线程的上下文切换\"},\"128\":{\"h\":\"线程的实现方式\"},\"129\":{\"h\":\"线程的优劣势\"},\"130\":{\"h\":\"计算机保存数据的形式\"},\"131\":{\"h\":\"用补码的形式保存负数：\"},\"132\":{\"h\":\"十进制小数与二进制的转换\"},\"133\":{\"h\":\"计算机是怎么存小数的？\"},\"134\":{\"h\":\"。\"},\"135\":{\"h\":\"进程\"},\"136\":{\"h\":\"进程的状态：\"},\"137\":{\"h\":\"进程的控制结构：\"},\"138\":{\"h\":\"进程的控制\"},\"139\":{\"h\":\"进程的上下文切换\"},\"140\":{\"h\":\"HTTP\"},\"141\":{\"h\":\"HTTP基本概念\"},\"142\":{\"h\":\"HTTP是什么？\"},\"143\":{\"h\":\"HTTP常见的状态码：\"},\"144\":{\"h\":\"HTTP常见字段有哪些：\"},\"145\":{\"h\":\"GET与POST请求:\"},\"146\":{\"h\":\"GET与POST的区别:\"},\"147\":{\"h\":\"GET和POST的方法都是安全和幂等的吗？\"},\"148\":{\"h\":\"HTTP缓存技术\"},\"149\":{\"h\":\"强缓存：\"},\"150\":{\"h\":\"协商缓存：\"},\"151\":{\"h\":\"HTTP特性：\"},\"152\":{\"h\":\"HTTP的更迭\"},\"153\":{\"h\":\"1.如何避免发送HTTP请求\"},\"154\":{\"h\":\"2.如何减少HTTP请求次数\"},\"155\":{\"h\":\"3.如何减少HTTP响应的数据大小？\"},\"156\":{\"h\":\"1.HTTP的性能问题\"},\"157\":{\"h\":\"2.兼容HTTP1.1\"},\"158\":{\"h\":\"3.头部压缩\"},\"159\":{\"h\":\"静态表编码\"},\"160\":{\"h\":\"动态编码表\"},\"161\":{\"h\":\"4.二进制帧\"},\"162\":{\"h\":\"5.并发传输\"},\"163\":{\"h\":\"6.服务器主动推送资源\"},\"164\":{\"h\":\"1.HTTP2的问题\"},\"165\":{\"h\":\"1.队头阻塞：\"},\"166\":{\"h\":\"2.TCP与TLS的握手延迟\"},\"167\":{\"h\":\"3.网络迁移需要重新连接\"},\"168\":{\"h\":\"2.QUIC协议的特点\"},\"169\":{\"h\":\"1.无队头阻塞\"},\"170\":{\"h\":\"2.更快连接建立\"},\"171\":{\"h\":\"3.连接迁移\"},\"172\":{\"h\":\"3.HTTP3协议\"},\"173\":{\"h\":\"HTTPS如何优化\"},\"174\":{\"h\":\"1.分析性能损耗\"},\"175\":{\"h\":\"硬件优化\"},\"176\":{\"h\":\"软件优化\"},\"177\":{\"h\":\"证书优化\"},\"178\":{\"h\":\"会话复用\"},\"179\":{\"h\":\"\"},\"180\":{\"h\":\"HTTP和HTTPS的区别\"},\"181\":{\"h\":\"HTTP和HTTPS：\"},\"182\":{\"h\":\"1.HTTP和HTTPS的区别：\"},\"183\":{\"h\":\"2.HTTPS解决了HTTP的那些问题?\"},\"184\":{\"h\":\"如何解决的?\"},\"185\":{\"h\":\"3.HTTPS是如何建立连接的,期间交互了什么?\"},\"186\":{\"h\":\"4.HTTPS的应用数据时如保证完整性的\"},\"187\":{\"h\":\"应用层的协议\"},\"188\":{\"h\":\"TCP 是有三个特点， 、 、基于 。\"},\"189\":{\"h\":\"1.HTTP和RPC的区别\"},\"190\":{\"h\":\"2.WebSocket是什么\"},\"191\":{\"h\":\"IP协议的相关技术\"},\"192\":{\"h\":\"APR:\"},\"193\":{\"h\":\"DHCP:\"},\"194\":{\"h\":\"NAT:\"},\"195\":{\"h\":\"ICMP:\"},\"196\":{\"h\":\"ping的工作原理\"},\"197\":{\"h\":\"ping的工作原理\"},\"198\":{\"h\":\"查询报文类型\"},\"199\":{\"h\":\"traceroute :\"},\"200\":{\"h\":\"断网了还能ping通127.0.0.1吗？\"},\"201\":{\"h\":\"什么是127.0.0.1\"},\"202\":{\"h\":\"TCP和Ping数据的区别：\"},\"203\":{\"h\":\"为什么断网了还能ping通127.0.0.1？\"},\"204\":{\"h\":\"127.0.0.1和localhost和0.0.00有什么区别？\"},\"205\":{\"h\":\"基础IP\"},\"206\":{\"h\":\"IP基本认识\"},\"207\":{\"h\":\"IP的基础知识\"},\"208\":{\"h\":\"IP的分类：\"},\"209\":{\"h\":\"什么是A，B，C类？\"},\"210\":{\"h\":\"什么是D类，E类？\"},\"211\":{\"h\":\"无分类地址CIDR\"},\"212\":{\"h\":\"公有 IP 地址与私有 IP 地址\"},\"213\":{\"h\":\"IP 地址与路由控制\"},\"214\":{\"h\":\"IP分片与重组\"},\"215\":{\"h\":\"IPv6 基本认识\"},\"216\":{\"h\":\"IPv6的首部改进：\"},\"217\":{\"h\":\"CLOSE_WAIT和TIME_WAIT\"},\"218\":{\"h\":\"为什么 TIME_WAIT 等待的时间是 2MSL？\"},\"219\":{\"h\":\"为什么需要 TIME_WAIT 状态？\"},\"220\":{\"h\":\"TIME_WAIT 过多有什么危害？\"},\"221\":{\"h\":\"如何优化 TIME_WAIT？\"},\"222\":{\"h\":\"服务器出现大量 TIME_WAIT 状态的原因有哪些？\"},\"223\":{\"h\":\"服务器出现大量 CLOSE_WAIT 状态的原因有哪些？\"},\"224\":{\"h\":\"SYN延时和泛洪攻击\"},\"225\":{\"h\":\"什么是SYN攻击，如何避免SYN攻击？\"},\"226\":{\"h\":\"什么时SYN超时，如何解决SYN超时？\"},\"227\":{\"h\":\"TCP和UDP的区别\"},\"228\":{\"h\":\"UDP和TCP的区别和应用场景：\"},\"229\":{\"h\":\"TCP和UDP的区别：\"},\"230\":{\"h\":\"连接：\"},\"231\":{\"h\":\"TCP的socket编程\"},\"232\":{\"h\":\"针对TCP应该如何socket编程？\"},\"233\":{\"h\":\"listen 时候参数 backlog 的意义？\"},\"234\":{\"h\":\"accept 发生在三次握手的哪一步？\"},\"235\":{\"h\":\"客户端调用 close 了，连接是断开的流程是什么？\"},\"236\":{\"h\":\"服务端没有调用Listen,客户端请求建立连接会发生什么？\"},\"237\":{\"h\":\"没有listen可以建立TCP连接吗？\"},\"238\":{\"h\":\"没有Accpet，能建立TCP连接吗？\"},\"239\":{\"h\":\"为什么半连接队列要设计成哈希表？\"},\"240\":{\"h\":\"会有一个cookies队列吗\"},\"241\":{\"h\":\"cookies方案为什么不直接取代半连接队列？\"},\"242\":{\"h\":\"TCP和UDP可以同时绑定相同的端口吗？\"},\"243\":{\"h\":\"1.TCP和UDP可以同时绑定相同的端口吗？\"},\"244\":{\"h\":\"2.\"},\"245\":{\"h\":\"\"},\"246\":{\"h\":\"4.重启 TCP 服务进程时，如何避免“Address in use”的报错信息？\"},\"247\":{\"h\":\"\"},\"248\":{\"h\":\"\"},\"249\":{\"h\":\"7.客户端 TCP 连接 TIME_WAIT 状态过多，会导致端口资源耗尽而无法建立新的连接吗？\"},\"250\":{\"h\":\"TCP的优化\"},\"251\":{\"h\":\"如何优化TCP？\"},\"252\":{\"h\":\"TCP三次握手的性能提升？\"},\"253\":{\"h\":\"TCP四次挥手性能的提升？\"},\"254\":{\"h\":\"TCP传输数据的性能提升？\"},\"255\":{\"h\":\"TCP的基本认识\"},\"256\":{\"h\":\"TCP基本认识\"},\"257\":{\"h\":\"TCP的头格式：\"},\"258\":{\"h\":\"TCP工作在那一层：\"},\"259\":{\"h\":\"什么是TCP协议：\"},\"260\":{\"h\":\"什么是TCP连接:\"},\"261\":{\"h\":\"如何确定一个TCP连接：\"},\"262\":{\"h\":\"如何理解TCP是基于字节流的协议？\"},\"263\":{\"h\":\"先来说说为什么 UDP 是面向报文的协议？\"},\"264\":{\"h\":\"再来说说为什么 TCP 是面向字节流的协议？\"},\"265\":{\"h\":\"TCP半连接队列和全连接队列\"},\"266\":{\"h\":\"SYN报文在什么情况下会被丢弃？\"},\"267\":{\"h\":\"拔掉网线之后，TCP连接会消失吗？\"},\"268\":{\"h\":\"\"},\"269\":{\"h\":\"用了TCP传输数据就一定不会丢包吗？\"},\"270\":{\"h\":\"TCP的拥塞控制\"},\"271\":{\"h\":\"拥塞控制：\"},\"272\":{\"h\":\"慢启动\"},\"273\":{\"h\":\"拥塞避免\"},\"274\":{\"h\":\"拥塞发生\"},\"275\":{\"h\":\"快速恢复\"},\"276\":{\"h\":\"TCP的流量控制\"},\"277\":{\"h\":\"滑动窗口\"},\"278\":{\"h\":\"窗口大小由哪一方决定？\"},\"279\":{\"h\":\"发送方的滑动窗口：\"},\"280\":{\"h\":\"程序如何表示发送方的四个部分呢？\"},\"281\":{\"h\":\"接收方的滑动窗口：\"},\"282\":{\"h\":\"接收窗口和发送窗口的大小是相等的吗？\"},\"283\":{\"h\":\"流量控制\"},\"284\":{\"h\":\"操作系统缓冲区和滑动窗口的关系：\"},\"285\":{\"h\":\"窗口关闭\"},\"286\":{\"h\":\"糊涂窗口综合征\"},\"287\":{\"h\":\"TCP的重传机制\"},\"288\":{\"h\":\"TCP的重传机制\"},\"289\":{\"h\":\"1.超时重传\"},\"290\":{\"h\":\"2.快速重传\"},\"291\":{\"h\":\"3.SACK方法\"},\"292\":{\"h\":\"4.Duplicate SACK\"},\"293\":{\"h\":\"TCP连接的建立\"},\"294\":{\"h\":\"TCP连接的建立：\"},\"295\":{\"h\":\"为什么是三次握手：\"},\"296\":{\"h\":\"为什么每次建立TCP链接的时候，初始化序列号的都要求不一样？\"},\"297\":{\"h\":\"初始序列号ISN是如何随机产生的？\"},\"298\":{\"h\":\"既然IP层会分片，为什么TCP层还需要MSS？\"},\"299\":{\"h\":\"当第一次握手丢失：\"},\"300\":{\"h\":\"第二次握手丢失：\"},\"301\":{\"h\":\"第三次握手丢失：\"},\"302\":{\"h\":\"为什么每次建立TCP连接，初始化序列号都要不一样？\"},\"303\":{\"h\":\"TCP 序列号和确认号是如何变化的？\"},\"304\":{\"h\":\"万能公式\"},\"305\":{\"h\":\"已建立的TCP连接，收到SYN会发生什么？\"},\"306\":{\"h\":\"killcx 的工具\"},\"307\":{\"h\":\"tcpkill 的工具\"},\"308\":{\"h\":\"\"},\"309\":{\"h\":\"TCP连接的断开\"},\"310\":{\"h\":\"TCP断开连接\"},\"311\":{\"h\":\"TCP的四次挥手：\"},\"312\":{\"h\":\"第一次挥手丢失：\"},\"313\":{\"h\":\"第二次挥手丢失：\"},\"314\":{\"h\":\"第三次挥手丢失：\"},\"315\":{\"h\":\"第四次挥手丢失\"},\"316\":{\"h\":\"TCP四次挥手可以变成三次吗？\"},\"317\":{\"h\":\"粗暴关闭VS优雅关闭：\"},\"318\":{\"h\":\"什么情况下会出现三次挥手？\"},\"319\":{\"h\":\"四次挥手中收到乱序的FIN包怎么办\"},\"320\":{\"h\":\"在TIME_WAIT状态的TCP接收到SYN报文会怎么样？\"},\"321\":{\"h\":\"SYN合法：\"},\"322\":{\"h\":\"SYN非法：\"},\"323\":{\"h\":\"在 TIME_WAIT 状态，收到 RST 会断开连接吗？\"},\"324\":{\"h\":\"如果已经建立了链接，客户端突然挂怎么办\"},\"325\":{\"h\":\"如果已经建立了链接，服务端突然挂怎么办\"},\"326\":{\"h\":\"TCP连接，一端断电和进程崩溃有什么区别？\"},\"327\":{\"h\":\"客户端主机宕机又重启？\"},\"328\":{\"h\":\"QUIC协议\"},\"329\":{\"h\":\"\"},\"330\":{\"h\":\"QUIC是如何实现可靠传输的？\"},\"331\":{\"h\":\"Packet Header\"},\"332\":{\"h\":\"QUIC Frame Header\"},\"333\":{\"h\":\"QUIC 是如何解决 TCP 队头阻塞问题的？\"},\"334\":{\"h\":\"QUIC 是如何做流量控制的？\"},\"335\":{\"h\":\"QUIC 对拥塞控制改进\"},\"336\":{\"h\":\"QUIC 更快的连接建立\"},\"337\":{\"h\":\"QUIC 是如何迁移连接的？\"},\"338\":{\"h\":\"常见的网络分层模型\"},\"339\":{\"h\":\"网络模型：\"},\"340\":{\"h\":\"基础计网\"},\"341\":{\"h\":\"应用层：\"},\"342\":{\"h\":\"用户态和内核态：\"},\"343\":{\"h\":\"传输层：（作为传输媒介）\"},\"344\":{\"h\":\"网络层:(有着实际的传输功能)\"},\"345\":{\"h\":\"IP协议的寻址作用：\"},\"346\":{\"h\":\"IP协议还可以\"},\"347\":{\"h\":\"网络接口层：\"},\"348\":{\"h\":\"键入一个URL网络世界发生了什么？\"},\"349\":{\"h\":\"1.浏览器第一步工作是解析ULR，然后生产HTTP请求消息，然后会\"},\"350\":{\"h\":\"2.在发送之前， ，在委托操作系统发送消息时必须提供\"},\"351\":{\"h\":\"DNS服务器:专门保存了 服务器域名与 的对应关系\"},\"352\":{\"h\":\"只指路不带路\"},\"353\":{\"h\":\"3.通过DNS获取到IP后，把传输工作给操作系统中的协议栈\"},\"354\":{\"h\":\"4.http协议是基于TCP协议传输的\"},\"355\":{\"h\":\"1.第一次握手\"},\"356\":{\"h\":\"2.第二次握手\"},\"357\":{\"h\":\"3.第三次握手\"},\"358\":{\"h\":\"完整的TCP报文：\"},\"359\":{\"h\":\"4.IP\"},\"360\":{\"h\":\"5.MAC\"},\"361\":{\"h\":\"5.网卡（真正的数据发送）\"},\"362\":{\"h\":\"6.交换机\"},\"363\":{\"h\":\"7.路由器\"},\"364\":{\"h\":\"8.客户端&服务器\"},\"365\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"366\":{\"h\":\"SQL\"},\"367\":{\"h\":\"My SQL\"},\"368\":{\"h\":\"业务场景\"},\"369\":{\"h\":\"计算机操作系统\"},\"370\":{\"h\":\"HTTP\"},\"371\":{\"h\":\"计算机网络\"},\"372\":{\"h\":\"IP\"},\"373\":{\"h\":\"TCP\"},\"374\":{\"h\":\"计算机网络基础\"}},\"dirtCount\":0,\"index\":[[\"业务场景\",{\"0\":{\"368\":1}}],[\"路由器\",{\"0\":{\"363\":1}}],[\"交换机\",{\"0\":{\"362\":1}}],[\"真正的数据发送\",{\"0\":{\"361\":1}}],[\"网卡\",{\"0\":{\"361\":1}}],[\"网络接口层\",{\"0\":{\"347\":1}}],[\"网络层\",{\"0\":{\"344\":1}}],[\"网络模型\",{\"0\":{\"339\":1}}],[\"网络迁移需要重新连接\",{\"0\":{\"167\":1}}],[\"完整的tcp报文\",{\"0\":{\"358\":1}}],[\"完全公平调度\",{\"0\":{\"87\":1}}],[\"把传输工作给操作系统中的协议栈\",{\"0\":{\"353\":1}}],[\"只指路不带路\",{\"0\":{\"352\":1}}],[\"专门保存了\",{\"0\":{\"351\":1}}],[\"然后会\",{\"0\":{\"349\":1}}],[\"然后生产http请求消息\",{\"0\":{\"349\":1}}],[\"然后返回接下来的\",{\"1\":{\"22\":1}}],[\"浏览器第一步工作是解析ulr\",{\"0\":{\"349\":1}}],[\"键入一个url网络世界发生了什么\",{\"0\":{\"348\":1}}],[\"作为传输媒介\",{\"0\":{\"343\":1}}],[\"传输层\",{\"0\":{\"343\":1}}],[\"常见的网络分层模型\",{\"0\":{\"338\":1}}],[\"常遇春\",{\"1\":{\"44\":1}}],[\"quic\",{\"0\":{\"332\":1,\"333\":1,\"334\":1,\"335\":1,\"336\":1,\"337\":1}}],[\"quic是如何实现可靠传输的\",{\"0\":{\"330\":1}}],[\"quic协议\",{\"0\":{\"328\":1}}],[\"quic协议的特点\",{\"0\":{\"168\":1}}],[\"收到\",{\"0\":{\"323\":1}}],[\"收到syn会发生什么\",{\"0\":{\"305\":1}}],[\"粗暴关闭vs优雅关闭\",{\"0\":{\"317\":1}}],[\"killcx\",{\"0\":{\"306\":1}}],[\"key\",{\"1\":{\"43\":3,\"44\":9}}],[\"已建立的tcp连接\",{\"0\":{\"305\":1}}],[\"万能公式\",{\"0\":{\"304\":1}}],[\"序列号和确认号是如何变化的\",{\"0\":{\"303\":1}}],[\"既然ip层会分片\",{\"0\":{\"298\":1}}],[\"初始化序列号都要不一样\",{\"0\":{\"302\":1}}],[\"初始化序列号的都要求不一样\",{\"0\":{\"296\":1}}],[\"初始序列号isn是如何随机产生的\",{\"0\":{\"297\":1}}],[\"快速重传\",{\"0\":{\"290\":1}}],[\"快速恢复\",{\"0\":{\"275\":1}}],[\"超时重传\",{\"0\":{\"289\":1}}],[\"糊涂窗口综合征\",{\"0\":{\"286\":1}}],[\"操作系统缓冲区和滑动窗口的关系\",{\"0\":{\"284\":1}}],[\"流量控制\",{\"0\":{\"283\":1}}],[\"流程函数\",{\"0\":{\"41\":1}}],[\"接收窗口和发送窗口的大小是相等的吗\",{\"0\":{\"282\":1}}],[\"接收方的滑动窗口\",{\"0\":{\"281\":1}}],[\"程序如何表示发送方的四个部分呢\",{\"0\":{\"280\":1}}],[\"程序员鼓励师\",{\"1\":{\"44\":1}}],[\"发送方的滑动窗口\",{\"0\":{\"279\":1}}],[\"发生在三次握手的哪一步\",{\"0\":{\"234\":1}}],[\"窗口关闭\",{\"0\":{\"285\":1}}],[\"窗口大小由哪一方决定\",{\"0\":{\"278\":1}}],[\"窗口函数通常搭配over\",{\"1\":{\"24\":1}}],[\"拥塞发生\",{\"0\":{\"274\":1}}],[\"拥塞避免\",{\"0\":{\"273\":1}}],[\"拥塞控制\",{\"0\":{\"55\":1,\"271\":1}}],[\"慢启动\",{\"0\":{\"272\":1}}],[\"拔掉网线之后\",{\"0\":{\"267\":1}}],[\"再来说说为什么\",{\"0\":{\"264\":1}}],[\"再按照入职时间进行降序排序\",{\"1\":{\"34\":1}}],[\"先来说说为什么\",{\"0\":{\"263\":1}}],[\"重启\",{\"0\":{\"246\":1}}],[\"重传机制有哪些\",{\"0\":{\"51\":1}}],[\"会断开连接吗\",{\"0\":{\"323\":1}}],[\"会导致端口资源耗尽而无法建立新的连接吗\",{\"0\":{\"249\":1}}],[\"会有一个cookies队列吗\",{\"0\":{\"240\":1}}],[\"会话复用\",{\"0\":{\"178\":1}}],[\"能建立tcp连接吗\",{\"0\":{\"238\":1}}],[\"没有accpet\",{\"0\":{\"238\":1}}],[\"没有listen可以建立tcp连接吗\",{\"0\":{\"237\":1}}],[\"客户端主机宕机又重启\",{\"0\":{\"327\":1}}],[\"客户端突然挂怎么办\",{\"0\":{\"324\":1}}],[\"客户端\",{\"0\":{\"249\":1,\"364\":1}}],[\"客户端请求建立连接会发生什么\",{\"0\":{\"236\":1}}],[\"客户端调用\",{\"0\":{\"235\":1}}],[\"服务端突然挂怎么办\",{\"0\":{\"325\":1}}],[\"服务端没有调用listen\",{\"0\":{\"236\":1}}],[\"服务进程时\",{\"0\":{\"246\":1}}],[\"服务器\",{\"0\":{\"364\":1}}],[\"服务器域名与\",{\"0\":{\"351\":1}}],[\"服务器出现大量\",{\"0\":{\"222\":1,\"223\":1}}],[\"服务器主动推送资源\",{\"0\":{\"163\":1}}],[\"了\",{\"0\":{\"235\":1}}],[\"针对tcp应该如何socket编程\",{\"0\":{\"232\":1}}],[\"连接是断开的流程是什么\",{\"0\":{\"235\":1}}],[\"连接\",{\"0\":{\"230\":1,\"249\":1}}],[\"连接迁移\",{\"0\":{\"171\":1}}],[\"什么情况下会出现三次挥手\",{\"0\":{\"318\":1}}],[\"什么时syn超时\",{\"0\":{\"226\":1}}],[\"什么是tcp连接\",{\"0\":{\"260\":1}}],[\"什么是tcp协议\",{\"0\":{\"259\":1}}],[\"什么是syn攻击\",{\"0\":{\"225\":1}}],[\"什么是d类\",{\"0\":{\"210\":1}}],[\"什么是a\",{\"0\":{\"209\":1}}],[\"什么是127\",{\"0\":{\"201\":1}}],[\"什么是中断\",{\"0\":{\"97\":1}}],[\"什么是oauth2\",{\"0\":{\"70\":1}}],[\"什么是restful风格\",{\"0\":{\"68\":1}}],[\"过多有什么危害\",{\"0\":{\"220\":1}}],[\"过滤分组后的记录\",{\"1\":{\"33\":1}}],[\"过滤符合条件的记录\",{\"1\":{\"33\":1}}],[\"等待的时间是\",{\"0\":{\"218\":1}}],[\"等于\",{\"1\":{\"33\":1}}],[\"地址与路由控制\",{\"0\":{\"213\":1}}],[\"地址与私有\",{\"0\":{\"212\":1}}],[\"地址\",{\"0\":{\"212\":1}}],[\"公有\",{\"0\":{\"212\":1}}],[\"无分类地址cidr\",{\"0\":{\"211\":1}}],[\"无队头阻塞\",{\"0\":{\"169\":1}}],[\"断网了还能ping通127\",{\"0\":{\"200\":1}}],[\"基础计网\",{\"0\":{\"340\":1}}],[\"基础ip\",{\"0\":{\"205\":1}}],[\"基于\",{\"0\":{\"188\":1}}],[\"基本认识\",{\"0\":{\"215\":1}}],[\"基本概念\",{\"0\":{\"103\":1}}],[\"基本查询\",{\"1\":{\"33\":1}}],[\"应用层\",{\"0\":{\"341\":1}}],[\"应用层的协议\",{\"0\":{\"187\":1}}],[\"应该怎么处理\",{\"0\":{\"73\":1}}],[\"应该使用\",{\"1\":{\"31\":1}}],[\"期间交互了什么\",{\"0\":{\"185\":1}}],[\"软件优化\",{\"0\":{\"176\":1}}],[\"软中断\",{\"0\":{\"99\":1}}],[\"硬件优化\",{\"0\":{\"175\":1}}],[\"更快的连接建立\",{\"0\":{\"336\":1}}],[\"更快连接建立\",{\"0\":{\"170\":1}}],[\"更新外键在子表中的记录\",{\"1\":{\"44\":1}}],[\"更新对应记录时\",{\"1\":{\"44\":3}}],[\"更新\",{\"1\":{\"44\":3}}],[\"队头阻塞问题的\",{\"0\":{\"333\":1}}],[\"队头阻塞\",{\"0\":{\"165\":1}}],[\"二进制帧\",{\"0\":{\"161\":1}}],[\"二线城市\",{\"1\":{\"41\":2}}],[\"动态编码表\",{\"0\":{\"160\":1}}],[\"静态表编码\",{\"0\":{\"159\":1}}],[\"头部压缩\",{\"0\":{\"158\":1}}],[\"兼容http1\",{\"0\":{\"157\":1}}],[\"协商缓存\",{\"0\":{\"150\":1}}],[\"协议\",{\"0\":{\"96\":1}}],[\"强缓存\",{\"0\":{\"149\":1}}],[\"header\",{\"0\":{\"331\":1,\"332\":1}}],[\"http协议是基于tcp协议传输的\",{\"0\":{\"354\":1}}],[\"http和rpc的区别\",{\"0\":{\"189\":1}}],[\"http和https\",{\"0\":{\"181\":1}}],[\"http和https的区别\",{\"0\":{\"180\":1,\"182\":1}}],[\"https的应用数据时如保证完整性的\",{\"0\":{\"186\":1}}],[\"https是如何建立连接的\",{\"0\":{\"185\":1}}],[\"https解决了http的那些问题\",{\"0\":{\"183\":1}}],[\"https如何优化\",{\"0\":{\"173\":1}}],[\"http3协议\",{\"0\":{\"172\":1}}],[\"http2的问题\",{\"0\":{\"164\":1}}],[\"http的性能问题\",{\"0\":{\"156\":1}}],[\"http的更迭\",{\"0\":{\"152\":1}}],[\"http特性\",{\"0\":{\"151\":1}}],[\"http缓存技术\",{\"0\":{\"148\":1}}],[\"http常见字段有哪些\",{\"0\":{\"144\":1}}],[\"http常见的状态码\",{\"0\":{\"143\":1}}],[\"http是什么\",{\"0\":{\"142\":1}}],[\"http基本概念\",{\"0\":{\"141\":1}}],[\"http\",{\"0\":{\"140\":1,\"370\":1}}],[\"having\",{\"1\":{\"33\":1,\"34\":2}}],[\"进程的上下文切换\",{\"0\":{\"139\":1}}],[\"进程的控制\",{\"0\":{\"138\":1}}],[\"进程的控制结构\",{\"0\":{\"137\":1}}],[\"进程的状态\",{\"0\":{\"136\":1}}],[\"进程\",{\"0\":{\"135\":1}}],[\"进行比较\",{\"1\":{\"31\":2}}],[\"进行通配\",{\"1\":{\"27\":1}}],[\"进行分区\",{\"1\":{\"24\":2}}],[\"十进制小数与二进制的转换\",{\"0\":{\"132\":1}}],[\"理解线程\",{\"0\":{\"125\":1}}],[\"线程的优劣势\",{\"0\":{\"129\":1}}],[\"线程的优势\",{\"0\":{\"124\":1}}],[\"线程的实现方式\",{\"0\":{\"128\":1}}],[\"线程的上下文切换\",{\"0\":{\"127\":1}}],[\"线程与进程的比较\",{\"0\":{\"126\":1}}],[\"线程\",{\"0\":{\"123\":1}}],[\"存储器的层次结构\",{\"0\":{\"122\":1}}],[\"输出设备\",{\"0\":{\"121\":1}}],[\"输入\",{\"0\":{\"121\":1}}],[\"中央处理器\",{\"0\":{\"119\":1}}],[\"中断\",{\"0\":{\"98\":1}}],[\"冯诺依曼模型\",{\"0\":{\"117\":1}}],[\"内核空间与用户空间的区别\",{\"0\":{\"113\":1}}],[\"内存\",{\"0\":{\"118\":1}}],[\"内存分页\",{\"0\":{\"107\":1}}],[\"内存分段\",{\"0\":{\"104\":1}}],[\"内存交换效率低\",{\"0\":{\"106\":1}}],[\"内存碎片\",{\"0\":{\"105\":1}}],[\"内存管理\",{\"0\":{\"100\":1}}],[\"段页式内存管理\",{\"0\":{\"111\":1}}],[\"有着实际的传输功能\",{\"0\":{\"344\":1}}],[\"有缺陷\",{\"0\":{\"108\":1}}],[\"有效性和完整性\",{\"1\":{\"43\":1}}],[\"问题背景\",{\"0\":{\"102\":1}}],[\"虚拟内存管理器\",{\"0\":{\"116\":1}}],[\"虚拟内存的功能\",{\"0\":{\"115\":1}}],[\"虚拟内存的作用\",{\"0\":{\"114\":1}}],[\"虚拟内存\",{\"0\":{\"101\":1}}],[\"缓存一致性问题\",{\"0\":{\"94\":1}}],[\"写回\",{\"0\":{\"93\":1}}],[\"写直达\",{\"0\":{\"92\":1}}],[\"调整优先级\",{\"0\":{\"89\":1}}],[\"调度类\",{\"0\":{\"86\":1}}],[\"运行队列\",{\"0\":{\"88\":1}}],[\"避免伪共享的方法\",{\"0\":{\"84\":1}}],[\"伪共享是什么\",{\"0\":{\"83\":1}}],[\"的对应关系\",{\"0\":{\"351\":1}}],[\"的工具\",{\"0\":{\"306\":1,\"307\":1}}],[\"的报错信息\",{\"0\":{\"246\":1}}],[\"的意义\",{\"0\":{\"233\":1}}],[\"的数据写入\",{\"0\":{\"91\":1}}],[\"的缓存命中率\",{\"0\":{\"80\":1}}],[\"的行会得到相同的排名\",{\"1\":{\"24\":1}}],[\"指令缓存\",{\"0\":{\"79\":1}}],[\"跑得更快的代码\",{\"0\":{\"77\":1}}],[\"如何理解tcp是基于字节流的协议\",{\"0\":{\"262\":1}}],[\"如何确定一个tcp连接\",{\"0\":{\"261\":1}}],[\"如何解决syn超时\",{\"0\":{\"226\":1}}],[\"如何解决的\",{\"0\":{\"184\":1}}],[\"如何避免\",{\"0\":{\"246\":1}}],[\"如何避免syn攻击\",{\"0\":{\"225\":1}}],[\"如何避免发送http请求\",{\"0\":{\"153\":1}}],[\"如何优化tcp\",{\"0\":{\"251\":1}}],[\"如何优化\",{\"0\":{\"221\":1}}],[\"如何减少http响应的数据大小\",{\"0\":{\"155\":1}}],[\"如何减少http请求次数\",{\"0\":{\"154\":1}}],[\"如何写出让\",{\"0\":{\"77\":1}}],[\"如何设计一个登录验签服务\",{\"0\":{\"74\":1}}],[\"如果已经建立了链接\",{\"0\":{\"324\":1,\"325\":1}}],[\"如果要实现不同域名下的cookie正常使用\",{\"0\":{\"73\":1}}],[\"如果有则设置子表中该外键值为null\",{\"1\":{\"44\":1}}],[\"如果有则不允许删除\",{\"1\":{\"44\":2}}],[\"如果有\",{\"1\":{\"44\":1}}],[\"如果有多表查询\",{\"1\":{\"33\":1}}],[\"如果未指定该字段的值\",{\"1\":{\"43\":1}}],[\"如果expr的值等于val1\",{\"1\":{\"41\":1}}],[\"如果val1为true\",{\"1\":{\"41\":1}}],[\"如果value1不为空\",{\"1\":{\"41\":1}}],[\"如果value为true\",{\"1\":{\"41\":1}}],[\"如果查询的是第一页数据\",{\"1\":{\"34\":1}}],[\"如果是多字段排序\",{\"1\":{\"34\":1}}],[\"如果年龄相同按入职时间降序排序\",{\"1\":{\"34\":1}}],[\"如果年龄相同\",{\"1\":{\"34\":1}}],[\"如果没有前面的行\",{\"1\":{\"24\":1}}],[\"如果没有后续行\",{\"1\":{\"24\":1}}],[\"如果表中的行数少于2行\",{\"1\":{\"20\":1}}],[\"假如1亿用户体量\",{\"0\":{\"74\":1}}],[\"两次\",{\"0\":{\"67\":1}}],[\"为什么每次建立tcp连接\",{\"0\":{\"302\":1}}],[\"为什么每次建立tcp链接的时候\",{\"0\":{\"296\":1}}],[\"为什么tcp层还需要mss\",{\"0\":{\"298\":1}}],[\"为什么是三次握手\",{\"0\":{\"295\":1}}],[\"为什么半连接队列要设计成哈希表\",{\"0\":{\"239\":1}}],[\"为什么需要\",{\"0\":{\"219\":1}}],[\"为什么需要三次握手而不是四次\",{\"0\":{\"67\":1}}],[\"为什么\",{\"0\":{\"218\":1}}],[\"为什么断网了还能ping通127\",{\"0\":{\"203\":1}}],[\"为结果集中的每一行分配一个排名\",{\"1\":{\"24\":1}}],[\"为结果集中的每一行分配一个唯一的序号\",{\"1\":{\"24\":1}}],[\"四次挥手中收到乱序的fin包怎么办\",{\"0\":{\"319\":1}}],[\"四次挥手\",{\"0\":{\"61\":1}}],[\"三次握手\",{\"0\":{\"57\":1}}],[\"滑动窗口\",{\"0\":{\"54\":1,\"277\":1}}],[\"7\",{\"0\":{\"54\":1,\"249\":1,\"363\":1}}],[\"76\",{\"1\":{\"41\":1}}],[\"粘包问题\",{\"0\":{\"53\":1}}],[\"跨域资源共享\",{\"0\":{\"46\":1}}],[\"父表有变更时\",{\"1\":{\"44\":1}}],[\"与no\",{\"1\":{\"44\":1}}],[\"与\",{\"1\":{\"44\":1}}],[\"与rank\",{\"1\":{\"24\":1}}],[\"首先检查该记录是否有对应外键\",{\"1\":{\"44\":4}}],[\"当第一次握手丢失\",{\"0\":{\"299\":1}}],[\"当第一个字段值相同时\",{\"1\":{\"34\":1}}],[\"当在父表中删除对应记录时\",{\"1\":{\"44\":1}}],[\"当在父表中删除\",{\"1\":{\"44\":3}}],[\"行为\",{\"1\":{\"44\":2}}],[\"行开始\",{\"1\":{\"21\":1}}],[\"添加外键\",{\"1\":{\"44\":2}}],[\"小昭\",{\"1\":{\"44\":1}}],[\"小于等于\",{\"1\":{\"33\":1}}],[\"小于\",{\"1\":{\"33\":1}}],[\"韦一笑\",{\"1\":{\"44\":1}}],[\"开发\",{\"1\":{\"44\":3}}],[\"杨道\",{\"1\":{\"44\":1}}],[\"张无忌\",{\"1\":{\"44\":1}}],[\"总线\",{\"0\":{\"120\":1}}],[\"总线嗅探\",{\"0\":{\"95\":1}}],[\"总裁\",{\"1\":{\"44\":1}}],[\"总经办\",{\"1\":{\"44\":1}}],[\"金庸\",{\"1\":{\"44\":1}}],[\"员工表\",{\"1\":{\"44\":1}}],[\"直属领导id\",{\"1\":{\"44\":1}}],[\"直接简写为limit\",{\"1\":{\"34\":1}}],[\"入职时间\",{\"1\":{\"44\":1}}],[\"薪资\",{\"1\":{\"44\":1}}],[\"职位\",{\"1\":{\"44\":1}}],[\"销售部\",{\"1\":{\"44\":1}}],[\"财务部\",{\"1\":{\"44\":1}}],[\"市场部\",{\"1\":{\"44\":1}}],[\"研发部\",{\"1\":{\"44\":1}}],[\"部门id\",{\"1\":{\"44\":1}}],[\"部门表\",{\"1\":{\"44\":1}}],[\"部门名称\",{\"1\":{\"44\":1}}],[\"从而保证数据的一致性和完整性\",{\"1\":{\"44\":1}}],[\"从指定的日期或时间值中减去指定的时间间隔\",{\"1\":{\"40\":2}}],[\"性别\",{\"1\":{\"43\":1}}],[\"状态过多\",{\"0\":{\"249\":1}}],[\"状态的原因有哪些\",{\"0\":{\"222\":1,\"223\":1}}],[\"状态\",{\"0\":{\"219\":1,\"323\":1},\"1\":{\"43\":1}}],[\"外键的\",{\"1\":{\"44\":1}}],[\"外键字段\",{\"1\":{\"44\":2}}],[\"外键字段名\",{\"1\":{\"44\":1}}],[\"外键名称\",{\"1\":{\"44\":4}}],[\"外键用来让两张表的数据之间建立连接\",{\"1\":{\"44\":1}}],[\"外键约束\",{\"0\":{\"44\":1},\"1\":{\"43\":1}}],[\"外层查询找到出最大值的剩余数中的最大值\",{\"1\":{\"20\":1}}],[\"检查约束\",{\"1\":{\"43\":1}}],[\"则也删除\",{\"1\":{\"44\":1}}],[\"则采用默认值\",{\"1\":{\"43\":1}}],[\"则返回t\",{\"1\":{\"41\":1}}],[\"则返回null\",{\"1\":{\"24\":2}}],[\"默认约束\",{\"1\":{\"43\":1}}],[\"默认值\",{\"1\":{\"34\":1}}],[\"要求非空且唯一\",{\"1\":{\"43\":1}}],[\"要返回的记录数\",{\"1\":{\"22\":1}}],[\"唯一约束\",{\"1\":{\"43\":1}}],[\"限制该字段数据不能为null\",{\"1\":{\"43\":1}}],[\"关键字\",{\"1\":{\"43\":1}}],[\"描述\",{\"1\":{\"43\":1}}],[\"保存数据时\",{\"1\":{\"43\":1}}],[\"保证数据的一致性和完整性\",{\"1\":{\"43\":1}}],[\"保证数据库中数据的正确\",{\"1\":{\"43\":1}}],[\"保证字段值满足某一个条件\",{\"1\":{\"43\":1}}],[\"保证该字段的所有数据都是唯一\",{\"1\":{\"43\":1}}],[\"保留y位小数\",{\"1\":{\"39\":1}}],[\"目的\",{\"1\":{\"43\":1}}],[\"目前不足5位数的全部在前面补0\",{\"1\":{\"38\":1}}],[\"概念\",{\"1\":{\"43\":1,\"44\":1}}],[\"约束是作用于表中字段上的规则\",{\"1\":{\"43\":1}}],[\"约束\",{\"0\":{\"43\":1}}],[\"及格\",{\"1\":{\"41\":1}}],[\"优秀\",{\"1\":{\"41\":1}}],[\"job\",{\"1\":{\"44\":2}}],[\"join\",{\"1\":{\"33\":1}}],[\"jack\",{\"1\":{\"41\":1}}],[\"8400\",{\"1\":{\"44\":1}}],[\"8\",{\"0\":{\"55\":1,\"364\":1},\"1\":{\"43\":1}}],[\"88\",{\"1\":{\"41\":1}}],[\"85\",{\"1\":{\"41\":1}}],[\"学员成绩表\",{\"1\":{\"41\":1}}],[\"学习笔记\",{\"0\":{\"17\":1}}],[\"语文\",{\"1\":{\"41\":1}}],[\"英语\",{\"1\":{\"41\":1}}],[\"姓名\",{\"1\":{\"41\":1,\"43\":1,\"44\":1}}],[\"否则\",{\"1\":{\"41\":1}}],[\"否则返回default默认值\",{\"1\":{\"41\":2}}],[\"否则返回value2\",{\"1\":{\"41\":1}}],[\"否则返回f\",{\"1\":{\"41\":1}}],[\"展示不及格\",{\"1\":{\"41\":1}}],[\"展示及格\",{\"1\":{\"41\":1}}],[\"展示优秀\",{\"1\":{\"41\":1}}],[\"展示的规则如下\",{\"1\":{\"41\":1}}],[\"案例\",{\"1\":{\"41\":1}}],[\"其他\",{\"1\":{\"41\":1}}],[\"一端断电和进程崩溃有什么区别\",{\"0\":{\"326\":1}}],[\"一致\",{\"1\":{\"44\":1}}],[\"一线城市\",{\"1\":{\"41\":3}}],[\"一个sql语句可以查询到什么\",{\"0\":{\"36\":1}}],[\"一个sql语句\",{\"0\":{\"35\":1}}],[\"上海\",{\"1\":{\"41\":2}}],[\"北京\",{\"1\":{\"41\":2}}],[\"需求\",{\"1\":{\"41\":1}}],[\"间隔60天\",{\"1\":{\"40\":1}}],[\"某一日\",{\"1\":{\"40\":1}}],[\"获取当前的日期\",{\"1\":{\"40\":1}}],[\"获取当前月份\",{\"1\":{\"40\":1}}],[\"获取当前年份\",{\"1\":{\"40\":1}}],[\"获取当前时间\",{\"1\":{\"40\":1}}],[\"获取当前日期和时间\",{\"1\":{\"40\":1}}],[\"获取当前日期\",{\"1\":{\"40\":1}}],[\"获取指定date的日期\",{\"1\":{\"40\":1}}],[\"获取指定date的月份\",{\"1\":{\"40\":1}}],[\"获取指定date的年份\",{\"1\":{\"40\":1}}],[\"结束时间date2之间的天数\",{\"1\":{\"40\":1}}],[\"结果3\",{\"1\":{\"39\":1}}],[\"结果1\",{\"1\":{\"39\":1}}],[\"结果2\",{\"1\":{\"39\":1}}],[\"日期函数\",{\"0\":{\"40\":1}}],[\"生成一个六位数的随机验证码\",{\"1\":{\"39\":1}}],[\"取余\",{\"1\":{\"39\":1}}],[\"98\",{\"1\":{\"41\":1}}],[\"90\",{\"1\":{\"41\":1}}],[\"95\",{\"1\":{\"41\":1}}],[\"9\",{\"0\":{\"56\":1},\"1\":{\"39\":1}}],[\"求取两个时间之间的天数\",{\"1\":{\"40\":1}}],[\"求参数x的四舍五入的值\",{\"1\":{\"39\":1}}],[\"求和\",{\"1\":{\"34\":1}}],[\"year\",{\"1\":{\"40\":2}}],[\"y的模\",{\"1\":{\"39\":1}}],[\"y\",{\"1\":{\"39\":2}}],[\"向下取整\",{\"1\":{\"39\":1}}],[\"向上取整\",{\"1\":{\"39\":1}}],[\"×\",{\"1\":{\"39\":1}}],[\"x\",{\"1\":{\"39\":3}}],[\"数学\",{\"1\":{\"41\":2}}],[\"数值函数\",{\"0\":{\"39\":1}}],[\"数据缓存\",{\"0\":{\"78\":1}}],[\"数据类型\",{\"1\":{\"44\":1}}],[\"数据将按\",{\"1\":{\"24\":2}}],[\"数据库名和表名可以使用\",{\"1\":{\"27\":1}}],[\"数据库名\",{\"1\":{\"27\":2}}],[\"数据库管理员\",{\"1\":{\"27\":1}}],[\"数据库\",{\"0\":{\"7\":1}}],[\"比如\",{\"1\":{\"38\":1}}],[\"比较运算符\",{\"1\":{\"33\":1}}],[\"统一为5位数\",{\"1\":{\"38\":1}}],[\"统计班级各个学员的成绩\",{\"1\":{\"41\":1}}],[\"统计员工表中\",{\"1\":{\"34\":1}}],[\"统计最大值\",{\"1\":{\"34\":1}}],[\"统计平均数\",{\"1\":{\"34\":1}}],[\"统计数量\",{\"1\":{\"34\":2}}],[\"企业员工的工号\",{\"1\":{\"38\":1}}],[\"由于业务需求变更\",{\"1\":{\"38\":1}}],[\"由于需要输出null\",{\"1\":{\"20\":1}}],[\"去掉字符串头部和尾部的空格\",{\"1\":{\"38\":1}}],[\"去除重复记录\",{\"1\":{\"33\":1}}],[\"去除重复的记录\",{\"1\":{\"33\":1}}],[\"右填充\",{\"1\":{\"38\":1}}],[\"达到n个字符串长度\",{\"1\":{\"38\":2}}],[\"左填充\",{\"1\":{\"38\":1}}],[\"字符串拼接\",{\"1\":{\"38\":1}}],[\"字符串函数\",{\"0\":{\"38\":1}}],[\"字段列表\",{\"1\":{\"33\":2,\"34\":4}}],[\"字段3\",{\"1\":{\"33\":1}}],[\"字段2\",{\"1\":{\"33\":2,\"34\":1}}],[\"字段1\",{\"1\":{\"33\":2,\"34\":1}}],[\"字段名\",{\"1\":{\"44\":1}}],[\"字段名2=值2\",{\"1\":{\"31\":1}}],[\"字段名2\",{\"1\":{\"31\":2}}],[\"字段名1=值1\",{\"1\":{\"31\":1}}],[\"字段名1\",{\"1\":{\"31\":2}}],[\"男\",{\"1\":{\"34\":1}}],[\"男性员工和女性员工的人数\",{\"1\":{\"34\":1}}],[\"年龄\",{\"1\":{\"43\":1,\"44\":1}}],[\"年龄相同按入职时间升序排序\",{\"1\":{\"34\":1}}],[\"年龄小于60岁的\",{\"1\":{\"34\":1}}],[\"对拥塞控制改进\",{\"0\":{\"335\":1}}],[\"对查询的结果按年龄升序排序\",{\"1\":{\"34\":1}}],[\"对记录进行排序\",{\"1\":{\"33\":1}}],[\"以内的前5个员工信息\",{\"1\":{\"34\":1}}],[\"以内的姓名为三个字的员工\",{\"1\":{\"34\":1}}],[\"且年龄在20\",{\"1\":{\"34\":1}}],[\"含\",{\"1\":{\"34\":2}}],[\"含最小\",{\"1\":{\"33\":1}}],[\"分析性能损耗\",{\"0\":{\"174\":1}}],[\"分类\",{\"1\":{\"43\":1}}],[\"分页查询是数据库的方言\",{\"1\":{\"34\":1}}],[\"分组之后\",{\"1\":{\"34\":1}}],[\"分组后的过滤条件\",{\"1\":{\"34\":1}}],[\"分组字段\",{\"1\":{\"34\":1}}],[\"00有什么区别\",{\"0\":{\"204\":1}}],[\"07\",{\"1\":{\"44\":1}}],[\"08\",{\"1\":{\"44\":1}}],[\"03\",{\"1\":{\"44\":1}}],[\"05\",{\"1\":{\"44\":2}}],[\"01\",{\"1\":{\"40\":1,\"44\":2}}],[\"09\",{\"1\":{\"40\":1,\"44\":1}}],[\"0\",{\"0\":{\"70\":1,\"71\":1,\"200\":2,\"201\":2,\"203\":2,\"204\":3},\"1\":{\"34\":1,\"38\":1,\"39\":3,\"43\":2}}],[\"起始索引可以省略\",{\"1\":{\"34\":1}}],[\"起始索引=\",{\"1\":{\"34\":1}}],[\"起始索引从0开始\",{\"1\":{\"34\":1}}],[\"起始索引\",{\"1\":{\"34\":1}}],[\"才会根据第二个字段进行排序\",{\"1\":{\"34\":1}}],[\"降序\",{\"1\":{\"34\":1}}],[\"升序\",{\"1\":{\"34\":1}}],[\"升序排序\",{\"1\":{\"24\":2}}],[\"排序方式\",{\"1\":{\"34\":1}}],[\"排序方式2\",{\"1\":{\"34\":1}}],[\"排序方式1\",{\"1\":{\"34\":1}}],[\"排名相同\",{\"1\":{\"24\":1}}],[\"执行顺序\",{\"1\":{\"34\":1}}],[\"执行时机不同\",{\"1\":{\"34\":1}}],[\"而having可以\",{\"1\":{\"34\":1}}],[\"而having是分组之后对结果进行过滤\",{\"1\":{\"34\":1}}],[\"判断条件不同\",{\"1\":{\"34\":1}}],[\"根据年龄进行升序排序\",{\"1\":{\"34\":2}}],[\"根据工作地址分组\",{\"1\":{\"34\":1}}],[\"根据性别分组\",{\"1\":{\"34\":2}}],[\"并发传输\",{\"0\":{\"162\":1}}],[\"并根据入职天数倒序排序\",{\"1\":{\"40\":1}}],[\"并对查询结果按年龄升序排序\",{\"1\":{\"34\":1}}],[\"并获取人数大于三的工作地址\",{\"1\":{\"34\":1}}],[\"并计算年龄平均值\",{\"1\":{\"34\":1}}],[\"并计算总和\",{\"1\":{\"34\":1}}],[\"并且年龄在20\",{\"1\":{\"34\":1}}],[\"并且\",{\"1\":{\"33\":1}}],[\"平均值\",{\"1\":{\"34\":1}}],[\"函数\",{\"1\":{\"34\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1}}],[\"函数使用\",{\"1\":{\"24\":1}}],[\"聚合函数\",{\"0\":{\"34\":1},\"1\":{\"34\":1}}],[\"非空约束\",{\"1\":{\"43\":1}}],[\"非\",{\"1\":{\"33\":1}}],[\"逻辑运算符\",{\"1\":{\"33\":1}}],[\"是如何迁移连接的\",{\"0\":{\"337\":1}}],[\"是如何做流量控制的\",{\"0\":{\"334\":1}}],[\"是如何解决\",{\"0\":{\"333\":1}}],[\"是面向字节流的协议\",{\"0\":{\"264\":1}}],[\"是面向报文的协议\",{\"0\":{\"263\":1}}],[\"是有三个特点\",{\"0\":{\"188\":1}}],[\"是根据什么来选择当前要执行的线程\",{\"0\":{\"85\":1}}],[\"是null\",{\"1\":{\"33\":1}}],[\"是一个特殊的值\",{\"1\":{\"31\":1}}],[\"是一个窗口函数\",{\"1\":{\"24\":1}}],[\"是一个整数\",{\"1\":{\"21\":1,\"22\":1}}],[\"匹配任意个字符\",{\"1\":{\"33\":1}}],[\"匹配单个字符\",{\"1\":{\"33\":1}}],[\"模糊匹配\",{\"1\":{\"33\":1}}],[\"占位符\",{\"1\":{\"33\":1}}],[\"多级页表\",{\"0\":{\"109\":1}}],[\"多核\",{\"0\":{\"80\":1}}],[\"多个条件任意一个成立\",{\"1\":{\"33\":1}}],[\"多个条件同时成立\",{\"1\":{\"33\":1}}],[\"多个权限之间\",{\"1\":{\"27\":1}}],[\"多选一\",{\"1\":{\"33\":1}}],[\"最小值\",{\"1\":{\"34\":2}}],[\"最大值\",{\"1\":{\"33\":1,\"34\":1}}],[\"最早的\",{\"1\":{\"24\":2}}],[\"不重复的\",{\"1\":{\"43\":1}}],[\"不及格\",{\"1\":{\"41\":1}}],[\"不同的数据库有不同的实现\",{\"1\":{\"34\":1}}],[\"不参与分组\",{\"1\":{\"34\":1}}],[\"不满足where条件\",{\"1\":{\"34\":1}}],[\"不是\",{\"1\":{\"33\":1}}],[\"不等\",{\"1\":{\"33\":1}}],[\"不能使用普通的等号\",{\"1\":{\"31\":1}}],[\"不能是函数参数\",{\"1\":{\"20\":1}}],[\"不能直接将参数n递给\",{\"1\":{\"20\":1}}],[\"或者\",{\"1\":{\"33\":1}}],[\"或ⅱ\",{\"1\":{\"33\":1}}],[\"或\",{\"1\":{\"33\":3}}],[\"大于等于\",{\"1\":{\"33\":1}}],[\"大于\",{\"1\":{\"33\":1}}],[\"功能\",{\"1\":{\"33\":2,\"34\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1}}],[\">=60\",{\"1\":{\"41\":1}}],[\">=85\",{\"1\":{\"41\":1}}],[\">=\",{\"1\":{\"33\":1,\"41\":2}}],[\">\",{\"1\":{\"33\":2,\"34\":1,\"41\":2,\"43\":1}}],[\"也可以省去as\",{\"1\":{\"33\":1}}],[\"也是一个整数\",{\"1\":{\"22\":1}}],[\"工作地址\",{\"1\":{\"41\":1}}],[\"工作地点\",{\"1\":{\"33\":3}}],[\"工具\",{\"0\":{\"8\":1}}],[\"别名2\",{\"1\":{\"33\":1}}],[\"别名1\",{\"1\":{\"33\":1}}],[\"设置别名\",{\"1\":{\"33\":1}}],[\"选择要返回的列\",{\"1\":{\"33\":1}}],[\"处理表连接\",{\"1\":{\"33\":1}}],[\"确定要查询的表\",{\"1\":{\"33\":1}}],[\"倪浩\",{\"1\":{\"31\":1}}],[\"条件列表\",{\"1\":{\"33\":1}}],[\"条件查询\",{\"1\":{\"33\":1}}],[\"条件\",{\"1\":{\"31\":2,\"34\":1}}],[\"条记录后\",{\"1\":{\"22\":1}}],[\"条记录\",{\"1\":{\"22\":2}}],[\"批量添加数据\",{\"1\":{\"31\":1}}],[\"给全部的字段添加数据\",{\"1\":{\"31\":1}}],[\"给指定字段添加数据\",{\"1\":{\"31\":1}}],[\"例子\",{\"1\":{\"31\":4,\"33\":3}}],[\"值2\",{\"1\":{\"31\":8}}],[\"值1\",{\"1\":{\"31\":8}}],[\"代表所有\",{\"1\":{\"27\":1}}],[\"授权模式\",{\"0\":{\"71\":1}}],[\"授权时\",{\"1\":{\"27\":1}}],[\"授予权限\",{\"1\":{\"27\":1}}],[\"撤销权限\",{\"1\":{\"27\":1}}],[\"创建表\",{\"1\":{\"44\":2}}],[\"创建数据库\",{\"1\":{\"27\":1}}],[\"创建用户能在任意主机上访问\",{\"1\":{\"27\":1}}],[\"创建用户只能在当前主机上访问\",{\"1\":{\"27\":1}}],[\"创建用户\",{\"1\":{\"27\":1}}],[\"视图\",{\"1\":{\"27\":1}}],[\"表的员工姓名和工作地址\",{\"1\":{\"41\":1}}],[\"表名values\",{\"1\":{\"31\":1}}],[\"表名\",{\"1\":{\"27\":2,\"31\":5,\"33\":5,\"34\":4,\"44\":4}}],[\"表\",{\"1\":{\"27\":2}}],[\"表示在跳过\",{\"1\":{\"22\":1}}],[\"表示要跳过的记录数\",{\"1\":{\"22\":1}}],[\"表示从结果集的哪一条记录开始返回数据\",{\"1\":{\"21\":1}}],[\"删除\",{\"1\":{\"44\":1}}],[\"删除外键\",{\"1\":{\"44\":2}}],[\"删除数据库\",{\"1\":{\"27\":1}}],[\"删除数据\",{\"1\":{\"27\":1,\"31\":1}}],[\"删除用户\",{\"1\":{\"27\":2}}],[\"修改表\",{\"1\":{\"27\":1}}],[\"修改数据\",{\"1\":{\"27\":1,\"31\":1}}],[\"修改用户密码\",{\"1\":{\"27\":2}}],[\"udp\",{\"0\":{\"263\":1}}],[\"udp和tcp的区别和应用场景\",{\"0\":{\"228\":1}}],[\"unique\",{\"1\":{\"43\":1}}],[\"unioue\",{\"1\":{\"43\":1}}],[\"unit\",{\"1\":{\"40\":2}}],[\"upper\",{\"1\":{\"38\":1}}],[\"update\",{\"1\":{\"27\":1,\"31\":2,\"38\":1,\"44\":2}}],[\"user1`set\",{\"1\":{\"31\":1}}],[\"user1`values\",{\"1\":{\"31\":1}}],[\"user1`\",{\"1\":{\"31\":3}}],[\"user\",{\"1\":{\"27\":7,\"43\":1}}],[\"use\",{\"0\":{\"246\":1},\"1\":{\"27\":1}}],[\"插入数据\",{\"1\":{\"27\":1,\"44\":2}}],[\"查询报文类型\",{\"0\":{\"198\":1}}],[\"查询emp\",{\"1\":{\"41\":1}}],[\"查询所有员工入职天数\",{\"1\":{\"40\":1}}],[\"查询所有年龄小于等于35岁员工的姓名和年龄\",{\"1\":{\"34\":1}}],[\"查询性别为男\",{\"1\":{\"34\":2}}],[\"查询年龄为20\",{\"1\":{\"34\":1}}],[\"查询年龄小于45\",{\"1\":{\"34\":1}}],[\"查询页码\",{\"1\":{\"34\":1}}],[\"查询第二页数据\",{\"1\":{\"34\":1}}],[\"查询第一页数据\",{\"1\":{\"34\":1}}],[\"查询记录数\",{\"1\":{\"34\":1}}],[\"查询其他字段无任何意义\",{\"1\":{\"34\":1}}],[\"查询的字段一般为聚合函数和分组字段\",{\"1\":{\"34\":1}}],[\"查询两个字的姓名\",{\"1\":{\"33\":1}}],[\"查询多个字段\",{\"1\":{\"33\":1}}],[\"查询权限\",{\"1\":{\"27\":1}}],[\"查询数据\",{\"1\":{\"27\":1}}],[\"查询用户\",{\"1\":{\"27\":1}}],[\"所有权限\",{\"1\":{\"27\":1}}],[\"所以将查询设为一个子查询\",{\"1\":{\"20\":1}}],[\"说明\",{\"1\":{\"27\":1,\"44\":1}}],[\"权限列表\",{\"1\":{\"27\":2}}],[\"权限\",{\"1\":{\"27\":1}}],[\"主表字段\",{\"1\":{\"44\":1}}],[\"主表名\",{\"1\":{\"44\":1}}],[\"主表列名\",{\"1\":{\"44\":2}}],[\"主表\",{\"1\":{\"44\":2}}],[\"主键\",{\"1\":{\"43\":1}}],[\"主键是一行数据的唯一标识\",{\"1\":{\"43\":1}}],[\"主键约束\",{\"1\":{\"43\":1}}],[\"主要是dba\",{\"1\":{\"27\":1}}],[\"主机名可以使用\",{\"1\":{\"27\":1}}],[\"主机名\",{\"1\":{\"27\":6}}],[\"通过dns获取到ip后\",{\"0\":{\"353\":1}}],[\"通过数据库的函数\",{\"1\":{\"39\":1}}],[\"通配\",{\"1\":{\"27\":1}}],[\"通常基于order\",{\"1\":{\"24\":1}}],[\"注意\",{\"1\":{\"27\":2,\"34\":3}}],[\"43\",{\"1\":{\"44\":1}}],[\"48\",{\"1\":{\"44\":1}}],[\"45\",{\"1\":{\"34\":1}}],[\"404\",{\"1\":{\"365\":1}}],[\"40岁\",{\"1\":{\"34\":2}}],[\"40\",{\"1\":{\"33\":2}}],[\"4\",{\"0\":{\"51\":1,\"65\":1,\"74\":1,\"161\":1,\"186\":1,\"246\":1,\"292\":1,\"354\":1,\"359\":1},\"1\":{\"27\":1,\"31\":1,\"34\":1,\"39\":1,\"44\":1}}],[\"新密码\",{\"1\":{\"27\":1}}],[\"wait状态的tcp接收到syn报文会怎么样\",{\"0\":{\"320\":1}}],[\"wait状态的意义\",{\"0\":{\"66\":1}}],[\"wait\",{\"0\":{\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"249\":1,\"323\":1}}],[\"wait和time\",{\"0\":{\"217\":1}}],[\"websocket是什么\",{\"0\":{\"190\":1}}],[\"when\",{\"1\":{\"41\":6}}],[\"where>聚合函数>having\",{\"1\":{\"34\":1}}],[\"where不能对聚合函数进行判断\",{\"1\":{\"34\":1}}],[\"where是分组之前进行过滤\",{\"1\":{\"34\":1}}],[\"where与having区别\",{\"1\":{\"34\":1}}],[\"where\",{\"1\":{\"18\":1,\"19\":1,\"20\":1,\"31\":4,\"33\":8,\"34\":7}}],[\"with\",{\"1\":{\"27\":2}}],[\"33\",{\"1\":{\"44\":1}}],[\"34\",{\"1\":{\"39\":1}}],[\"30\",{\"1\":{\"31\":2}}],[\"3\",{\"0\":{\"50\":1,\"60\":1,\"64\":1,\"73\":1,\"111\":1,\"155\":1,\"158\":1,\"167\":1,\"171\":1,\"172\":1,\"185\":1,\"291\":1,\"353\":1,\"357\":1},\"1\":{\"27\":2,\"31\":1,\"33\":1,\"34\":2,\"39\":1,\"41\":1,\"44\":2}}],[\"密码123456\",{\"1\":{\"27\":2}}],[\"密码\",{\"1\":{\"27\":1}}],[\"`score`\",{\"1\":{\"41\":1}}],[\"`salary`\",{\"1\":{\"20\":1}}],[\"`chinese`\",{\"1\":{\"41\":1}}],[\"`math`\",{\"1\":{\"41\":2}}],[\"`address`\",{\"1\":{\"41\":1}}],[\"`age`<=35\",{\"1\":{\"34\":1}}],[\"`age`<=40\",{\"1\":{\"34\":2}}],[\"`age`>=20\",{\"1\":{\"34\":2}}],[\"`age`=\",{\"1\":{\"33\":3}}],[\"`age`\",{\"1\":{\"31\":2,\"33\":4,\"34\":12}}],[\"`workon`\",{\"1\":{\"38\":2}}],[\"`workadress`\",{\"1\":{\"33\":3,\"34\":3}}],[\"`english`\",{\"1\":{\"41\":1}}],[\"`entydate`\",{\"1\":{\"34\":1}}],[\"`entrydate`\",{\"1\":{\"34\":2,\"40\":1}}],[\"`emp`where\",{\"1\":{\"34\":1}}],[\"`emp`\",{\"1\":{\"33\":9,\"34\":17,\"38\":1,\"40\":1}}],[\"`gender`\",{\"1\":{\"34\":7}}],[\"`西安`\",{\"1\":{\"34\":1}}],[\"`id`\",{\"1\":{\"34\":1}}],[\"`idcard`\",{\"1\":{\"33\":1}}],[\"`name`\",{\"1\":{\"31\":3,\"33\":1,\"34\":2,\"40\":1,\"41\":2}}],[\"`flipped\",{\"1\":{\"31\":5}}],[\"`user`\",{\"1\":{\"27\":1}}],[\"控制数据库的访问权限\",{\"1\":{\"27\":1}}],[\"订单最多的客户\",{\"0\":{\"25\":1},\"1\":{\"25\":1}}],[\"50\",{\"1\":{\"44\":2}}],[\"56\",{\"1\":{\"41\":1}}],[\"5\",{\"0\":{\"52\":1,\"162\":1,\"360\":1,\"361\":1},\"1\":{\"34\":2,\"38\":1,\"44\":2}}],[\"586\",{\"0\":{\"25\":1},\"1\":{\"25\":1}}],[\"551\",{\"0\":{\"24\":1},\"1\":{\"24\":1}}],[\"tlb\",{\"0\":{\"110\":1}}],[\"time\",{\"0\":{\"66\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"249\":1,\"323\":1}}],[\"tcp四次挥手可以变成三次吗\",{\"0\":{\"316\":1}}],[\"tcp四次挥手性能的提升\",{\"0\":{\"253\":1}}],[\"tcp断开连接\",{\"0\":{\"310\":1}}],[\"tcpkill\",{\"0\":{\"307\":1}}],[\"tcp连接\",{\"0\":{\"326\":1}}],[\"tcp连接的断开\",{\"0\":{\"309\":1}}],[\"tcp连接的建立\",{\"0\":{\"293\":1,\"294\":1}}],[\"tcp连接会消失吗\",{\"0\":{\"267\":1}}],[\"tcp半连接队列和全连接队列\",{\"0\":{\"265\":1}}],[\"tcp工作在那一层\",{\"0\":{\"258\":1}}],[\"tcp基本认识\",{\"0\":{\"256\":1}}],[\"tcp传输数据的性能提升\",{\"0\":{\"254\":1}}],[\"tcp三次握手的性能提升\",{\"0\":{\"252\":1}}],[\"tcp的四次挥手\",{\"0\":{\"311\":1}}],[\"tcp的重传机制\",{\"0\":{\"287\":1,\"288\":1}}],[\"tcp的流量控制\",{\"0\":{\"276\":1}}],[\"tcp的拥塞控制\",{\"0\":{\"270\":1}}],[\"tcp的头格式\",{\"0\":{\"257\":1}}],[\"tcp的基本认识\",{\"0\":{\"255\":1}}],[\"tcp的优化\",{\"0\":{\"250\":1}}],[\"tcp的socket编程\",{\"0\":{\"231\":1}}],[\"tcp的三次握手和四次挥手\",{\"0\":{\"56\":1}}],[\"tcp和udp可以同时绑定相同的端口吗\",{\"0\":{\"242\":1,\"243\":1}}],[\"tcp和udp的区别\",{\"0\":{\"48\":1,\"227\":1,\"229\":1}}],[\"tcp和ping数据的区别\",{\"0\":{\"202\":1}}],[\"tcp\",{\"0\":{\"188\":1,\"246\":1,\"249\":1,\"264\":1,\"303\":1,\"333\":1,\"373\":1}}],[\"tcp与tls的握手延迟\",{\"0\":{\"166\":1}}],[\"tcp是如何保证有序的\",{\"0\":{\"52\":1}}],[\"tcp是如何保证可靠的\",{\"0\":{\"50\":1}}],[\"tcp是如何做链接管理的\",{\"0\":{\"49\":1}}],[\"table\",{\"1\":{\"41\":1,\"43\":1,\"44\":9}}],[\"traceroute\",{\"0\":{\"199\":1}}],[\"true\",{\"1\":{\"41\":1}}],[\"trim\",{\"1\":{\"38\":1}}],[\"then\",{\"1\":{\"41\":6}}],[\"t\",{\"1\":{\"41\":1}}],[\"type\",{\"1\":{\"40\":1}}],[\"tom\",{\"1\":{\"41\":1}}],[\"to\",{\"1\":{\"27\":1}}],[\"todo\",{\"1\":{\"24\":1}}],[\"teacher\",{\"1\":{\"23\":3}}],[\"找到窗口中的最大值\",{\"1\":{\"24\":1}}],[\"找到窗口中的最小值\",{\"1\":{\"24\":1}}],[\"它返回在每个分区内按指定顺序的第一个值\",{\"1\":{\"24\":1}}],[\"返回res1\",{\"1\":{\"41\":2}}],[\"返回value1\",{\"1\":{\"41\":1}}],[\"返回起始时间date1和\",{\"1\":{\"40\":1}}],[\"返回一个日期\",{\"1\":{\"40\":1}}],[\"返回当前时间\",{\"1\":{\"40\":1}}],[\"返回当前日期和时间\",{\"1\":{\"40\":1}}],[\"返回当前日期\",{\"1\":{\"40\":1}}],[\"返回当前行及其之前所有行的累积分布\",{\"1\":{\"24\":1}}],[\"返回当前行之前第n行的数据\",{\"1\":{\"24\":1}}],[\"返回当前行之后第n行的数据\",{\"1\":{\"24\":1}}],[\"返回0~1内的随机数\",{\"1\":{\"39\":1}}],[\"返回x\",{\"1\":{\"39\":1}}],[\"返回从字符串str从start位置起的len个长度的字符串\",{\"1\":{\"38\":1}}],[\"返回限定的记录数\",{\"1\":{\"33\":1}}],[\"返回窗口中每行的百分比排名\",{\"1\":{\"24\":1}}],[\"返回窗口定义中指定的排序后最后一行的数据\",{\"1\":{\"24\":1}}],[\"返回每行所属的组号\",{\"1\":{\"24\":1}}],[\"返回接下来的1行数据\",{\"1\":{\"21\":1}}],[\"但是排名不会跳过\",{\"1\":{\"24\":1}}],[\"类似\",{\"1\":{\"24\":1}}],[\"后续的排名会跳过\",{\"1\":{\"24\":1}}],[\"后端技术\",{\"0\":{\"6\":1}}],[\"即使存在并列排名\",{\"1\":{\"24\":1}}],[\"即并列\",{\"1\":{\"24\":1}}],[\"即只有1行或者为空\",{\"1\":{\"20\":1}}],[\"计算机网络基础\",{\"0\":{\"374\":1}}],[\"计算机网络\",{\"0\":{\"371\":1}}],[\"计算机操作系统\",{\"0\":{\"369\":1}}],[\"计算机是怎么存小数的\",{\"0\":{\"133\":1}}],[\"计算机保存数据的形式\",{\"0\":{\"130\":1}}],[\"计算窗口内值的样本方差\",{\"1\":{\"24\":1}}],[\"计算窗口内值的样本标准差\",{\"1\":{\"24\":1}}],[\"计算窗口内值的总体方差\",{\"1\":{\"24\":1}}],[\"计算窗口内值的总体标准差\",{\"1\":{\"24\":1}}],[\"计算窗口中的平均值\",{\"1\":{\"24\":1}}],[\"计算窗口中的总和\",{\"1\":{\"24\":1}}],[\"计算当前行和前六行的数据的amount的总和\",{\"1\":{\"24\":1}}],[\"计数前六行和当前行的数据\",{\"1\":{\"24\":1}}],[\"6600\",{\"1\":{\"44\":1}}],[\"66\",{\"1\":{\"41\":1,\"44\":1}}],[\"67\",{\"1\":{\"41\":1}}],[\"60\",{\"1\":{\"34\":1,\"40\":1,\"41\":1}}],[\"6\",{\"0\":{\"53\":1,\"163\":1,\"362\":1},\"1\":{\"24\":3,\"39\":1}}],[\"rst\",{\"0\":{\"323\":1}}],[\"rose\",{\"1\":{\"41\":1}}],[\"round\",{\"1\":{\"39\":4}}],[\"row\",{\"1\":{\"24\":4}}],[\"rows\",{\"1\":{\"24\":2}}],[\"rand\",{\"1\":{\"39\":4}}],[\"rank\",{\"1\":{\"24\":3}}],[\"rpad\",{\"1\":{\"38\":1}}],[\"resource\",{\"0\":{\"46\":1}}],[\"restrict\",{\"1\":{\"44\":1}}],[\"restrict一致\",{\"1\":{\"44\":1}}],[\"res1\",{\"1\":{\"41\":2}}],[\"references\",{\"1\":{\"44\":5}}],[\"revoke\",{\"1\":{\"27\":1}}],[\"return\",{\"1\":{\"20\":1}}],[\"returns\",{\"1\":{\"20\":1}}],[\"rn\",{\"1\":{\"24\":1}}],[\"将字符串str全部转为大写\",{\"1\":{\"38\":1}}],[\"将字符串str全部转为小写\",{\"1\":{\"38\":1}}],[\"将s1\",{\"1\":{\"38\":1}}],[\"将记录进行分组\",{\"1\":{\"33\":1}}],[\"将结果集分为n个大致相等的组\",{\"1\":{\"24\":1}}],[\"将返回每个分区内第一个\",{\"1\":{\"24\":2}}],[\"将空值的情况返回一个null值\",{\"1\":{\"20\":1}}],[\"都会创建一个独立的分区\",{\"1\":{\"24\":2}}],[\"每页显示记录数\",{\"1\":{\"34\":1}}],[\"每页展示十条数据\",{\"1\":{\"34\":2}}],[\"每个不同的\",{\"1\":{\"24\":2}}],[\"每位教师所教授的科目种类的数量\",{\"0\":{\"23\":1},\"1\":{\"23\":1}}],[\"val1\",{\"1\":{\"41\":2}}],[\"value2\",{\"1\":{\"41\":1}}],[\"value1\",{\"1\":{\"41\":1}}],[\"values\",{\"1\":{\"31\":3,\"41\":1,\"44\":2}}],[\"value\",{\"1\":{\"24\":6,\"31\":2,\"40\":2,\"41\":1}}],[\"varchar\",{\"1\":{\"41\":1,\"43\":1,\"44\":3}}],[\"var\",{\"1\":{\"24\":2}}],[\"visited\",{\"1\":{\"24\":3}}],[\"viewer\",{\"1\":{\"18\":1}}],[\"views\",{\"1\":{\"18\":1}}],[\"易懂\",{\"1\":{\"24\":1}}],[\"简单分页\",{\"0\":{\"108\":1}}],[\"简短\",{\"1\":{\"24\":1}}],[\"简介\",{\"0\":{\"2\":1}}],[\"ping的工作原理\",{\"0\":{\"196\":1,\"197\":1}}],[\"primary\",{\"1\":{\"43\":2,\"44\":2}}],[\"privileges\",{\"1\":{\"27\":1}}],[\"preceding\",{\"1\":{\"24\":2}}],[\"percent\",{\"1\":{\"24\":1}}],[\"pop\",{\"1\":{\"24\":2}}],[\"packet\",{\"0\":{\"331\":1}}],[\"pad\",{\"1\":{\"38\":2}}],[\"password\",{\"1\":{\"27\":2}}],[\"past\",{\"1\":{\"24\":1}}],[\"partition\",{\"1\":{\"24\":4}}],[\"patients\",{\"1\":{\"19\":1}}],[\"patient\",{\"1\":{\"19\":2}}],[\"player\",{\"1\":{\"24\":11}}],[\"用了tcp传输数据就一定不会丢包吗\",{\"0\":{\"269\":1}}],[\"用补码的形式保存负数\",{\"0\":{\"131\":1}}],[\"用户态和内核态\",{\"0\":{\"342\":1}}],[\"用户扫码是如何实现的\",{\"0\":{\"72\":1}}],[\"用户登录\",{\"0\":{\"47\":1,\"69\":1}}],[\"用户表\",{\"1\":{\"43\":1}}],[\"用户名\",{\"1\":{\"27\":6}}],[\"用于限制存储在表中的数据\",{\"1\":{\"43\":1}}],[\"用字符串pad对str的右边进行填充\",{\"1\":{\"38\":1}}],[\"用字符串pad对str的左边进行填充\",{\"1\":{\"38\":1}}],[\"用来让两张表的数据之间建立连接\",{\"1\":{\"43\":1}}],[\"用来查询数据库中表的记录\",{\"1\":{\"33\":1}}],[\"用来对数据库表中的数据进行增删改查\",{\"1\":{\"31\":1}}],[\"用来创建数据库用户\",{\"1\":{\"27\":1}}],[\"用limit限制返回一行数据\",{\"1\":{\"25\":1}}],[\"用like查找含有diab1为前缀的conditions\",{\"1\":{\"19\":1}}],[\"用distinct去重\",{\"1\":{\"23\":1}}],[\"2msl\",{\"0\":{\"218\":1}}],[\"23\",{\"1\":{\"34\":1,\"41\":1}}],[\"23岁的员工信息\",{\"1\":{\"34\":1}}],[\"2356\",{\"0\":{\"23\":1},\"1\":{\"23\":1}}],[\"22\",{\"1\":{\"34\":2}}],[\"21\",{\"1\":{\"34\":2}}],[\"2004\",{\"1\":{\"44\":2}}],[\"2002\",{\"1\":{\"44\":1}}],[\"2005\",{\"1\":{\"44\":1}}],[\"2000\",{\"1\":{\"44\":2}}],[\"20000\",{\"1\":{\"44\":1}}],[\"2024\",{\"1\":{\"40\":1}}],[\"2018\",{\"1\":{\"40\":1}}],[\"20\",{\"1\":{\"33\":4,\"34\":1,\"41\":1,\"44\":2}}],[\"2\",{\"0\":{\"22\":1,\"49\":1,\"59\":1,\"63\":1,\"71\":1,\"72\":1,\"107\":1,\"154\":1,\"157\":1,\"166\":1,\"168\":1,\"170\":1,\"183\":1,\"190\":1,\"244\":1,\"290\":1,\"350\":1,\"356\":1},\"1\":{\"27\":2,\"31\":1,\"33\":1,\"34\":1,\"39\":2,\"41\":1,\"44\":4}}],[\"这就要求该外键允许取null\",{\"1\":{\"44\":1}}],[\"这类sql开发人员操作的比较少\",{\"1\":{\"27\":1}}],[\"这表示在每个分区内\",{\"1\":{\"24\":2}}],[\"这表示窗口函数将按\",{\"1\":{\"24\":2}}],[\"这种语法用于跳过查询结果的前\",{\"1\":{\"22\":1}}],[\"这种语法用于从查询结果的第\",{\"1\":{\"21\":1}}],[\"这种语法通常用于分页或获取某一个特定位置的记录\",{\"1\":{\"21\":1}}],[\"这里的\",{\"1\":{\"21\":1}}],[\"这样外层查询在无数据查询的情况下会返回一个null\",{\"1\":{\"20\":1}}],[\"赋值\",{\"1\":{\"20\":1}}],[\"声明了一个变量\",{\"1\":{\"20\":1}}],[\"参数必须是一个常量或一个变量\",{\"1\":{\"20\":1}}],[\"子表将外键列设置成一个默认的值\",{\"1\":{\"44\":1}}],[\"子句中使用\",{\"1\":{\"20\":1}}],[\"子查询找到最大的\",{\"1\":{\"20\":1}}],[\"在委托操作系统发送消息时必须提供\",{\"0\":{\"350\":1}}],[\"在发送之前\",{\"0\":{\"350\":1}}],[\"在time\",{\"0\":{\"320\":1}}],[\"在in之后的列表中的值\",{\"1\":{\"33\":1}}],[\"在某个范围之内\",{\"1\":{\"33\":1}}],[\"在\",{\"0\":{\"323\":1},\"1\":{\"20\":1}}],[\"e类\",{\"0\":{\"210\":1}}],[\"emp\",{\"1\":{\"41\":1,\"44\":9}}],[\"employee\",{\"1\":{\"20\":5}}],[\"error\",{\"1\":{\"41\":1}}],[\"else\",{\"1\":{\"41\":4}}],[\"entrydate\",{\"1\":{\"44\":2}}],[\"entrydates\",{\"1\":{\"40\":2}}],[\"english\",{\"1\":{\"41\":2}}],[\"end\",{\"1\":{\"20\":1,\"41\":4}}],[\"expr\",{\"1\":{\"40\":1,\"41\":1}}],[\"explain\",{\"0\":{\"35\":1,\"36\":1}}],[\"event\",{\"1\":{\"24\":11}}],[\"my\",{\"0\":{\"367\":1}}],[\"mysql中是limit\",{\"1\":{\"34\":1}}],[\"mysql\",{\"1\":{\"27\":3}}],[\"mesi\",{\"0\":{\"96\":1}}],[\"month\",{\"1\":{\"40\":2}}],[\"mod\",{\"1\":{\"39\":3}}],[\"mian\",{\"1\":{\"27\":2}}],[\"min\",{\"1\":{\"24\":2,\"34\":2}}],[\"mac\",{\"0\":{\"360\":1}}],[\"managerid\",{\"1\":{\"44\":2}}],[\"math\",{\"1\":{\"41\":2}}],[\"main\",{\"1\":{\"27\":2}}],[\"max\",{\"1\":{\"20\":2,\"24\":1,\"34\":2}}],[\"m=n\",{\"1\":{\"20\":1}}],[\"m\",{\"1\":{\"20\":4,\"21\":2}}],[\"backlog\",{\"0\":{\"233\":1}}],[\"b\",{\"0\":{\"209\":1}}],[\"bob\",{\"1\":{\"31\":1}}],[\"between\",{\"1\":{\"24\":2,\"33\":2}}],[\"begin\",{\"1\":{\"20\":1}}],[\"by子句定义的顺序\",{\"1\":{\"24\":1}}],[\"by\",{\"1\":{\"18\":2,\"20\":3,\"23\":1,\"24\":12,\"25\":2,\"27\":5,\"33\":2,\"34\":10,\"40\":1}}],[\"get和post的方法都是安全和幂等的吗\",{\"0\":{\"147\":1}}],[\"get与post的区别\",{\"0\":{\"146\":1}}],[\"get与post请求\",{\"0\":{\"145\":1}}],[\"getnthhighestsalary\",{\"1\":{\"20\":2}}],[\"gender\",{\"1\":{\"43\":1}}],[\"grant\",{\"1\":{\"27\":1}}],[\"grants\",{\"1\":{\"27\":1}}],[\"group\",{\"1\":{\"18\":1,\"23\":1,\"24\":1,\"25\":1,\"33\":1,\"34\":5}}],[\"close\",{\"0\":{\"217\":1,\"223\":1,\"235\":1}}],[\"c类\",{\"0\":{\"209\":1}}],[\"cache\",{\"0\":{\"75\":1,\"76\":1,\"83\":1,\"91\":1}}],[\"cascade\",{\"1\":{\"44\":5}}],[\"case\",{\"1\":{\"41\":4}}],[\"cpu如何执行任务的\",{\"0\":{\"82\":1}}],[\"cpu\",{\"0\":{\"75\":1,\"77\":1,\"80\":1,\"85\":1,\"88\":1,\"91\":1}}],[\"cross\",{\"0\":{\"46\":1}}],[\"create\",{\"1\":{\"20\":1,\"27\":4,\"41\":1,\"43\":1,\"44\":3}}],[\"char\",{\"1\":{\"43\":2}}],[\"charlie\",{\"1\":{\"31\":1}}],[\"check\",{\"1\":{\"43\":2}}],[\"chinese\",{\"1\":{\"41\":2}}],[\"ceil\",{\"1\":{\"39\":3}}],[\"cup的缓存一致性\",{\"0\":{\"90\":1}}],[\"cup是如何执行任务的\",{\"0\":{\"81\":1}}],[\"cup\",{\"0\":{\"76\":1}}],[\"curtime\",{\"1\":{\"40\":2}}],[\"curdate\",{\"1\":{\"40\":3}}],[\"current\",{\"1\":{\"24\":2}}],[\"customer\",{\"1\":{\"25\":2}}],[\"cume\",{\"1\":{\"24\":1}}],[\"cnt\",{\"1\":{\"23\":1}}],[\"cookies方案为什么不直接取代半连接队列\",{\"0\":{\"241\":1}}],[\"cors\",{\"0\":{\"46\":1}}],[\"cors策略\",{\"0\":{\"45\":1}}],[\"comment\",{\"1\":{\"41\":6,\"43\":6,\"44\":12}}],[\"constraint\",{\"1\":{\"44\":5}}],[\"concat\",{\"1\":{\"38\":1}}],[\"conditions\",{\"1\":{\"19\":3}}],[\"column\",{\"1\":{\"24\":2}}],[\"count\",{\"1\":{\"22\":2,\"23\":1,\"24\":2,\"25\":1,\"34\":7}}],[\"ip协议还可以\",{\"0\":{\"346\":1}}],[\"ip协议的寻址作用\",{\"0\":{\"345\":1}}],[\"ip协议的相关技术\",{\"0\":{\"191\":1}}],[\"ipv6的首部改进\",{\"0\":{\"216\":1}}],[\"ipv6\",{\"0\":{\"215\":1}}],[\"ip分片与重组\",{\"0\":{\"214\":1}}],[\"ip\",{\"0\":{\"212\":2,\"213\":1,\"359\":1,\"372\":1}}],[\"ip的分类\",{\"0\":{\"208\":1}}],[\"ip的基础知识\",{\"0\":{\"207\":1}}],[\"ip基本认识\",{\"0\":{\"206\":1}}],[\"icmp\",{\"0\":{\"195\":1}}],[\"if\",{\"1\":{\"41\":2}}],[\"ifnull\",{\"1\":{\"20\":2,\"41\":2}}],[\"is\",{\"1\":{\"31\":2,\"33\":2}}],[\"innodb不支持\",{\"1\":{\"44\":1}}],[\"increment\",{\"1\":{\"43\":1,\"44\":2}}],[\"in\",{\"0\":{\"246\":1},\"1\":{\"33\":2,\"34\":1}}],[\"insert\",{\"1\":{\"27\":1,\"31\":7,\"41\":1,\"44\":2}}],[\"interval\",{\"1\":{\"40\":4}}],[\"into\",{\"1\":{\"31\":7,\"41\":1,\"44\":2}}],[\"int\",{\"1\":{\"20\":4,\"41\":4,\"43\":2,\"44\":6}}],[\"identified\",{\"1\":{\"27\":5}}],[\"id\",{\"1\":{\"18\":6,\"19\":1,\"23\":3,\"24\":11,\"41\":4,\"43\":1,\"44\":14}}],[\"no\",{\"1\":{\"44\":1}}],[\"now\",{\"1\":{\"40\":6}}],[\"not\",{\"1\":{\"33\":2,\"43\":2,\"44\":2,\"365\":1}}],[\"nat\",{\"0\":{\"194\":1}}],[\"native\",{\"1\":{\"27\":2}}],[\"name=\",{\"1\":{\"31\":1}}],[\"name\",{\"1\":{\"19\":1,\"31\":1,\"41\":2,\"43\":1,\"44\":4}}],[\"ntile\",{\"1\":{\"24\":1}}],[\"number\",{\"1\":{\"24\":2,\"25\":2}}],[\"null\",{\"1\":{\"20\":3,\"31\":4,\"33\":2,\"43\":2,\"44\":4}}],[\"n\",{\"1\":{\"20\":2,\"24\":1,\"38\":2}}],[\"包括\",{\"1\":{\"20\":1}}],[\"那么查询将不会返回任何结果\",{\"1\":{\"20\":1}}],[\"时候参数\",{\"0\":{\"233\":1}}],[\"时间值加上一个时间间隔expr后的时间值\",{\"1\":{\"40\":1}}],[\"时\",{\"1\":{\"20\":2}}],[\"使用逗号分隔\",{\"1\":{\"27\":1}}],[\"使用ifnull\",{\"1\":{\"20\":1}}],[\"使用\",{\"1\":{\"20\":1,\"27\":1}}],[\"oauth\",{\"0\":{\"71\":1}}],[\"ok\",{\"1\":{\"41\":2}}],[\"on\",{\"1\":{\"24\":3,\"27\":2,\"44\":4}}],[\"over\",{\"1\":{\"24\":5}}],[\"offset\",{\"1\":{\"20\":6,\"22\":3,\"33\":1}}],[\"origin\",{\"0\":{\"46\":1}}],[\"or\",{\"1\":{\"19\":1,\"33\":3}}],[\"orders\",{\"1\":{\"25\":1}}],[\"order\",{\"1\":{\"18\":1,\"20\":3,\"24\":7,\"25\":1,\"33\":1,\"34\":5,\"40\":1}}],[\"dns服务器\",{\"0\":{\"351\":1}}],[\"duplicate\",{\"0\":{\"292\":1}}],[\"dhcp\",{\"0\":{\"193\":1}}],[\"dql数据查询语言\",{\"1\":{\"33\":1}}],[\"dql\",{\"0\":{\"33\":1}}],[\"dml数据库操作语言\",{\"1\":{\"31\":1}}],[\"dml\",{\"0\":{\"31\":1}}],[\"ddl\",{\"0\":{\"29\":1}}],[\"drop\",{\"1\":{\"27\":3,\"44\":2}}],[\"dcl数据控制语言\",{\"1\":{\"27\":1}}],[\"dcl\",{\"0\":{\"27\":1}}],[\"day\",{\"1\":{\"40\":3}}],[\"days\",{\"1\":{\"24\":2}}],[\"database\",{\"1\":{\"27\":1}}],[\"date2\",{\"1\":{\"40\":1}}],[\"date1\",{\"1\":{\"40\":1}}],[\"datediff\",{\"1\":{\"40\":3}}],[\"date\",{\"1\":{\"24\":11,\"40\":10,\"44\":1}}],[\"dept\",{\"1\":{\"44\":12}}],[\"default\",{\"1\":{\"41\":3,\"43\":2,\"44\":1}}],[\"de\",{\"1\":{\"40\":1}}],[\"delete\",{\"1\":{\"27\":1,\"31\":2,\"44\":2}}],[\"dense\",{\"1\":{\"24\":1}}],[\"declare\",{\"1\":{\"20\":2}}],[\"desc\",{\"1\":{\"20\":3,\"25\":1,\"34\":3}}],[\"dist\",{\"1\":{\"24\":1}}],[\"distinct\",{\"1\":{\"20\":3,\"23\":1,\"24\":1,\"33\":3}}],[\"diab1\",{\"1\":{\"19\":2}}],[\"<>\",{\"1\":{\"33\":1}}],[\"<=\",{\"1\":{\"33\":1,\"43\":1}}],[\"<\",{\"1\":{\"20\":1,\"33\":2,\"34\":2}}],[\"syn非法\",{\"0\":{\"322\":1}}],[\"syn合法\",{\"0\":{\"321\":1}}],[\"syn报文在什么情况下会被丢弃\",{\"0\":{\"266\":1}}],[\"syn延时和泛洪攻击\",{\"0\":{\"224\":1}}],[\"sharing\",{\"0\":{\"46\":1}}],[\"show\",{\"1\":{\"27\":1}}],[\"score\",{\"1\":{\"41\":2}}],[\"status\",{\"1\":{\"43\":1}}],[\"start\",{\"1\":{\"38\":1}}],[\"str\",{\"1\":{\"38\":6}}],[\"stddev\",{\"1\":{\"24\":2}}],[\"sn拼接成一个字符串\",{\"1\":{\"38\":1}}],[\"sn\",{\"1\":{\"38\":1}}],[\"s2\",{\"1\":{\"38\":2}}],[\"s1\",{\"1\":{\"38\":1}}],[\"sql\",{\"0\":{\"366\":1,\"367\":1}}],[\"sql的约束\",{\"0\":{\"42\":1}}],[\"sql的dql\",{\"0\":{\"32\":1}}],[\"sql的dml\",{\"0\":{\"30\":1}}],[\"sql的ddl\",{\"0\":{\"28\":1}}],[\"sql的dcl\",{\"0\":{\"26\":1}}],[\"sql中的函数\",{\"0\":{\"37\":1}}],[\"sack\",{\"0\":{\"292\":1}}],[\"sack方法\",{\"0\":{\"291\":1}}],[\"samp\",{\"1\":{\"24\":2}}],[\"salary\",{\"1\":{\"20\":9,\"44\":2}}],[\"sub\",{\"1\":{\"40\":2}}],[\"substring\",{\"1\":{\"38\":1}}],[\"subject\",{\"1\":{\"23\":1}}],[\"sum\",{\"1\":{\"24\":3,\"34\":2}}],[\"set\",{\"1\":{\"20\":2,\"31\":1,\"38\":1,\"44\":2}}],[\"secondhighestsalary\",{\"1\":{\"20\":3}}],[\"select\",{\"1\":{\"18\":1,\"19\":1,\"20\":8,\"23\":1,\"24\":2,\"25\":1,\"27\":2,\"33\":15,\"34\":22,\"39\":6,\"40\":10,\"41\":4}}],[\"第四次挥手丢失\",{\"0\":{\"315\":1}}],[\"第四次挥手\",{\"0\":{\"65\":1}}],[\"第三次挥手丢失\",{\"0\":{\"314\":1}}],[\"第三次挥手\",{\"0\":{\"64\":1}}],[\"第三次握手丢失\",{\"0\":{\"301\":1}}],[\"第三次握手\",{\"0\":{\"60\":1,\"357\":1}}],[\"第二次挥手丢失\",{\"0\":{\"313\":1}}],[\"第二次挥手\",{\"0\":{\"63\":1}}],[\"第二次握手丢失\",{\"0\":{\"300\":1}}],[\"第二次握手\",{\"0\":{\"59\":1,\"356\":1}}],[\"第二高的薪水\",{\"1\":{\"20\":1}}],[\"第一次挥手丢失\",{\"0\":{\"312\":1}}],[\"第一次挥手\",{\"0\":{\"62\":1}}],[\"第一次握手\",{\"0\":{\"58\":1,\"355\":1}}],[\"第一个减第二个时间\",{\"1\":{\"40\":1}}],[\"第n高的薪水\",{\"1\":{\"20\":1}}],[\"第n高的数据\",{\"0\":{\"20\":1}}],[\"lpad\",{\"1\":{\"38\":2,\"39\":1}}],[\"lower\",{\"1\":{\"38\":1}}],[\"localhost\",{\"1\":{\"27\":2}}],[\"login\",{\"1\":{\"24\":2}}],[\"last\",{\"1\":{\"24\":1}}],[\"lag\",{\"1\":{\"24\":1}}],[\"len\",{\"1\":{\"38\":1}}],[\"lead\",{\"1\":{\"24\":1}}],[\"leetcode\",{\"0\":{\"16\":1},\"1\":{\"18\":1,\"19\":1,\"20\":1,\"23\":1,\"24\":1,\"25\":1}}],[\"listen\",{\"0\":{\"233\":1}}],[\"linux内存布局\",{\"0\":{\"112\":1}}],[\"limit\",{\"1\":{\"20\":5,\"25\":1,\"33\":1,\"34\":4}}],[\"like\",{\"1\":{\"19\":2,\"33\":2,\"34\":1}}],[\"患有某种疾病的患者\",{\"0\":{\"19\":1},\"1\":{\"19\":1}}],[\"1和localhost和0\",{\"0\":{\"204\":1}}],[\"1吗\",{\"0\":{\"200\":1}}],[\"19\",{\"1\":{\"44\":1}}],[\"11000\",{\"1\":{\"44\":1}}],[\"11\",{\"0\":{\"67\":1},\"1\":{\"44\":1}}],[\"1148\",{\"0\":{\"18\":1},\"1\":{\"18\":1}}],[\"16版本之后\",{\"1\":{\"43\":1}}],[\"127\",{\"0\":{\"204\":1}}],[\"12500\",{\"1\":{\"44\":1}}],[\"120\",{\"1\":{\"43\":1}}],[\"12\",{\"1\":{\"40\":1,\"44\":2}}],[\"1234\",{\"1\":{\"27\":1}}],[\"123456\",{\"1\":{\"27\":2}}],[\"1内的随机数\",{\"1\":{\"39\":1}}],[\"1号员工的工号应该为00001\",{\"1\":{\"38\":1}}],[\"10580\",{\"1\":{\"44\":1}}],[\"1000000\",{\"1\":{\"39\":1}}],[\"10\",{\"0\":{\"66\":1},\"1\":{\"34\":4,\"43\":1,\"44\":1}}],[\"18\",{\"1\":{\"33\":2,\"40\":1}}],[\"15\",{\"1\":{\"33\":2}}],[\"1527\",{\"0\":{\"19\":1},\"1\":{\"19\":1}}],[\"177\",{\"1\":{\"20\":1}}],[\"176\",{\"1\":{\"20\":1}}],[\"176`177\",{\"0\":{\"20\":1}}],[\"1\",{\"0\":{\"21\":1,\"48\":1,\"58\":1,\"62\":1,\"70\":1,\"101\":1,\"104\":2,\"107\":1,\"111\":1,\"153\":1,\"156\":1,\"157\":1,\"164\":1,\"165\":1,\"169\":1,\"174\":1,\"182\":1,\"189\":1,\"201\":1,\"203\":1,\"243\":1,\"289\":1,\"349\":1,\"355\":1},\"1\":{\"20\":9,\"25\":1,\"27\":2,\"33\":1,\"34\":3,\"39\":3,\"41\":1,\"43\":3,\"44\":7}}],[\"=\",{\"1\":{\"18\":1,\"20\":1,\"31\":2,\"33\":2,\"34\":2,\"38\":1}}],[\"found\",{\"1\":{\"365\":1}}],[\"foreign\",{\"1\":{\"43\":1,\"44\":7}}],[\"for\",{\"1\":{\"27\":1}}],[\"frame\",{\"0\":{\"332\":1}}],[\"from\",{\"1\":{\"18\":1,\"19\":1,\"20\":5,\"23\":1,\"24\":2,\"25\":1,\"27\":2,\"31\":2,\"33\":15,\"34\":22,\"40\":1,\"41\":2}}],[\"fk\",{\"1\":{\"44\":3}}],[\"f\",{\"1\":{\"41\":1}}],[\"floor\",{\"1\":{\"39\":3}}],[\"flipped\",{\"1\":{\"31\":1}}],[\"flipped的个人介绍页\",{\"0\":{\"0\":1}}],[\"first\",{\"1\":{\"24\":7}}],[\"function\",{\"1\":{\"20\":1}}],[\"accept\",{\"0\":{\"234\":1}}],[\"action\",{\"1\":{\"44\":2}}],[\"activity\",{\"1\":{\"24\":2}}],[\"apr\",{\"0\":{\"192\":1}}],[\"age\",{\"1\":{\"43\":3,\"44\":2}}],[\"auto\",{\"1\":{\"43\":1,\"44\":2}}],[\"author\",{\"1\":{\"18\":3}}],[\"address\",{\"0\":{\"246\":1}}],[\"add\",{\"1\":{\"40\":2,\"44\":4}}],[\"administrator\",{\"1\":{\"27\":1}}],[\"alice\",{\"1\":{\"31\":3}}],[\"all\",{\"1\":{\"27\":2}}],[\"alter\",{\"1\":{\"27\":3,\"44\":6}}],[\"avg\",{\"1\":{\"24\":1,\"34\":3}}],[\"and\",{\"1\":{\"24\":2,\"33\":4,\"34\":4,\"43\":1}}],[\"amount\",{\"1\":{\"24\":1}}],[\"a\",{\"0\":{\"71\":1},\"1\":{\"24\":12}}],[\"asc\",{\"1\":{\"34\":4}}],[\"as\",{\"1\":{\"18\":1,\"20\":4,\"23\":1,\"24\":6,\"33\":3,\"40\":1,\"41\":2}}],[\"文章浏览i\",{\"1\":{\"18\":1}}],[\"游戏玩法分析\",{\"0\":{\"18\":1,\"24\":1},\"1\":{\"24\":1}}],[\"个人格言\",{\"0\":{\"15\":1}}],[\"个人信息\",{\"0\":{\"1\":1}}],[\"兴趣爱好\",{\"0\":{\"14\":1}}],[\"证书优化\",{\"0\":{\"177\":1}}],[\"证书\",{\"0\":{\"13\":1}}],[\"教育背景\",{\"0\":{\"12\":1}}],[\"项目经理\",{\"1\":{\"44\":1}}],[\"项目经验\",{\"0\":{\"9\":1}}],[\"项目名称2\",{\"0\":{\"11\":1}}],[\"项目名称1\",{\"0\":{\"10\":1}}],[\"前端技术\",{\"0\":{\"5\":1}}],[\"🎨\",{\"0\":{\"14\":1}}],[\"🎖️\",{\"0\":{\"13\":1}}],[\"🎓\",{\"0\":{\"12\":1}}],[\"🌐\",{\"0\":{\"5\":1}}],[\"🌟\",{\"0\":{\"0\":2}}],[\"编程语言\",{\"0\":{\"4\":1}}],[\"技能\",{\"0\":{\"3\":1}}],[\"💬\",{\"0\":{\"15\":1}}],[\"📦\",{\"0\":{\"10\":1}}],[\"📚\",{\"0\":{\"9\":1}}],[\"🔧\",{\"0\":{\"8\":1}}],[\"🗄️\",{\"0\":{\"7\":1}}],[\"🛠️\",{\"0\":{\"6\":1}}],[\"🖥️\",{\"0\":{\"4\":1}}],[\"🚀\",{\"0\":{\"3\":1}}],[\"📝\",{\"0\":{\"2\":1,\"11\":1}}],[\"📋\",{\"0\":{\"1\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
