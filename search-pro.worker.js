const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":451,\"nextId\":451,\"documentIds\":{\"0\":\"0\",\"1\":\"0@0\",\"2\":\"1\",\"3\":\"1#📋-个人信息\",\"4\":\"1#📝-简介\",\"5\":\"1#🚀-技能\",\"6\":\"1#🖥️-编程语言\",\"7\":\"1#🌐-前端技术\",\"8\":\"1#🛠️-后端技术\",\"9\":\"1#🗄️-数据库\",\"10\":\"1#🔧-工具\",\"11\":\"1#📚-项目经验\",\"12\":\"1#📦-项目名称1\",\"13\":\"1#📝-项目名称2\",\"14\":\"1#🎓-教育背景\",\"15\":\"1#🎖️-证书\",\"16\":\"1#🎨-兴趣爱好\",\"17\":\"1#💬-个人格言\",\"18\":\"2\",\"19\":\"2@0\",\"20\":\"3\",\"21\":\"3@0\",\"22\":\"4\",\"23\":\"4#ddl\",\"24\":\"4@0\",\"25\":\"5\",\"26\":\"5#explain-一个sql语句可以查询到什么\",\"27\":\"5@0\",\"28\":\"6\",\"29\":\"6#cors-cross-origin-resource-sharing-跨域资源共享\",\"30\":\"6@0\",\"31\":\"7\",\"32\":\"7#_1-tcp和udp的区别\",\"33\":\"7#_2-tcp是如何做链接管理的\",\"34\":\"7#_3-tcp是如何保证可靠的\",\"35\":\"7#_4-重传机制有哪些\",\"36\":\"7#_5-tcp是如何保证有序的\",\"37\":\"7#_6-粘包问题\",\"38\":\"7#_7-滑动窗口\",\"39\":\"7#_8-拥塞控制\",\"40\":\"7#_9-tcp的三次握手和四次挥手\",\"41\":\"7#三次握手\",\"42\":\"7#_1-第一次握手\",\"43\":\"7#_2-第二次握手\",\"44\":\"7#_3-第三次握手\",\"45\":\"7#四次挥手\",\"46\":\"7#_1-第一次挥手\",\"47\":\"7#_2-第二次挥手\",\"48\":\"7#_3-第三次挥手\",\"49\":\"7#_4-第四次挥手\",\"50\":\"7#_10-time-wait状态的意义\",\"51\":\"7#_11-为什么需要三次握手而不是四次-两次\",\"52\":\"7#什么是restful风格\",\"53\":\"7#用户登录\",\"54\":\"7#_1-什么是oauth2-0\",\"55\":\"7#a-oauth-2-0-授权模式\",\"56\":\"7#_2-用户扫码是如何实现的\",\"57\":\"7#_3-如果要实现不同域名下的cookie正常使用-应该怎么处理\",\"58\":\"7#_4-假如1亿用户体量-如何设计一个登录验签服务\",\"59\":\"7@0\",\"60\":\"8\",\"61\":\"8#cup-cache\",\"62\":\"8#如何写出让-cpu-跑得更快的代码\",\"63\":\"8#数据缓存\",\"64\":\"8#指令缓存\",\"65\":\"8#多核-cpu-的缓存命中率\",\"66\":\"8@0\",\"67\":\"9\",\"68\":\"9#cpu如何执行任务的\",\"69\":\"9#cache-伪共享是什么\",\"70\":\"9#避免伪共享的方法\",\"71\":\"9#cpu-是根据什么来选择当前要执行的线程。\",\"72\":\"9#调度类\",\"73\":\"9#完全公平调度\",\"74\":\"9#cpu-运行队列\",\"75\":\"9#调整优先级\",\"76\":\"9@0\",\"77\":\"10\",\"78\":\"10#cpu-cache-的数据写入\",\"79\":\"10#写直达\",\"80\":\"10#写回\",\"81\":\"10#缓存一致性问题\",\"82\":\"10#总线嗅探\",\"83\":\"10#mesi-协议\",\"84\":\"10@0\",\"85\":\"11\",\"86\":\"11#中断\",\"87\":\"11#软中断\",\"88\":\"11@0\",\"89\":\"12\",\"90\":\"12#_1-虚拟内存\",\"91\":\"12#问题背景\",\"92\":\"12#基本概念\",\"93\":\"12#_1-1-内存分段\",\"94\":\"12#内存碎片\",\"95\":\"12#内存交换效率低\",\"96\":\"12#_1-2-内存分页\",\"97\":\"12#简单分页-有缺陷\",\"98\":\"12#多级页表\",\"99\":\"12#tlb\",\"100\":\"12#_1-3-段页式内存管理\",\"101\":\"12#linux内存布局\",\"102\":\"12#内核空间与用户空间的区别\",\"103\":\"12#虚拟内存的作用\",\"104\":\"12#虚拟内存的功能\",\"105\":\"12#虚拟内存管理器\",\"106\":\"12@0\",\"107\":\"13\",\"108\":\"13#内存\",\"109\":\"13#中央处理器\",\"110\":\"13#总线\",\"111\":\"13#输入、输出设备\",\"112\":\"13#存储器的层次结构\",\"113\":\"13@0\",\"114\":\"14\",\"115\":\"14#线程的优势\",\"116\":\"14#理解线程\",\"117\":\"14#线程与进程的比较\",\"118\":\"14#线程的上下文切换\",\"119\":\"14#线程的实现方式\",\"120\":\"14#线程的优劣势\",\"121\":\"14@0\",\"122\":\"15\",\"123\":\"15#用补码的形式保存负数\",\"124\":\"15#十进制小数与二进制的转换\",\"125\":\"15#计算机是怎么存小数的\",\"126\":\"15#在计算机中-0-1-0-2-并不等于完整的-0-3。\",\"127\":\"15@0\",\"128\":\"16\",\"129\":\"16#进程的状态\",\"130\":\"16#进程的控制结构\",\"131\":\"16#进程的控制\",\"132\":\"16#进程的上下文切换\",\"133\":\"16@0\",\"134\":\"17\",\"135\":\"17#http基本概念\",\"136\":\"17#http是什么\",\"137\":\"17#http常见的状态码\",\"138\":\"17#http常见字段有哪些\",\"139\":\"17#get与post请求\",\"140\":\"17#get与post的区别\",\"141\":\"17#get和post的方法都是安全和幂等的吗\",\"142\":\"17#http缓存技术\",\"143\":\"17#强缓存\",\"144\":\"17#协商缓存\",\"145\":\"17#http特性\",\"146\":\"17@0\",\"147\":\"18\",\"148\":\"18#_1-如何避免发送http请求\",\"149\":\"18#_2-如何减少http请求次数\",\"150\":\"18#_3-如何减少http响应的数据大小\",\"151\":\"18#_1-http的性能问题\",\"152\":\"18#_2-兼容http1-1\",\"153\":\"18#_3-头部压缩\",\"154\":\"18#静态表编码\",\"155\":\"18#动态编码表\",\"156\":\"18#_4-二进制帧\",\"157\":\"18#_5-并发传输\",\"158\":\"18#_6-服务器主动推送资源\",\"159\":\"18#_1-http2的问题\",\"160\":\"18#_1-队头阻塞\",\"161\":\"18#_2-tcp与tls的握手延迟\",\"162\":\"18#_3-网络迁移需要重新连接\",\"163\":\"18#_2-quic协议的特点\",\"164\":\"18#_1-无队头阻塞\",\"165\":\"18#_2-更快连接建立\",\"166\":\"18#_3-连接迁移\",\"167\":\"18#_3-http3协议\",\"168\":\"18@0\",\"169\":\"19\",\"170\":\"19#_1-分析性能损耗\",\"171\":\"19#硬件优化\",\"172\":\"19#软件优化\",\"173\":\"19#证书优化\",\"174\":\"19#会话复用\",\"175\":\"19#https中tcp三次握手和tls握手能同时进行吗\",\"176\":\"19@0\",\"177\":\"20\",\"178\":\"20#http和https\",\"179\":\"20#_1-http和https的区别\",\"180\":\"20#_2-https解决了http的那些问题\",\"181\":\"20#如何解决的\",\"182\":\"20#_3-https是如何建立连接的-期间交互了什么\",\"183\":\"20#_4-https的应用数据时如保证完整性的\",\"184\":\"20@0\",\"185\":\"21\",\"186\":\"21#tcp-是有三个特点-面向连接、可靠、基于字节流。\",\"187\":\"21#_1-http和rpc的区别\",\"188\":\"21#_2-websocket是什么\",\"189\":\"21@0\",\"190\":\"22\",\"191\":\"22#apr\",\"192\":\"22#dhcp\",\"193\":\"22#nat\",\"194\":\"22#icmp\",\"195\":\"22@0\",\"196\":\"23\",\"197\":\"23#ping的工作原理\",\"198\":\"23#查询报文类型\",\"199\":\"23#traceroute\",\"200\":\"23#断网了还能ping通127-0-0-1吗\",\"201\":\"23#什么是127-0-0-1\",\"202\":\"23#tcp和ping数据的区别\",\"203\":\"23#为什么断网了还能ping通127-0-0-1\",\"204\":\"23#_127-0-0-1和localhost和0-0-00有什么区别\",\"205\":\"23@0\",\"206\":\"24\",\"207\":\"24#ip基本认识\",\"208\":\"24#ip的基础知识\",\"209\":\"24#ip的分类\",\"210\":\"24#什么是a-b-c类\",\"211\":\"24#什么是d类-e类\",\"212\":\"24#无分类地址cidr\",\"213\":\"24#公有-ip-地址与私有-ip-地址\",\"214\":\"24#ip-地址与路由控制\",\"215\":\"24#ip分片与重组\",\"216\":\"24#ipv6-基本认识\",\"217\":\"24#ipv6的首部改进\",\"218\":\"24@0\",\"219\":\"25\",\"220\":\"25#为什么-time-wait-等待的时间是-2msl\",\"221\":\"25#为什么需要-time-wait-状态\",\"222\":\"25#time-wait-过多有什么危害\",\"223\":\"25#如何优化-time-wait\",\"224\":\"25#服务器出现大量-time-wait-状态的原因有哪些\",\"225\":\"25#服务器出现大量-close-wait-状态的原因有哪些\",\"226\":\"25@0\",\"227\":\"26\",\"228\":\"26#什么是syn攻击-如何避免syn攻击\",\"229\":\"26#什么时syn超时-如何解决syn超时\",\"230\":\"26@0\",\"231\":\"27\",\"232\":\"27#udp和tcp的区别和应用场景\",\"233\":\"27#tcp和udp的区别\",\"234\":\"27#连接\",\"235\":\"27@0\",\"236\":\"28\",\"237\":\"28#针对tcp应该如何socket编程\",\"238\":\"28#listen-时候参数-backlog-的意义\",\"239\":\"28#accept-发生在三次握手的哪一步\",\"240\":\"28#客户端调用-close-了-连接是断开的流程是什么\",\"241\":\"28#服务端没有调用listen-客户端请求建立连接会发生什么\",\"242\":\"28#没有listen可以建立tcp连接吗\",\"243\":\"28#没有accpet-能建立tcp连接吗\",\"244\":\"28#为什么半连接队列要设计成哈希表\",\"245\":\"28#会有一个cookies队列吗\",\"246\":\"28#cookies方案为什么不直接取代半连接队列\",\"247\":\"28#tcp和udp可以同时绑定相同的端口吗\",\"248\":\"28#_1-tcp和udp可以同时绑定相同的端口吗\",\"249\":\"28#_2-多个tcp可以同时绑定一个端口吗\",\"250\":\"28#_3-重启-tcp-服务进程时-为什么会有-address-in-use-的报错信息\",\"251\":\"28#_4-重启-tcp-服务进程时-如何避免-address-in-use-的报错信息\",\"252\":\"28#_5-客户端的端口可以重复使用吗\",\"253\":\"28#_6-多个客户端可以-bind-同一个端口吗\",\"254\":\"28#_7-客户端-tcp-连接-time-wait-状态过多-会导致端口资源耗尽而无法建立新的连接吗\",\"255\":\"28@0\",\"256\":\"29\",\"257\":\"29#如何优化tcp\",\"258\":\"29#tcp三次握手的性能提升\",\"259\":\"29#tcp四次挥手性能的提升\",\"260\":\"29#tcp传输数据的性能提升\",\"261\":\"29@0\",\"262\":\"30\",\"263\":\"30#tcp基本认识\",\"264\":\"30#tcp的头格式\",\"265\":\"30#tcp工作在那一层\",\"266\":\"30#什么是tcp协议\",\"267\":\"30#什么是tcp连接\",\"268\":\"30#如何确定一个tcp连接\",\"269\":\"30#如何理解tcp是基于字节流的协议\",\"270\":\"30#先来说说为什么-udp-是面向报文的协议\",\"271\":\"30#再来说说为什么-tcp-是面向字节流的协议\",\"272\":\"30#tcp半连接队列和全连接队列\",\"273\":\"30#syn报文在什么情况下会被丢弃\",\"274\":\"30#拔掉网线之后-tcp连接会消失吗\",\"275\":\"30#为什么-tcp-tw-reuse-默认是关闭的\",\"276\":\"30#用了tcp传输数据就一定不会丢包吗\",\"277\":\"30@0\",\"278\":\"31\",\"279\":\"31#拥塞控制\",\"280\":\"31#慢启动\",\"281\":\"31#拥塞避免\",\"282\":\"31#拥塞发生\",\"283\":\"31#快速恢复\",\"284\":\"31@0\",\"285\":\"32\",\"286\":\"32#滑动窗口\",\"287\":\"32#窗口大小由哪一方决定\",\"288\":\"32#发送方的滑动窗口\",\"289\":\"32#程序如何表示发送方的四个部分呢\",\"290\":\"32#接收方的滑动窗口\",\"291\":\"32#接收窗口和发送窗口的大小是相等的吗\",\"292\":\"32#流量控制\",\"293\":\"32#操作系统缓冲区和滑动窗口的关系\",\"294\":\"32#窗口关闭\",\"295\":\"32#糊涂窗口综合征\",\"296\":\"32@0\",\"297\":\"33\",\"298\":\"33#tcp的重传机制\",\"299\":\"33#_1-超时重传\",\"300\":\"33#_2-快速重传\",\"301\":\"33#_3-sack方法\",\"302\":\"33#_4-duplicate-sack\",\"303\":\"33@0\",\"304\":\"34\",\"305\":\"34#tcp连接的建立\",\"306\":\"34#为什么是三次握手\",\"307\":\"34#为什么每次建立tcp链接的时候-初始化序列号的都要求不一样\",\"308\":\"34#初始序列号isn是如何随机产生的\",\"309\":\"34#既然ip层会分片-为什么tcp层还需要mss\",\"310\":\"34#当第一次握手丢失\",\"311\":\"34#第二次握手丢失\",\"312\":\"34#第三次握手丢失\",\"313\":\"34#为什么每次建立tcp连接-初始化序列号都要不一样\",\"314\":\"34#tcp-序列号和确认号是如何变化的\",\"315\":\"34#万能公式\",\"316\":\"34#已建立的tcp连接-收到syn会发生什么\",\"317\":\"34#killcx-的工具\",\"318\":\"34#tcpkill-的工具\",\"319\":\"34#tcp-的-keepalive-和-http-的-keep-alive-是一个东西吗\",\"320\":\"34@0\",\"321\":\"35\",\"322\":\"35#tcp断开连接\",\"323\":\"35#tcp的四次挥手\",\"324\":\"35#第一次挥手丢失\",\"325\":\"35#第二次挥手丢失\",\"326\":\"35#第三次挥手丢失\",\"327\":\"35#第四次挥手丢失\",\"328\":\"35#tcp四次挥手可以变成三次吗\",\"329\":\"35#粗暴关闭vs优雅关闭\",\"330\":\"35#什么情况下会出现三次挥手\",\"331\":\"35#四次挥手中收到乱序的fin包怎么办\",\"332\":\"35#在time-wait状态的tcp接收到syn报文会怎么样\",\"333\":\"35#syn合法\",\"334\":\"35#syn非法\",\"335\":\"35#在-time-wait-状态-收到-rst-会断开连接吗\",\"336\":\"35#如果已经建立了链接-客户端突然挂怎么办\",\"337\":\"35#如果已经建立了链接-服务端突然挂怎么办\",\"338\":\"35#tcp连接-一端断电和进程崩溃有什么区别\",\"339\":\"35#客户端主机宕机又重启\",\"340\":\"35@0\",\"341\":\"36\",\"342\":\"36#如何基于udp实现可靠传输\",\"343\":\"36#quic是如何实现可靠传输的\",\"344\":\"36#packet-header\",\"345\":\"36#quic-frame-header\",\"346\":\"36#quic-是如何解决-tcp-队头阻塞问题的\",\"347\":\"36#quic-是如何做流量控制的\",\"348\":\"36#quic-对拥塞控制改进\",\"349\":\"36#quic-更快的连接建立\",\"350\":\"36#quic-是如何迁移连接的\",\"351\":\"36@0\",\"352\":\"37\",\"353\":\"37#网络模型\",\"354\":\"37@0\",\"355\":\"38\",\"356\":\"38#应用层\",\"357\":\"38#用户态和内核态\",\"358\":\"38#传输层-作为传输媒介\",\"359\":\"38#网络层-有着实际的传输功能\",\"360\":\"38#ip协议的寻址作用\",\"361\":\"38#ip协议还可以路由\",\"362\":\"38#网络接口层\",\"363\":\"38@0\",\"364\":\"39\",\"365\":\"39#_1-浏览器第一步工作是解析ulr-然后生产http请求消息-然后会委托操作系统发送消息\",\"366\":\"39#_2-在发送之前-必须查询服务器域名对应的ip地址-在委托操作系统发送消息时必须提供通讯对象的ip地址\",\"367\":\"39#dns服务器-专门保存了-web-服务器域名与-ip-的对应关系\",\"368\":\"39#只指路不带路\",\"369\":\"39#_3-通过dns获取到ip后-把传输工作给操作系统中的协议栈\",\"370\":\"39#_4-http协议是基于tcp协议传输的\",\"371\":\"39#_1-第一次握手\",\"372\":\"39#_2-第二次握手\",\"373\":\"39#_3-第三次握手\",\"374\":\"39#完整的tcp报文\",\"375\":\"39#_4-ip\",\"376\":\"39#_5-mac\",\"377\":\"39#_5-网卡-真正的数据发送\",\"378\":\"39#_6-交换机\",\"379\":\"39#_7-路由器\",\"380\":\"39#_8-客户端-服务器\",\"381\":\"39@0\",\"382\":\"40\",\"383\":\"41\",\"384\":\"41@0\",\"385\":\"42\",\"386\":\"42@0\",\"387\":\"43\",\"388\":\"43@0\",\"389\":\"44\",\"390\":\"44@0\",\"391\":\"45\",\"392\":\"45@0\",\"393\":\"46\",\"394\":\"46@0\",\"395\":\"47\",\"396\":\"47@0\",\"397\":\"48\",\"398\":\"48@0\",\"399\":\"49\",\"400\":\"49@0\",\"401\":\"50\",\"402\":\"50@0\",\"403\":\"51\",\"404\":\"51@0\",\"405\":\"52\",\"406\":\"52@0\",\"407\":\"53\",\"408\":\"53@0\",\"409\":\"54\",\"410\":\"54@0\",\"411\":\"55\",\"412\":\"55@0\",\"413\":\"56\",\"414\":\"56@0\",\"415\":\"57\",\"416\":\"57@0\",\"417\":\"58\",\"418\":\"58@0\",\"419\":\"59\",\"420\":\"59@0\",\"421\":\"60\",\"422\":\"60@0\",\"423\":\"61\",\"424\":\"61@0\",\"425\":\"62\",\"426\":\"62@0\",\"427\":\"63\",\"428\":\"63@0\",\"429\":\"64\",\"430\":\"64@0\",\"431\":\"65\",\"432\":\"65@0\",\"433\":\"66\",\"434\":\"66@0\",\"435\":\"67\",\"436\":\"67@0\",\"437\":\"68\",\"438\":\"68@0\",\"439\":\"69\",\"440\":\"69@0\",\"441\":\"70\",\"442\":\"70@0\",\"443\":\"71\",\"444\":\"71@0\",\"445\":\"72\",\"446\":\"72@0\",\"447\":\"73\",\"448\":\"73@0\",\"449\":\"74\",\"450\":\"74@0\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[null,null,1],\"2\":[2],\"3\":[2],\"4\":[2],\"5\":[2],\"6\":[2],\"7\":[2],\"8\":[2],\"9\":[2],\"10\":[2],\"11\":[2],\"12\":[2],\"13\":[2],\"14\":[2],\"15\":[2],\"16\":[2],\"17\":[2],\"18\":[1],\"19\":[null,null,1],\"20\":[1],\"21\":[null,null,1],\"22\":[1],\"23\":[1],\"24\":[null,null,1],\"25\":[2],\"26\":[3],\"27\":[null,null,2],\"28\":[1],\"29\":[7],\"30\":[null,null,1],\"31\":[1],\"32\":[2],\"33\":[3],\"34\":[3],\"35\":[3],\"36\":[3],\"37\":[3],\"38\":[2],\"39\":[2],\"40\":[3],\"41\":[1],\"42\":[2],\"43\":[2],\"44\":[2],\"45\":[1],\"46\":[2],\"47\":[2],\"48\":[2],\"49\":[2],\"50\":[3],\"51\":[3],\"52\":[2],\"53\":[2],\"54\":[4],\"55\":[5],\"56\":[2],\"57\":[4],\"58\":[4],\"59\":[null,null,1],\"60\":[2],\"61\":[2],\"62\":[4],\"63\":[1],\"64\":[1],\"65\":[3],\"66\":[null,null,2],\"67\":[2],\"68\":[1],\"69\":[3],\"70\":[1],\"71\":[3],\"72\":[1],\"73\":[1],\"74\":[2],\"75\":[1],\"76\":[null,null,2],\"77\":[1],\"78\":[3],\"79\":[1],\"80\":[1],\"81\":[1],\"82\":[1],\"83\":[2],\"84\":[null,null,1],\"85\":[2],\"86\":[1],\"87\":[1],\"88\":[null,null,2],\"89\":[1],\"90\":[2],\"91\":[1],\"92\":[1],\"93\":[2],\"94\":[1],\"95\":[1],\"96\":[3],\"97\":[3],\"98\":[1],\"99\":[1],\"100\":[3],\"101\":[1],\"102\":[1],\"103\":[1],\"104\":[1],\"105\":[1],\"106\":[null,null,1],\"107\":[1],\"108\":[2],\"109\":[2],\"110\":[2],\"111\":[2],\"112\":[1],\"113\":[null,null,1],\"114\":[1],\"115\":[1],\"116\":[1],\"117\":[1],\"118\":[1],\"119\":[1],\"120\":[1],\"121\":[null,null,1],\"122\":[1],\"123\":[2],\"124\":[1],\"125\":[2],\"126\":[1],\"127\":[null,null,1],\"128\":[1],\"129\":[2],\"130\":[2],\"131\":[1],\"132\":[1],\"133\":[null,null,1],\"134\":[1],\"135\":[1],\"136\":[2],\"137\":[2],\"138\":[2],\"139\":[2],\"140\":[2],\"141\":[2],\"142\":[1],\"143\":[2],\"144\":[2],\"145\":[2],\"146\":[null,null,1],\"147\":[1],\"148\":[2],\"149\":[2],\"150\":[3],\"151\":[2],\"152\":[3],\"153\":[2],\"154\":[1],\"155\":[1],\"156\":[2],\"157\":[2],\"158\":[2],\"159\":[2],\"160\":[3],\"161\":[2],\"162\":[2],\"163\":[2],\"164\":[2],\"165\":[2],\"166\":[2],\"167\":[2],\"168\":[null,null,1],\"169\":[1],\"170\":[2],\"171\":[1],\"172\":[1],\"173\":[1],\"174\":[1],\"175\":[1],\"176\":[null,null,1],\"177\":[1],\"178\":[2],\"179\":[3],\"180\":[3],\"181\":[2],\"182\":[4],\"183\":[2],\"184\":[null,null,1],\"185\":[1],\"186\":[4],\"187\":[2],\"188\":[2],\"189\":[null,null,1],\"190\":[1],\"191\":[2],\"192\":[2],\"193\":[2],\"194\":[2],\"195\":[null,null,1],\"196\":[1],\"197\":[1],\"198\":[1],\"199\":[2],\"200\":[4],\"201\":[3],\"202\":[2],\"203\":[4],\"204\":[5],\"205\":[null,null,1],\"206\":[1],\"207\":[1],\"208\":[1],\"209\":[2],\"210\":[4],\"211\":[3],\"212\":[1],\"213\":[4],\"214\":[2],\"215\":[1],\"216\":[2],\"217\":[2],\"218\":[null,null,1],\"219\":[3],\"220\":[6],\"221\":[5],\"222\":[4],\"223\":[4],\"224\":[5],\"225\":[5],\"226\":[null,null,3],\"227\":[1],\"228\":[3],\"229\":[3],\"230\":[null,null,1],\"231\":[1],\"232\":[2],\"233\":[2],\"234\":[2],\"235\":[null,null,1],\"236\":[1],\"237\":[2],\"238\":[5],\"239\":[3],\"240\":[5],\"241\":[3],\"242\":[2],\"243\":[3],\"244\":[2],\"245\":[1],\"246\":[2],\"247\":[2],\"248\":[3],\"249\":[2],\"250\":[1],\"251\":[10],\"252\":[1],\"253\":[1],\"254\":[9],\"255\":[null,null,1],\"256\":[1],\"257\":[2],\"258\":[2],\"259\":[2],\"260\":[2],\"261\":[null,null,1],\"262\":[1],\"263\":[1],\"264\":[2],\"265\":[2],\"266\":[2],\"267\":[2],\"268\":[2],\"269\":[2],\"270\":[4],\"271\":[4],\"272\":[1],\"273\":[2],\"274\":[3],\"275\":[1],\"276\":[2],\"277\":[null,null,1],\"278\":[1],\"279\":[2],\"280\":[1],\"281\":[1],\"282\":[1],\"283\":[1],\"284\":[null,null,1],\"285\":[1],\"286\":[1],\"287\":[2],\"288\":[2],\"289\":[2],\"290\":[2],\"291\":[2],\"292\":[1],\"293\":[2],\"294\":[1],\"295\":[1],\"296\":[null,null,1],\"297\":[1],\"298\":[1],\"299\":[2],\"300\":[2],\"301\":[2],\"302\":[3],\"303\":[null,null,1],\"304\":[1],\"305\":[2],\"306\":[2],\"307\":[3],\"308\":[2],\"309\":[3],\"310\":[2],\"311\":[2],\"312\":[2],\"313\":[3],\"314\":[3],\"315\":[1],\"316\":[3],\"317\":[2],\"318\":[2],\"319\":[1],\"320\":[null,null,1],\"321\":[1],\"322\":[1],\"323\":[2],\"324\":[2],\"325\":[2],\"326\":[2],\"327\":[1],\"328\":[2],\"329\":[2],\"330\":[2],\"331\":[1],\"332\":[3],\"333\":[2],\"334\":[2],\"335\":[8],\"336\":[2],\"337\":[2],\"338\":[3],\"339\":[2],\"340\":[null,null,1],\"341\":[1],\"342\":[1],\"343\":[2],\"344\":[2],\"345\":[3],\"346\":[5],\"347\":[3],\"348\":[2],\"349\":[2],\"350\":[3],\"351\":[null,null,1],\"352\":[1],\"353\":[2],\"354\":[null,null,1],\"355\":[1],\"356\":[2],\"357\":[2],\"358\":[3],\"359\":[3],\"360\":[2],\"361\":[1],\"362\":[2],\"363\":[null,null,1],\"364\":[2],\"365\":[4],\"366\":[3],\"367\":[4],\"368\":[1],\"369\":[3],\"370\":[2],\"371\":[2],\"372\":[2],\"373\":[2],\"374\":[2],\"375\":[2],\"376\":[2],\"377\":[4],\"378\":[2],\"379\":[2],\"380\":[3],\"381\":[null,null,2],\"382\":[1,3],\"383\":[2],\"384\":[null,null,2],\"385\":[1],\"386\":[null,null,1],\"387\":[1],\"388\":[null,null,1],\"389\":[1],\"390\":[null,null,1],\"391\":[1],\"392\":[null,null,1],\"393\":[1],\"394\":[null,null,1],\"395\":[1],\"396\":[null,null,1],\"397\":[1],\"398\":[null,null,1],\"399\":[1],\"400\":[null,null,1],\"401\":[2],\"402\":[null,null,2],\"403\":[2],\"404\":[null,null,2],\"405\":[2],\"406\":[null,null,2],\"407\":[2],\"408\":[null,null,2],\"409\":[2],\"410\":[null,null,2],\"411\":[2],\"412\":[null,null,2],\"413\":[2],\"414\":[null,null,2],\"415\":[1],\"416\":[null,null,1],\"417\":[2],\"418\":[null,null,2],\"419\":[2],\"420\":[null,null,2],\"421\":[2],\"422\":[null,null,2],\"423\":[2],\"424\":[null,null,2],\"425\":[2],\"426\":[null,null,2],\"427\":[2],\"428\":[null,null,2],\"429\":[2],\"430\":[null,null,2],\"431\":[2],\"432\":[null,null,2],\"433\":[2],\"434\":[null,null,2],\"435\":[2],\"436\":[null,null,2],\"437\":[2],\"438\":[null,null,2],\"439\":[2],\"440\":[null,null,2],\"441\":[2],\"442\":[null,null,2],\"443\":[2],\"444\":[null,null,2],\"445\":[1],\"446\":[null,null,1],\"447\":[1],\"448\":[null,null,1],\"449\":[1],\"450\":[null,null,1]},\"averageFieldLength\":[2.0241707057654375,0.007832898172323759,0.8123907981259404],\"storedFields\":{\"0\":{\"h\":\"博客主页\"},\"1\":{\"c\":[\"博客主页\"]},\"2\":{\"h\":\"🌟 Flipped的个人介绍页 🌟\"},\"3\":{\"h\":\"📋 个人信息\"},\"4\":{\"h\":\"📝 简介\"},\"5\":{\"h\":\"🚀 技能\"},\"6\":{\"h\":\"🖥️ 编程语言\"},\"7\":{\"h\":\"🌐 前端技术\"},\"8\":{\"h\":\"🛠️ 后端技术\"},\"9\":{\"h\":\"🗄️ 数据库\"},\"10\":{\"h\":\"🔧 工具\"},\"11\":{\"h\":\"📚 项目经验\"},\"12\":{\"h\":\"📦 项目名称1\"},\"13\":{\"h\":\"📝 项目名称2\"},\"14\":{\"h\":\"🎓 教育背景\"},\"15\":{\"h\":\"🎖️ 证书\"},\"16\":{\"h\":\"🎨 兴趣爱好\"},\"17\":{\"h\":\"💬 个人格言\"},\"18\":{\"h\":\"LeetCode\"},\"19\":{\"c\":[\"LeetCode\"]},\"20\":{\"h\":\"学习笔记\"},\"21\":{\"c\":[\"学习笔记\"]},\"22\":{\"h\":\"SQL的DDL\"},\"23\":{\"h\":\"DDL\"},\"24\":{\"c\":[\"SQL的DDL\"]},\"25\":{\"h\":\"EXPLAIN 一个SQL语句\"},\"26\":{\"h\":\"EXPLAIN 一个SQL语句可以查询到什么？\"},\"27\":{\"c\":[\"EXPLAIN 一个SQL语句\"]},\"28\":{\"h\":\"CORS策略\"},\"29\":{\"h\":\"CORS( Cross-Origin Resource Sharing )跨域资源共享：\"},\"30\":{\"c\":[\"CORS策略\"]},\"31\":{\"h\":\"用户登录\"},\"32\":{\"h\":\"1.TCP和UDP的区别\"},\"33\":{\"h\":\"2.TCP是如何做链接管理的？\"},\"34\":{\"h\":\"3.TCP是如何保证可靠的？\"},\"35\":{\"h\":\"4.重传机制有哪些？\"},\"36\":{\"h\":\"5.TCP是如何保证有序的？\"},\"37\":{\"h\":\"6.粘包问题？\"},\"38\":{\"h\":\"7.滑动窗口\"},\"39\":{\"h\":\"8.拥塞控制\"},\"40\":{\"h\":\"9.TCP的三次握手和四次挥手？\"},\"41\":{\"h\":\"三次握手\"},\"42\":{\"h\":\"1.第一次握手\"},\"43\":{\"h\":\"2.第二次握手\"},\"44\":{\"h\":\"3.第三次握手\"},\"45\":{\"h\":\"四次挥手\"},\"46\":{\"h\":\"1.第一次挥手\"},\"47\":{\"h\":\"2.第二次挥手\"},\"48\":{\"h\":\"3.第三次挥手\"},\"49\":{\"h\":\"4.第四次挥手\"},\"50\":{\"h\":\"10.time_wait状态的意义\"},\"51\":{\"h\":\"11.为什么需要三次握手而不是四次，两次\"},\"52\":{\"h\":\"什么是restful风格？\"},\"53\":{\"h\":\"用户登录：\"},\"54\":{\"h\":\"1.什么是OAUTH2.0?\"},\"55\":{\"h\":\"a. OAuth 2.0 授权模式\"},\"56\":{\"h\":\"2.用户扫码是如何实现的\"},\"57\":{\"h\":\"3. 如果要实现不同域名下的cookie正常使用，应该怎么处理？\"},\"58\":{\"h\":\"4.假如1亿用户体量，如何设计一个登录验签服务？\"},\"59\":{\"c\":[\"用户登录\"]},\"60\":{\"h\":\"CPU Cache\"},\"61\":{\"h\":\"cup cache\"},\"62\":{\"h\":\"如何写出让 CPU 跑得更快的代码？\"},\"63\":{\"h\":\"数据缓存\"},\"64\":{\"h\":\"指令缓存\"},\"65\":{\"h\":\"多核 CPU 的缓存命中率\"},\"66\":{\"c\":[\"CPU Cache\"]},\"67\":{\"h\":\"CUP是如何执行任务的?\"},\"68\":{\"h\":\"CPU如何执行任务的\"},\"69\":{\"h\":\"Cache 伪共享是什么？\"},\"70\":{\"h\":\"避免伪共享的方法\"},\"71\":{\"h\":\"CPU 是根据什么来选择当前要执行的线程。\"},\"72\":{\"h\":\"调度类\"},\"73\":{\"h\":\"完全公平调度\"},\"74\":{\"h\":\"CPU 运行队列\"},\"75\":{\"h\":\"调整优先级\"},\"76\":{\"c\":[\"CUP是如何执行任务的?\"]},\"77\":{\"h\":\"CUP的缓存一致性\"},\"78\":{\"h\":\"CPU Cache 的数据写入\"},\"79\":{\"h\":\"写直达\"},\"80\":{\"h\":\"写回\"},\"81\":{\"h\":\"缓存一致性问题\"},\"82\":{\"h\":\"总线嗅探\"},\"83\":{\"h\":\"MESI 协议\"},\"84\":{\"c\":[\"CUP的缓存一致性\"]},\"85\":{\"h\":\"什么是中断？\"},\"86\":{\"h\":\"中断\"},\"87\":{\"h\":\"软中断\"},\"88\":{\"c\":[\"什么是中断？\"]},\"89\":{\"h\":\"内存管理\"},\"90\":{\"h\":\"1. 虚拟内存\"},\"91\":{\"h\":\"问题背景\"},\"92\":{\"h\":\"基本概念\"},\"93\":{\"h\":\"1.1 内存分段\"},\"94\":{\"h\":\"内存碎片\"},\"95\":{\"h\":\"内存交换效率低\"},\"96\":{\"h\":\"1.2 内存分页\"},\"97\":{\"h\":\"简单分页（有缺陷）\"},\"98\":{\"h\":\"多级页表\"},\"99\":{\"h\":\"TLB\"},\"100\":{\"h\":\"1.3 段页式内存管理\"},\"101\":{\"h\":\"Linux内存布局\"},\"102\":{\"h\":\"内核空间与用户空间的区别\"},\"103\":{\"h\":\"虚拟内存的作用\"},\"104\":{\"h\":\"虚拟内存的功能\"},\"105\":{\"h\":\"虚拟内存管理器\"},\"106\":{\"c\":[\"内存管理\"]},\"107\":{\"h\":\"冯诺依曼模型\"},\"108\":{\"h\":\"内存：\"},\"109\":{\"h\":\"中央处理器：\"},\"110\":{\"h\":\"总线：\"},\"111\":{\"h\":\"输入、输出设备\"},\"112\":{\"h\":\"存储器的层次结构\"},\"113\":{\"c\":[\"冯诺依曼模型\"]},\"114\":{\"h\":\"线程\"},\"115\":{\"h\":\"线程的优势\"},\"116\":{\"h\":\"理解线程\"},\"117\":{\"h\":\"线程与进程的比较\"},\"118\":{\"h\":\"线程的上下文切换\"},\"119\":{\"h\":\"线程的实现方式\"},\"120\":{\"h\":\"线程的优劣势\"},\"121\":{\"c\":[\"线程\"]},\"122\":{\"h\":\"计算机保存数据的形式\"},\"123\":{\"h\":\"用补码的形式保存负数：\"},\"124\":{\"h\":\"十进制小数与二进制的转换\"},\"125\":{\"h\":\"计算机是怎么存小数的？\"},\"126\":{\"h\":\"。\"},\"127\":{\"c\":[\"计算机保存数据的形式\"]},\"128\":{\"h\":\"进程\"},\"129\":{\"h\":\"进程的状态：\"},\"130\":{\"h\":\"进程的控制结构：\"},\"131\":{\"h\":\"进程的控制\"},\"132\":{\"h\":\"进程的上下文切换\"},\"133\":{\"c\":[\"进程\"]},\"134\":{\"h\":\"HTTP\"},\"135\":{\"h\":\"HTTP基本概念\"},\"136\":{\"h\":\"HTTP是什么？\"},\"137\":{\"h\":\"HTTP常见的状态码：\"},\"138\":{\"h\":\"HTTP常见字段有哪些：\"},\"139\":{\"h\":\"GET与POST请求:\"},\"140\":{\"h\":\"GET与POST的区别:\"},\"141\":{\"h\":\"GET和POST的方法都是安全和幂等的吗？\"},\"142\":{\"h\":\"HTTP缓存技术\"},\"143\":{\"h\":\"强缓存：\"},\"144\":{\"h\":\"协商缓存：\"},\"145\":{\"h\":\"HTTP特性：\"},\"146\":{\"c\":[\"HTTP\"]},\"147\":{\"h\":\"HTTP的更迭\"},\"148\":{\"h\":\"1.如何避免发送HTTP请求\"},\"149\":{\"h\":\"2.如何减少HTTP请求次数\"},\"150\":{\"h\":\"3.如何减少HTTP响应的数据大小？\"},\"151\":{\"h\":\"1.HTTP的性能问题\"},\"152\":{\"h\":\"2.兼容HTTP1.1\"},\"153\":{\"h\":\"3.头部压缩\"},\"154\":{\"h\":\"静态表编码\"},\"155\":{\"h\":\"动态编码表\"},\"156\":{\"h\":\"4.二进制帧\"},\"157\":{\"h\":\"5.并发传输\"},\"158\":{\"h\":\"6.服务器主动推送资源\"},\"159\":{\"h\":\"1.HTTP2的问题\"},\"160\":{\"h\":\"1.队头阻塞：\"},\"161\":{\"h\":\"2.TCP与TLS的握手延迟\"},\"162\":{\"h\":\"3.网络迁移需要重新连接\"},\"163\":{\"h\":\"2.QUIC协议的特点\"},\"164\":{\"h\":\"1.无队头阻塞\"},\"165\":{\"h\":\"2.更快连接建立\"},\"166\":{\"h\":\"3.连接迁移\"},\"167\":{\"h\":\"3.HTTP3协议\"},\"168\":{\"c\":[\"HTTP的更迭\"]},\"169\":{\"h\":\"HTTPS如何优化\"},\"170\":{\"h\":\"1.分析性能损耗\"},\"171\":{\"h\":\"硬件优化\"},\"172\":{\"h\":\"软件优化\"},\"173\":{\"h\":\"证书优化\"},\"174\":{\"h\":\"会话复用\"},\"175\":{\"h\":\"\"},\"176\":{\"c\":[\"HTTPS如何优化\"]},\"177\":{\"h\":\"HTTP和HTTPS的区别\"},\"178\":{\"h\":\"HTTP和HTTPS：\"},\"179\":{\"h\":\"1.HTTP和HTTPS的区别：\"},\"180\":{\"h\":\"2.HTTPS解决了HTTP的那些问题?\"},\"181\":{\"h\":\"如何解决的?\"},\"182\":{\"h\":\"3.HTTPS是如何建立连接的,期间交互了什么?\"},\"183\":{\"h\":\"4.HTTPS的应用数据时如保证完整性的\"},\"184\":{\"c\":[\"HTTP和HTTPS的区别\"]},\"185\":{\"h\":\"应用层的协议\"},\"186\":{\"h\":\"TCP 是有三个特点， 、 、基于 。\"},\"187\":{\"h\":\"1.HTTP和RPC的区别\"},\"188\":{\"h\":\"2.WebSocket是什么\"},\"189\":{\"c\":[\"应用层的协议\"]},\"190\":{\"h\":\"IP协议的相关技术\"},\"191\":{\"h\":\"APR:\"},\"192\":{\"h\":\"DHCP:\"},\"193\":{\"h\":\"NAT:\"},\"194\":{\"h\":\"ICMP:\"},\"195\":{\"c\":[\"IP协议的相关技术\"]},\"196\":{\"h\":\"ping的工作原理\"},\"197\":{\"h\":\"ping的工作原理\"},\"198\":{\"h\":\"查询报文类型\"},\"199\":{\"h\":\"traceroute :\"},\"200\":{\"h\":\"断网了还能ping通127.0.0.1吗？\"},\"201\":{\"h\":\"什么是127.0.0.1\"},\"202\":{\"h\":\"TCP和Ping数据的区别：\"},\"203\":{\"h\":\"为什么断网了还能ping通127.0.0.1？\"},\"204\":{\"h\":\"127.0.0.1和localhost和0.0.00有什么区别？\"},\"205\":{\"c\":[\"ping的工作原理\"]},\"206\":{\"h\":\"基础IP\"},\"207\":{\"h\":\"IP基本认识\"},\"208\":{\"h\":\"IP的基础知识\"},\"209\":{\"h\":\"IP的分类：\"},\"210\":{\"h\":\"什么是A，B，C类？\"},\"211\":{\"h\":\"什么是D类，E类？\"},\"212\":{\"h\":\"无分类地址CIDR\"},\"213\":{\"h\":\"公有 IP 地址与私有 IP 地址\"},\"214\":{\"h\":\"IP 地址与路由控制\"},\"215\":{\"h\":\"IP分片与重组\"},\"216\":{\"h\":\"IPv6 基本认识\"},\"217\":{\"h\":\"IPv6的首部改进：\"},\"218\":{\"c\":[\"基础IP\"]},\"219\":{\"h\":\"CLOSE_WAIT和TIME_WAIT\"},\"220\":{\"h\":\"为什么 TIME_WAIT 等待的时间是 2MSL？\"},\"221\":{\"h\":\"为什么需要 TIME_WAIT 状态？\"},\"222\":{\"h\":\"TIME_WAIT 过多有什么危害？\"},\"223\":{\"h\":\"如何优化 TIME_WAIT？\"},\"224\":{\"h\":\"服务器出现大量 TIME_WAIT 状态的原因有哪些？\"},\"225\":{\"h\":\"服务器出现大量 CLOSE_WAIT 状态的原因有哪些？\"},\"226\":{\"c\":[\"CLOSE_WAIT和TIME_WAIT\"]},\"227\":{\"h\":\"SYN延时和泛洪攻击\"},\"228\":{\"h\":\"什么是SYN攻击，如何避免SYN攻击？\"},\"229\":{\"h\":\"什么时SYN超时，如何解决SYN超时？\"},\"230\":{\"c\":[\"SYN延时和泛洪攻击\"]},\"231\":{\"h\":\"TCP和UDP的区别\"},\"232\":{\"h\":\"UDP和TCP的区别和应用场景：\"},\"233\":{\"h\":\"TCP和UDP的区别：\"},\"234\":{\"h\":\"连接：\"},\"235\":{\"c\":[\"TCP和UDP的区别\"]},\"236\":{\"h\":\"TCP的socket编程\"},\"237\":{\"h\":\"针对TCP应该如何socket编程？\"},\"238\":{\"h\":\"listen 时候参数 backlog 的意义？\"},\"239\":{\"h\":\"accept 发生在三次握手的哪一步？\"},\"240\":{\"h\":\"客户端调用 close 了，连接是断开的流程是什么？\"},\"241\":{\"h\":\"服务端没有调用Listen,客户端请求建立连接会发生什么？\"},\"242\":{\"h\":\"没有listen可以建立TCP连接吗？\"},\"243\":{\"h\":\"没有Accpet，能建立TCP连接吗？\"},\"244\":{\"h\":\"为什么半连接队列要设计成哈希表？\"},\"245\":{\"h\":\"会有一个cookies队列吗\"},\"246\":{\"h\":\"cookies方案为什么不直接取代半连接队列？\"},\"247\":{\"h\":\"TCP和UDP可以同时绑定相同的端口吗？\"},\"248\":{\"h\":\"1.TCP和UDP可以同时绑定相同的端口吗？\"},\"249\":{\"h\":\"2.\"},\"250\":{\"h\":\"\"},\"251\":{\"h\":\"4.重启 TCP 服务进程时，如何避免“Address in use”的报错信息？\"},\"252\":{\"h\":\"\"},\"253\":{\"h\":\"\"},\"254\":{\"h\":\"7.客户端 TCP 连接 TIME_WAIT 状态过多，会导致端口资源耗尽而无法建立新的连接吗？\"},\"255\":{\"c\":[\"TCP的socket编程\"]},\"256\":{\"h\":\"TCP的优化\"},\"257\":{\"h\":\"如何优化TCP？\"},\"258\":{\"h\":\"TCP三次握手的性能提升？\"},\"259\":{\"h\":\"TCP四次挥手性能的提升？\"},\"260\":{\"h\":\"TCP传输数据的性能提升？\"},\"261\":{\"c\":[\"TCP的优化\"]},\"262\":{\"h\":\"TCP的基本认识\"},\"263\":{\"h\":\"TCP基本认识\"},\"264\":{\"h\":\"TCP的头格式：\"},\"265\":{\"h\":\"TCP工作在那一层：\"},\"266\":{\"h\":\"什么是TCP协议：\"},\"267\":{\"h\":\"什么是TCP连接:\"},\"268\":{\"h\":\"如何确定一个TCP连接：\"},\"269\":{\"h\":\"如何理解TCP是基于字节流的协议？\"},\"270\":{\"h\":\"先来说说为什么 UDP 是面向报文的协议？\"},\"271\":{\"h\":\"再来说说为什么 TCP 是面向字节流的协议？\"},\"272\":{\"h\":\"TCP半连接队列和全连接队列\"},\"273\":{\"h\":\"SYN报文在什么情况下会被丢弃？\"},\"274\":{\"h\":\"拔掉网线之后，TCP连接会消失吗？\"},\"275\":{\"h\":\"\"},\"276\":{\"h\":\"用了TCP传输数据就一定不会丢包吗？\"},\"277\":{\"c\":[\"TCP的基本认识\"]},\"278\":{\"h\":\"TCP的拥塞控制\"},\"279\":{\"h\":\"拥塞控制：\"},\"280\":{\"h\":\"慢启动\"},\"281\":{\"h\":\"拥塞避免\"},\"282\":{\"h\":\"拥塞发生\"},\"283\":{\"h\":\"快速恢复\"},\"284\":{\"c\":[\"TCP的拥塞控制\"]},\"285\":{\"h\":\"TCP的流量控制\"},\"286\":{\"h\":\"滑动窗口\"},\"287\":{\"h\":\"窗口大小由哪一方决定？\"},\"288\":{\"h\":\"发送方的滑动窗口：\"},\"289\":{\"h\":\"程序如何表示发送方的四个部分呢？\"},\"290\":{\"h\":\"接收方的滑动窗口：\"},\"291\":{\"h\":\"接收窗口和发送窗口的大小是相等的吗？\"},\"292\":{\"h\":\"流量控制\"},\"293\":{\"h\":\"操作系统缓冲区和滑动窗口的关系：\"},\"294\":{\"h\":\"窗口关闭\"},\"295\":{\"h\":\"糊涂窗口综合征\"},\"296\":{\"c\":[\"TCP的流量控制\"]},\"297\":{\"h\":\"TCP的重传机制\"},\"298\":{\"h\":\"TCP的重传机制\"},\"299\":{\"h\":\"1.超时重传\"},\"300\":{\"h\":\"2.快速重传\"},\"301\":{\"h\":\"3.SACK方法\"},\"302\":{\"h\":\"4.Duplicate SACK\"},\"303\":{\"c\":[\"TCP的重传机制\"]},\"304\":{\"h\":\"TCP连接的建立\"},\"305\":{\"h\":\"TCP连接的建立：\"},\"306\":{\"h\":\"为什么是三次握手：\"},\"307\":{\"h\":\"为什么每次建立TCP链接的时候，初始化序列号的都要求不一样？\"},\"308\":{\"h\":\"初始序列号ISN是如何随机产生的？\"},\"309\":{\"h\":\"既然IP层会分片，为什么TCP层还需要MSS？\"},\"310\":{\"h\":\"当第一次握手丢失：\"},\"311\":{\"h\":\"第二次握手丢失：\"},\"312\":{\"h\":\"第三次握手丢失：\"},\"313\":{\"h\":\"为什么每次建立TCP连接，初始化序列号都要不一样？\"},\"314\":{\"h\":\"TCP 序列号和确认号是如何变化的？\"},\"315\":{\"h\":\"万能公式\"},\"316\":{\"h\":\"已建立的TCP连接，收到SYN会发生什么？\"},\"317\":{\"h\":\"killcx 的工具\"},\"318\":{\"h\":\"tcpkill 的工具\"},\"319\":{\"h\":\"\"},\"320\":{\"c\":[\"TCP连接的建立\"]},\"321\":{\"h\":\"TCP连接的断开\"},\"322\":{\"h\":\"TCP断开连接\"},\"323\":{\"h\":\"TCP的四次挥手：\"},\"324\":{\"h\":\"第一次挥手丢失：\"},\"325\":{\"h\":\"第二次挥手丢失：\"},\"326\":{\"h\":\"第三次挥手丢失：\"},\"327\":{\"h\":\"第四次挥手丢失\"},\"328\":{\"h\":\"TCP四次挥手可以变成三次吗？\"},\"329\":{\"h\":\"粗暴关闭VS优雅关闭：\"},\"330\":{\"h\":\"什么情况下会出现三次挥手？\"},\"331\":{\"h\":\"四次挥手中收到乱序的FIN包怎么办\"},\"332\":{\"h\":\"在TIME_WAIT状态的TCP接收到SYN报文会怎么样？\"},\"333\":{\"h\":\"SYN合法：\"},\"334\":{\"h\":\"SYN非法：\"},\"335\":{\"h\":\"在 TIME_WAIT 状态，收到 RST 会断开连接吗？\"},\"336\":{\"h\":\"如果已经建立了链接，客户端突然挂怎么办\"},\"337\":{\"h\":\"如果已经建立了链接，服务端突然挂怎么办\"},\"338\":{\"h\":\"TCP连接，一端断电和进程崩溃有什么区别？\"},\"339\":{\"h\":\"客户端主机宕机又重启？\"},\"340\":{\"c\":[\"TCP连接的断开\"]},\"341\":{\"h\":\"QUIC协议\"},\"342\":{\"h\":\"\"},\"343\":{\"h\":\"QUIC是如何实现可靠传输的？\"},\"344\":{\"h\":\"Packet Header\"},\"345\":{\"h\":\"QUIC Frame Header\"},\"346\":{\"h\":\"QUIC 是如何解决 TCP 队头阻塞问题的？\"},\"347\":{\"h\":\"QUIC 是如何做流量控制的？\"},\"348\":{\"h\":\"QUIC 对拥塞控制改进\"},\"349\":{\"h\":\"QUIC 更快的连接建立\"},\"350\":{\"h\":\"QUIC 是如何迁移连接的？\"},\"351\":{\"c\":[\"QUIC协议\"]},\"352\":{\"h\":\"常见的网络分层模型\"},\"353\":{\"h\":\"网络模型：\"},\"354\":{\"c\":[\"常见的网络分层模型\"]},\"355\":{\"h\":\"基础计网\"},\"356\":{\"h\":\"应用层：\"},\"357\":{\"h\":\"用户态和内核态：\"},\"358\":{\"h\":\"传输层：（作为传输媒介）\"},\"359\":{\"h\":\"网络层:(有着实际的传输功能)\"},\"360\":{\"h\":\"IP协议的寻址作用：\"},\"361\":{\"h\":\"IP协议还可以\"},\"362\":{\"h\":\"网络接口层：\"},\"363\":{\"c\":[\"基础计网\"]},\"364\":{\"h\":\"键入一个URL网络世界发生了什么？\"},\"365\":{\"h\":\"1.浏览器第一步工作是解析ULR，然后生产HTTP请求消息，然后会\"},\"366\":{\"h\":\"2.在发送之前， ，在委托操作系统发送消息时必须提供\"},\"367\":{\"h\":\"DNS服务器:专门保存了 服务器域名与 的对应关系\"},\"368\":{\"h\":\"只指路不带路\"},\"369\":{\"h\":\"3.通过DNS获取到IP后，把传输工作给操作系统中的协议栈\"},\"370\":{\"h\":\"4.http协议是基于TCP协议传输的\"},\"371\":{\"h\":\"1.第一次握手\"},\"372\":{\"h\":\"2.第二次握手\"},\"373\":{\"h\":\"3.第三次握手\"},\"374\":{\"h\":\"完整的TCP报文：\"},\"375\":{\"h\":\"4.IP\"},\"376\":{\"h\":\"5.MAC\"},\"377\":{\"h\":\"5.网卡（真正的数据发送）\"},\"378\":{\"h\":\"6.交换机\"},\"379\":{\"h\":\"7.路由器\"},\"380\":{\"h\":\"8.客户端&服务器\"},\"381\":{\"c\":[\"键入一个URL网络世界发生了什么？\"]},\"382\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"383\":{\"h\":\"My SQL\"},\"384\":{\"c\":[\"My SQL\"]},\"385\":{\"h\":\"业务场景\"},\"386\":{\"c\":[\"业务场景\"]},\"387\":{\"h\":\"计算机操作系统\"},\"388\":{\"c\":[\"计算机操作系统\"]},\"389\":{\"h\":\"HTTP\"},\"390\":{\"c\":[\"HTTP\"]},\"391\":{\"h\":\"计算机网络\"},\"392\":{\"c\":[\"计算机网络\"]},\"393\":{\"h\":\"IP\"},\"394\":{\"c\":[\"IP\"]},\"395\":{\"h\":\"TCP\"},\"396\":{\"c\":[\"TCP\"]},\"397\":{\"h\":\"计算机网络基础\"},\"398\":{\"c\":[\"计算机网络基础\"]},\"399\":{\"h\":\"分类\"},\"400\":{\"c\":[\"分类\"]},\"401\":{\"h\":\"计算机基础 分类\"},\"402\":{\"c\":[\"计算机基础 分类\"]},\"403\":{\"h\":\"mysql 分类\"},\"404\":{\"c\":[\"mysql 分类\"]},\"405\":{\"h\":\"跨域 分类\"},\"406\":{\"c\":[\"跨域 分类\"]},\"407\":{\"h\":\"同源策略 分类\"},\"408\":{\"c\":[\"同源策略 分类\"]},\"409\":{\"h\":\"业务场景 分类\"},\"410\":{\"c\":[\"业务场景 分类\"]},\"411\":{\"h\":\"操作系统 分类\"},\"412\":{\"c\":[\"操作系统 分类\"]},\"413\":{\"h\":\"计算机网络 分类\"},\"414\":{\"c\":[\"计算机网络 分类\"]},\"415\":{\"h\":\"标签\"},\"416\":{\"c\":[\"标签\"]},\"417\":{\"h\":\"标签: SQL\"},\"418\":{\"c\":[\"标签: SQL\"]},\"419\":{\"h\":\"标签: 跨域问题\"},\"420\":{\"c\":[\"标签: 跨域问题\"]},\"421\":{\"h\":\"标签: 用户登录\"},\"422\":{\"c\":[\"标签: 用户登录\"]},\"423\":{\"h\":\"标签: 计算机基础\"},\"424\":{\"c\":[\"标签: 计算机基础\"]},\"425\":{\"h\":\"标签: 操作系统\"},\"426\":{\"c\":[\"标签: 操作系统\"]},\"427\":{\"h\":\"标签: 计算机网络\"},\"428\":{\"c\":[\"标签: 计算机网络\"]},\"429\":{\"h\":\"标签: HTTP\"},\"430\":{\"c\":[\"标签: HTTP\"]},\"431\":{\"h\":\"标签: HTTPS\"},\"432\":{\"c\":[\"标签: HTTPS\"]},\"433\":{\"h\":\"标签: 应用层\"},\"434\":{\"c\":[\"标签: 应用层\"]},\"435\":{\"h\":\"标签: 网络层\"},\"436\":{\"c\":[\"标签: 网络层\"]},\"437\":{\"h\":\"标签: Ping\"},\"438\":{\"c\":[\"标签: Ping\"]},\"439\":{\"h\":\"标签: IP\"},\"440\":{\"c\":[\"标签: IP\"]},\"441\":{\"h\":\"标签: TCP\"},\"442\":{\"c\":[\"标签: TCP\"]},\"443\":{\"h\":\"标签: 分层模型\"},\"444\":{\"c\":[\"标签: 分层模型\"]},\"445\":{\"h\":\"文章\"},\"446\":{\"c\":[\"文章\"]},\"447\":{\"h\":\"星标\"},\"448\":{\"c\":[\"星标\"]},\"449\":{\"h\":\"时间轴\"},\"450\":{\"c\":[\"时间轴\"]}},\"dirtCount\":0,\"index\":[[\"时间轴\",{\"0\":{\"449\":1},\"2\":{\"450\":1}}],[\"时候参数\",{\"0\":{\"238\":1}}],[\"星标\",{\"0\":{\"447\":1},\"2\":{\"448\":1}}],[\"文章\",{\"0\":{\"445\":1},\"2\":{\"446\":1}}],[\"标签\",{\"0\":{\"415\":1,\"417\":1,\"419\":1,\"421\":1,\"423\":1,\"425\":1,\"427\":1,\"429\":1,\"431\":1,\"433\":1,\"435\":1,\"437\":1,\"439\":1,\"441\":1,\"443\":1},\"2\":{\"416\":1,\"418\":1,\"420\":1,\"422\":1,\"424\":1,\"426\":1,\"428\":1,\"430\":1,\"432\":1,\"434\":1,\"436\":1,\"438\":1,\"440\":1,\"442\":1,\"444\":1}}],[\"操作系统\",{\"0\":{\"411\":1,\"425\":1},\"2\":{\"412\":1,\"426\":1}}],[\"操作系统缓冲区和滑动窗口的关系\",{\"0\":{\"293\":1}}],[\"同源策略\",{\"0\":{\"407\":1},\"2\":{\"408\":1}}],[\"跨域问题\",{\"0\":{\"419\":1},\"2\":{\"420\":1}}],[\"跨域\",{\"0\":{\"405\":1},\"2\":{\"406\":1}}],[\"跨域资源共享\",{\"0\":{\"29\":1}}],[\"分层模型\",{\"0\":{\"443\":1},\"2\":{\"444\":1}}],[\"分类\",{\"0\":{\"399\":1,\"401\":1,\"403\":1,\"405\":1,\"407\":1,\"409\":1,\"411\":1,\"413\":1},\"2\":{\"400\":1,\"402\":1,\"404\":1,\"406\":1,\"408\":1,\"410\":1,\"412\":1,\"414\":1}}],[\"分析性能损耗\",{\"0\":{\"170\":1}}],[\"业务场景\",{\"0\":{\"385\":1,\"409\":1},\"2\":{\"386\":1,\"410\":1}}],[\"not\",{\"1\":{\"382\":1}}],[\"nat\",{\"0\":{\"193\":1}}],[\"路由器\",{\"0\":{\"379\":1}}],[\"交换机\",{\"0\":{\"378\":1}}],[\"真正的数据发送\",{\"0\":{\"377\":1}}],[\"网卡\",{\"0\":{\"377\":1}}],[\"网络接口层\",{\"0\":{\"362\":1}}],[\"网络层\",{\"0\":{\"359\":1,\"435\":1},\"2\":{\"436\":1}}],[\"网络模型\",{\"0\":{\"353\":1}}],[\"网络迁移需要重新连接\",{\"0\":{\"162\":1}}],[\"mysql\",{\"0\":{\"403\":1},\"2\":{\"404\":1}}],[\"my\",{\"0\":{\"383\":1},\"2\":{\"384\":1}}],[\"mac\",{\"0\":{\"376\":1}}],[\"mesi\",{\"0\":{\"83\":1}}],[\"完整的tcp报文\",{\"0\":{\"374\":1}}],[\"完全公平调度\",{\"0\":{\"73\":1}}],[\"把传输工作给操作系统中的协议栈\",{\"0\":{\"369\":1}}],[\"通过dns获取到ip后\",{\"0\":{\"369\":1}}],[\"只指路不带路\",{\"0\":{\"368\":1}}],[\"专门保存了\",{\"0\":{\"367\":1}}],[\"然后会\",{\"0\":{\"365\":1}}],[\"然后生产http请求消息\",{\"0\":{\"365\":1}}],[\"浏览器第一步工作是解析ulr\",{\"0\":{\"365\":1}}],[\"键入一个url网络世界发生了什么\",{\"0\":{\"364\":1},\"2\":{\"381\":1}}],[\"有着实际的传输功能\",{\"0\":{\"359\":1}}],[\"有缺陷\",{\"0\":{\"97\":1}}],[\"作为传输媒介\",{\"0\":{\"358\":1}}],[\"传输层\",{\"0\":{\"358\":1}}],[\"常见的网络分层模型\",{\"0\":{\"352\":1},\"2\":{\"354\":1}}],[\"更快的连接建立\",{\"0\":{\"349\":1}}],[\"更快连接建立\",{\"0\":{\"165\":1}}],[\"对拥塞控制改进\",{\"0\":{\"348\":1}}],[\"found\",{\"1\":{\"382\":1}}],[\"frame\",{\"0\":{\"345\":1}}],[\"flipped的个人介绍页\",{\"0\":{\"2\":1}}],[\"header\",{\"0\":{\"344\":1,\"345\":1}}],[\"http协议是基于tcp协议传输的\",{\"0\":{\"370\":1}}],[\"http和rpc的区别\",{\"0\":{\"187\":1}}],[\"http和https\",{\"0\":{\"178\":1}}],[\"http和https的区别\",{\"0\":{\"177\":1,\"179\":1},\"2\":{\"184\":1}}],[\"https\",{\"0\":{\"431\":1},\"2\":{\"432\":1}}],[\"https的应用数据时如保证完整性的\",{\"0\":{\"183\":1}}],[\"https是如何建立连接的\",{\"0\":{\"182\":1}}],[\"https解决了http的那些问题\",{\"0\":{\"180\":1}}],[\"https如何优化\",{\"0\":{\"169\":1},\"2\":{\"176\":1}}],[\"http3协议\",{\"0\":{\"167\":1}}],[\"http2的问题\",{\"0\":{\"159\":1}}],[\"http的性能问题\",{\"0\":{\"151\":1}}],[\"http的更迭\",{\"0\":{\"147\":1},\"2\":{\"168\":1}}],[\"http特性\",{\"0\":{\"145\":1}}],[\"http缓存技术\",{\"0\":{\"142\":1}}],[\"http常见字段有哪些\",{\"0\":{\"138\":1}}],[\"http常见的状态码\",{\"0\":{\"137\":1}}],[\"http是什么\",{\"0\":{\"136\":1}}],[\"http基本概念\",{\"0\":{\"135\":1}}],[\"http\",{\"0\":{\"134\":1,\"389\":1,\"429\":1},\"2\":{\"146\":1,\"390\":1,\"430\":1}}],[\"ping\",{\"0\":{\"437\":1},\"2\":{\"438\":1}}],[\"ping的工作原理\",{\"0\":{\"196\":1,\"197\":1},\"2\":{\"205\":1}}],[\"packet\",{\"0\":{\"344\":1}}],[\"quic\",{\"0\":{\"345\":1,\"346\":1,\"347\":1,\"348\":1,\"349\":1,\"350\":1}}],[\"quic是如何实现可靠传输的\",{\"0\":{\"343\":1}}],[\"quic协议\",{\"0\":{\"341\":1},\"2\":{\"351\":1}}],[\"quic协议的特点\",{\"0\":{\"163\":1}}],[\"一端断电和进程崩溃有什么区别\",{\"0\":{\"338\":1}}],[\"一个sql语句可以查询到什么\",{\"0\":{\"26\":1}}],[\"一个sql语句\",{\"0\":{\"25\":1},\"2\":{\"27\":1}}],[\"rst\",{\"0\":{\"335\":1}}],[\"resource\",{\"0\":{\"29\":1}}],[\"收到\",{\"0\":{\"335\":1}}],[\"收到syn会发生什么\",{\"0\":{\"316\":1}}],[\"在委托操作系统发送消息时必须提供\",{\"0\":{\"366\":1}}],[\"在发送之前\",{\"0\":{\"366\":1}}],[\"在\",{\"0\":{\"335\":1}}],[\"在time\",{\"0\":{\"332\":1}}],[\"粗暴关闭vs优雅关闭\",{\"0\":{\"329\":1}}],[\"killcx\",{\"0\":{\"317\":1}}],[\"已建立的tcp连接\",{\"0\":{\"316\":1}}],[\"万能公式\",{\"0\":{\"315\":1}}],[\"序列号和确认号是如何变化的\",{\"0\":{\"314\":1}}],[\"当第一次握手丢失\",{\"0\":{\"310\":1}}],[\"既然ip层会分片\",{\"0\":{\"309\":1}}],[\"初始化序列号都要不一样\",{\"0\":{\"313\":1}}],[\"初始化序列号的都要求不一样\",{\"0\":{\"307\":1}}],[\"初始序列号isn是如何随机产生的\",{\"0\":{\"308\":1}}],[\"快速重传\",{\"0\":{\"300\":1}}],[\"快速恢复\",{\"0\":{\"283\":1}}],[\"超时重传\",{\"0\":{\"299\":1}}],[\"糊涂窗口综合征\",{\"0\":{\"295\":1}}],[\"窗口关闭\",{\"0\":{\"294\":1}}],[\"窗口大小由哪一方决定\",{\"0\":{\"287\":1}}],[\"流量控制\",{\"0\":{\"292\":1}}],[\"接收窗口和发送窗口的大小是相等的吗\",{\"0\":{\"291\":1}}],[\"接收方的滑动窗口\",{\"0\":{\"290\":1}}],[\"程序如何表示发送方的四个部分呢\",{\"0\":{\"289\":1}}],[\"发送方的滑动窗口\",{\"0\":{\"288\":1}}],[\"发生在三次握手的哪一步\",{\"0\":{\"239\":1}}],[\"拥塞发生\",{\"0\":{\"282\":1}}],[\"拥塞避免\",{\"0\":{\"281\":1}}],[\"拥塞控制\",{\"0\":{\"39\":1,\"279\":1}}],[\"慢启动\",{\"0\":{\"280\":1}}],[\"拔掉网线之后\",{\"0\":{\"274\":1}}],[\"再来说说为什么\",{\"0\":{\"271\":1}}],[\"先来说说为什么\",{\"0\":{\"270\":1}}],[\"udp\",{\"0\":{\"270\":1}}],[\"udp和tcp的区别和应用场景\",{\"0\":{\"232\":1}}],[\"use\",{\"0\":{\"251\":1}}],[\"重启\",{\"0\":{\"251\":1}}],[\"重传机制有哪些\",{\"0\":{\"35\":1}}],[\"会断开连接吗\",{\"0\":{\"335\":1}}],[\"会导致端口资源耗尽而无法建立新的连接吗\",{\"0\":{\"254\":1}}],[\"会有一个cookies队列吗\",{\"0\":{\"245\":1}}],[\"会话复用\",{\"0\":{\"174\":1}}],[\"能建立tcp连接吗\",{\"0\":{\"243\":1}}],[\"没有accpet\",{\"0\":{\"243\":1}}],[\"没有listen可以建立tcp连接吗\",{\"0\":{\"242\":1}}],[\"客户端主机宕机又重启\",{\"0\":{\"339\":1}}],[\"客户端突然挂怎么办\",{\"0\":{\"336\":1}}],[\"客户端\",{\"0\":{\"254\":1,\"380\":1}}],[\"客户端请求建立连接会发生什么\",{\"0\":{\"241\":1}}],[\"客户端调用\",{\"0\":{\"240\":1}}],[\"服务端突然挂怎么办\",{\"0\":{\"337\":1}}],[\"服务端没有调用listen\",{\"0\":{\"241\":1}}],[\"服务进程时\",{\"0\":{\"251\":1}}],[\"服务器\",{\"0\":{\"380\":1}}],[\"服务器域名与\",{\"0\":{\"367\":1}}],[\"服务器出现大量\",{\"0\":{\"224\":1,\"225\":1}}],[\"服务器主动推送资源\",{\"0\":{\"158\":1}}],[\"了\",{\"0\":{\"240\":1}}],[\"针对tcp应该如何socket编程\",{\"0\":{\"237\":1}}],[\"连接是断开的流程是什么\",{\"0\":{\"240\":1}}],[\"连接\",{\"0\":{\"234\":1,\"254\":1}}],[\"连接迁移\",{\"0\":{\"166\":1}}],[\"什么情况下会出现三次挥手\",{\"0\":{\"330\":1}}],[\"什么时syn超时\",{\"0\":{\"229\":1}}],[\"什么是tcp连接\",{\"0\":{\"267\":1}}],[\"什么是tcp协议\",{\"0\":{\"266\":1}}],[\"什么是syn攻击\",{\"0\":{\"228\":1}}],[\"什么是d类\",{\"0\":{\"211\":1}}],[\"什么是a\",{\"0\":{\"210\":1}}],[\"什么是127\",{\"0\":{\"201\":1}}],[\"什么是中断\",{\"0\":{\"85\":1},\"2\":{\"88\":1}}],[\"什么是oauth2\",{\"0\":{\"54\":1}}],[\"什么是restful风格\",{\"0\":{\"52\":1}}],[\"过多有什么危害\",{\"0\":{\"222\":1}}],[\"状态过多\",{\"0\":{\"254\":1}}],[\"状态的原因有哪些\",{\"0\":{\"224\":1,\"225\":1}}],[\"状态\",{\"0\":{\"221\":1,\"335\":1}}],[\"等待的时间是\",{\"0\":{\"220\":1}}],[\"地址与路由控制\",{\"0\":{\"214\":1}}],[\"地址与私有\",{\"0\":{\"213\":1}}],[\"地址\",{\"0\":{\"213\":1}}],[\"公有\",{\"0\":{\"213\":1}}],[\"无分类地址cidr\",{\"0\":{\"212\":1}}],[\"无队头阻塞\",{\"0\":{\"164\":1}}],[\"e类\",{\"0\":{\"211\":1}}],[\"explain\",{\"0\":{\"25\":1,\"26\":1},\"2\":{\"27\":1}}],[\"backlog\",{\"0\":{\"238\":1}}],[\"b\",{\"0\":{\"210\":1}}],[\"为什么每次建立tcp连接\",{\"0\":{\"313\":1}}],[\"为什么每次建立tcp链接的时候\",{\"0\":{\"307\":1}}],[\"为什么tcp层还需要mss\",{\"0\":{\"309\":1}}],[\"为什么是三次握手\",{\"0\":{\"306\":1}}],[\"为什么半连接队列要设计成哈希表\",{\"0\":{\"244\":1}}],[\"为什么需要\",{\"0\":{\"221\":1}}],[\"为什么需要三次握手而不是四次\",{\"0\":{\"51\":1}}],[\"为什么\",{\"0\":{\"220\":1}}],[\"为什么断网了还能ping通127\",{\"0\":{\"203\":1}}],[\"断网了还能ping通127\",{\"0\":{\"200\":1}}],[\"查询报文类型\",{\"0\":{\"198\":1}}],[\"in\",{\"0\":{\"251\":1}}],[\"ip协议还可以\",{\"0\":{\"361\":1}}],[\"ip协议的寻址作用\",{\"0\":{\"360\":1}}],[\"ip协议的相关技术\",{\"0\":{\"190\":1},\"2\":{\"195\":1}}],[\"ipv6的首部改进\",{\"0\":{\"217\":1}}],[\"ipv6\",{\"0\":{\"216\":1}}],[\"ip分片与重组\",{\"0\":{\"215\":1}}],[\"ip\",{\"0\":{\"213\":2,\"214\":1,\"375\":1,\"393\":1,\"439\":1},\"2\":{\"394\":1,\"440\":1}}],[\"ip的分类\",{\"0\":{\"209\":1}}],[\"ip的基础知识\",{\"0\":{\"208\":1}}],[\"ip基本认识\",{\"0\":{\"207\":1}}],[\"icmp\",{\"0\":{\"194\":1}}],[\"dns服务器\",{\"0\":{\"367\":1}}],[\"duplicate\",{\"0\":{\"302\":1}}],[\"dhcp\",{\"0\":{\"192\":1}}],[\"ddl\",{\"0\":{\"23\":1}}],[\"wait状态的tcp接收到syn报文会怎么样\",{\"0\":{\"332\":1}}],[\"wait状态的意义\",{\"0\":{\"50\":1}}],[\"wait\",{\"0\":{\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"254\":1,\"335\":1},\"2\":{\"226\":1}}],[\"wait和time\",{\"0\":{\"219\":1},\"2\":{\"226\":1}}],[\"websocket是什么\",{\"0\":{\"188\":1}}],[\"基础计网\",{\"0\":{\"355\":1},\"2\":{\"363\":1}}],[\"基础ip\",{\"0\":{\"206\":1},\"2\":{\"218\":1}}],[\"基本认识\",{\"0\":{\"216\":1}}],[\"基本概念\",{\"0\":{\"92\":1}}],[\"基于\",{\"0\":{\"186\":1}}],[\"是如何迁移连接的\",{\"0\":{\"350\":1}}],[\"是如何做流量控制的\",{\"0\":{\"347\":1}}],[\"是如何解决\",{\"0\":{\"346\":1}}],[\"是面向字节流的协议\",{\"0\":{\"271\":1}}],[\"是面向报文的协议\",{\"0\":{\"270\":1}}],[\"是有三个特点\",{\"0\":{\"186\":1}}],[\"是根据什么来选择当前要执行的线程\",{\"0\":{\"71\":1}}],[\"应用层\",{\"0\":{\"356\":1,\"433\":1},\"2\":{\"434\":1}}],[\"应用层的协议\",{\"0\":{\"185\":1},\"2\":{\"189\":1}}],[\"应该怎么处理\",{\"0\":{\"57\":1}}],[\"期间交互了什么\",{\"0\":{\"182\":1}}],[\"软件优化\",{\"0\":{\"172\":1}}],[\"软中断\",{\"0\":{\"87\":1}}],[\"硬件优化\",{\"0\":{\"171\":1}}],[\"队头阻塞问题的\",{\"0\":{\"346\":1}}],[\"队头阻塞\",{\"0\":{\"160\":1}}],[\"并发传输\",{\"0\":{\"157\":1}}],[\"二进制帧\",{\"0\":{\"156\":1}}],[\"动态编码表\",{\"0\":{\"155\":1}}],[\"静态表编码\",{\"0\":{\"154\":1}}],[\"头部压缩\",{\"0\":{\"153\":1}}],[\"兼容http1\",{\"0\":{\"152\":1}}],[\"协商缓存\",{\"0\":{\"144\":1}}],[\"协议\",{\"0\":{\"83\":1}}],[\"强缓存\",{\"0\":{\"143\":1}}],[\"get和post的方法都是安全和幂等的吗\",{\"0\":{\"141\":1}}],[\"get与post的区别\",{\"0\":{\"140\":1}}],[\"get与post请求\",{\"0\":{\"139\":1}}],[\"进程的上下文切换\",{\"0\":{\"132\":1}}],[\"进程的控制\",{\"0\":{\"131\":1}}],[\"进程的控制结构\",{\"0\":{\"130\":1}}],[\"进程的状态\",{\"0\":{\"129\":1}}],[\"进程\",{\"0\":{\"128\":1},\"2\":{\"133\":1}}],[\"计算机基础\",{\"0\":{\"401\":1,\"423\":1},\"2\":{\"402\":1,\"424\":1}}],[\"计算机网络基础\",{\"0\":{\"397\":1},\"2\":{\"398\":1}}],[\"计算机网络\",{\"0\":{\"391\":1,\"413\":1,\"427\":1},\"2\":{\"392\":1,\"414\":1,\"428\":1}}],[\"计算机操作系统\",{\"0\":{\"387\":1},\"2\":{\"388\":1}}],[\"计算机是怎么存小数的\",{\"0\":{\"125\":1}}],[\"计算机保存数据的形式\",{\"0\":{\"122\":1},\"2\":{\"127\":1}}],[\"十进制小数与二进制的转换\",{\"0\":{\"124\":1}}],[\"用了tcp传输数据就一定不会丢包吗\",{\"0\":{\"276\":1}}],[\"用补码的形式保存负数\",{\"0\":{\"123\":1}}],[\"用户态和内核态\",{\"0\":{\"357\":1}}],[\"用户扫码是如何实现的\",{\"0\":{\"56\":1}}],[\"用户登录\",{\"0\":{\"31\":1,\"53\":1,\"421\":1},\"2\":{\"59\":1,\"422\":1}}],[\"理解线程\",{\"0\":{\"116\":1}}],[\"线程的优劣势\",{\"0\":{\"120\":1}}],[\"线程的优势\",{\"0\":{\"115\":1}}],[\"线程的实现方式\",{\"0\":{\"119\":1}}],[\"线程的上下文切换\",{\"0\":{\"118\":1}}],[\"线程与进程的比较\",{\"0\":{\"117\":1}}],[\"线程\",{\"0\":{\"114\":1},\"2\":{\"121\":1}}],[\"存储器的层次结构\",{\"0\":{\"112\":1}}],[\"输出设备\",{\"0\":{\"111\":1}}],[\"输入\",{\"0\":{\"111\":1}}],[\"总线\",{\"0\":{\"110\":1}}],[\"总线嗅探\",{\"0\":{\"82\":1}}],[\"中央处理器\",{\"0\":{\"109\":1}}],[\"中断\",{\"0\":{\"86\":1}}],[\"冯诺依曼模型\",{\"0\":{\"107\":1},\"2\":{\"113\":1}}],[\"内核空间与用户空间的区别\",{\"0\":{\"102\":1}}],[\"内存\",{\"0\":{\"108\":1}}],[\"内存分页\",{\"0\":{\"96\":1}}],[\"内存分段\",{\"0\":{\"93\":1}}],[\"内存交换效率低\",{\"0\":{\"95\":1}}],[\"内存碎片\",{\"0\":{\"94\":1}}],[\"内存管理\",{\"0\":{\"89\":1},\"2\":{\"106\":1}}],[\"listen\",{\"0\":{\"238\":1}}],[\"linux内存布局\",{\"0\":{\"101\":1}}],[\"leetcode\",{\"0\":{\"18\":1},\"2\":{\"19\":1}}],[\"段页式内存管理\",{\"0\":{\"100\":1}}],[\"多级页表\",{\"0\":{\"98\":1}}],[\"多核\",{\"0\":{\"65\":1}}],[\"简单分页\",{\"0\":{\"97\":1}}],[\"简介\",{\"0\":{\"4\":1}}],[\"问题背景\",{\"0\":{\"91\":1}}],[\"虚拟内存管理器\",{\"0\":{\"105\":1}}],[\"虚拟内存的功能\",{\"0\":{\"104\":1}}],[\"虚拟内存的作用\",{\"0\":{\"103\":1}}],[\"虚拟内存\",{\"0\":{\"90\":1}}],[\"缓存一致性问题\",{\"0\":{\"81\":1}}],[\"写回\",{\"0\":{\"80\":1}}],[\"写直达\",{\"0\":{\"79\":1}}],[\"的对应关系\",{\"0\":{\"367\":1}}],[\"的工具\",{\"0\":{\"317\":1,\"318\":1}}],[\"的报错信息\",{\"0\":{\"251\":1}}],[\"的意义\",{\"0\":{\"238\":1}}],[\"的数据写入\",{\"0\":{\"78\":1}}],[\"的缓存命中率\",{\"0\":{\"65\":1}}],[\"调整优先级\",{\"0\":{\"75\":1}}],[\"调度类\",{\"0\":{\"72\":1}}],[\"运行队列\",{\"0\":{\"74\":1}}],[\"避免伪共享的方法\",{\"0\":{\"70\":1}}],[\"伪共享是什么\",{\"0\":{\"69\":1}}],[\"指令缓存\",{\"0\":{\"64\":1}}],[\"数据缓存\",{\"0\":{\"63\":1}}],[\"数据库\",{\"0\":{\"9\":1}}],[\"跑得更快的代码\",{\"0\":{\"62\":1}}],[\"如果已经建立了链接\",{\"0\":{\"336\":1,\"337\":1}}],[\"如果要实现不同域名下的cookie正常使用\",{\"0\":{\"57\":1}}],[\"如何理解tcp是基于字节流的协议\",{\"0\":{\"269\":1}}],[\"如何确定一个tcp连接\",{\"0\":{\"268\":1}}],[\"如何解决syn超时\",{\"0\":{\"229\":1}}],[\"如何解决的\",{\"0\":{\"181\":1}}],[\"如何避免\",{\"0\":{\"251\":1}}],[\"如何避免syn攻击\",{\"0\":{\"228\":1}}],[\"如何避免发送http请求\",{\"0\":{\"148\":1}}],[\"如何优化tcp\",{\"0\":{\"257\":1}}],[\"如何优化\",{\"0\":{\"223\":1}}],[\"如何减少http响应的数据大小\",{\"0\":{\"150\":1}}],[\"如何减少http请求次数\",{\"0\":{\"149\":1}}],[\"如何写出让\",{\"0\":{\"62\":1}}],[\"如何设计一个登录验签服务\",{\"0\":{\"58\":1}}],[\"假如1亿用户体量\",{\"0\":{\"58\":1}}],[\"授权模式\",{\"0\":{\"55\":1}}],[\"oauth\",{\"0\":{\"55\":1}}],[\"origin\",{\"0\":{\"29\":1}}],[\"address\",{\"0\":{\"251\":1}}],[\"accept\",{\"0\":{\"239\":1}}],[\"apr\",{\"0\":{\"191\":1}}],[\"a\",{\"0\":{\"55\":1}}],[\"00有什么区别\",{\"0\":{\"204\":1}}],[\"0\",{\"0\":{\"54\":1,\"55\":1,\"200\":2,\"201\":2,\"203\":2,\"204\":3}}],[\"两次\",{\"0\":{\"51\":1}}],[\"traceroute\",{\"0\":{\"199\":1}}],[\"tlb\",{\"0\":{\"99\":1}}],[\"time\",{\"0\":{\"50\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"254\":1,\"335\":1}}],[\"tcp四次挥手可以变成三次吗\",{\"0\":{\"328\":1}}],[\"tcp四次挥手性能的提升\",{\"0\":{\"259\":1}}],[\"tcp断开连接\",{\"0\":{\"322\":1}}],[\"tcpkill\",{\"0\":{\"318\":1}}],[\"tcp连接\",{\"0\":{\"338\":1}}],[\"tcp连接的断开\",{\"0\":{\"321\":1},\"2\":{\"340\":1}}],[\"tcp连接的建立\",{\"0\":{\"304\":1,\"305\":1},\"2\":{\"320\":1}}],[\"tcp连接会消失吗\",{\"0\":{\"274\":1}}],[\"tcp半连接队列和全连接队列\",{\"0\":{\"272\":1}}],[\"tcp工作在那一层\",{\"0\":{\"265\":1}}],[\"tcp基本认识\",{\"0\":{\"263\":1}}],[\"tcp传输数据的性能提升\",{\"0\":{\"260\":1}}],[\"tcp三次握手的性能提升\",{\"0\":{\"258\":1}}],[\"tcp的四次挥手\",{\"0\":{\"323\":1}}],[\"tcp的重传机制\",{\"0\":{\"297\":1,\"298\":1},\"2\":{\"303\":1}}],[\"tcp的流量控制\",{\"0\":{\"285\":1},\"2\":{\"296\":1}}],[\"tcp的拥塞控制\",{\"0\":{\"278\":1},\"2\":{\"284\":1}}],[\"tcp的头格式\",{\"0\":{\"264\":1}}],[\"tcp的基本认识\",{\"0\":{\"262\":1},\"2\":{\"277\":1}}],[\"tcp的优化\",{\"0\":{\"256\":1},\"2\":{\"261\":1}}],[\"tcp的socket编程\",{\"0\":{\"236\":1},\"2\":{\"255\":1}}],[\"tcp的三次握手和四次挥手\",{\"0\":{\"40\":1}}],[\"tcp和udp可以同时绑定相同的端口吗\",{\"0\":{\"247\":1,\"248\":1}}],[\"tcp和udp的区别\",{\"0\":{\"32\":1,\"231\":1,\"233\":1},\"2\":{\"235\":1}}],[\"tcp和ping数据的区别\",{\"0\":{\"202\":1}}],[\"tcp\",{\"0\":{\"186\":1,\"251\":1,\"254\":1,\"271\":1,\"314\":1,\"346\":1,\"395\":1,\"441\":1},\"2\":{\"396\":1,\"442\":1}}],[\"tcp与tls的握手延迟\",{\"0\":{\"161\":1}}],[\"tcp是如何保证有序的\",{\"0\":{\"36\":1}}],[\"tcp是如何保证可靠的\",{\"0\":{\"34\":1}}],[\"tcp是如何做链接管理的\",{\"0\":{\"33\":1}}],[\"四次挥手中收到乱序的fin包怎么办\",{\"0\":{\"331\":1}}],[\"四次挥手\",{\"0\":{\"45\":1}}],[\"第四次挥手丢失\",{\"0\":{\"327\":1}}],[\"第四次挥手\",{\"0\":{\"49\":1}}],[\"第三次挥手丢失\",{\"0\":{\"326\":1}}],[\"第三次挥手\",{\"0\":{\"48\":1}}],[\"第三次握手丢失\",{\"0\":{\"312\":1}}],[\"第三次握手\",{\"0\":{\"44\":1,\"373\":1}}],[\"第二次挥手丢失\",{\"0\":{\"325\":1}}],[\"第二次挥手\",{\"0\":{\"47\":1}}],[\"第二次握手丢失\",{\"0\":{\"311\":1}}],[\"第二次握手\",{\"0\":{\"43\":1,\"372\":1}}],[\"第一次挥手丢失\",{\"0\":{\"324\":1}}],[\"第一次挥手\",{\"0\":{\"46\":1}}],[\"第一次握手\",{\"0\":{\"42\":1,\"371\":1}}],[\"三次握手\",{\"0\":{\"41\":1}}],[\"9\",{\"0\":{\"40\":1}}],[\"8\",{\"0\":{\"39\":1,\"380\":1}}],[\"滑动窗口\",{\"0\":{\"38\":1,\"286\":1}}],[\"7\",{\"0\":{\"38\":1,\"254\":1,\"379\":1}}],[\"粘包问题\",{\"0\":{\"37\":1}}],[\"6\",{\"0\":{\"37\":1,\"158\":1,\"378\":1}}],[\"5\",{\"0\":{\"36\":1,\"157\":1,\"376\":1,\"377\":1}}],[\"404\",{\"1\":{\"382\":1}}],[\"4\",{\"0\":{\"35\":1,\"49\":1,\"58\":1,\"156\":1,\"183\":1,\"251\":1,\"302\":1,\"370\":1,\"375\":1}}],[\"3\",{\"0\":{\"34\":1,\"44\":1,\"48\":1,\"57\":1,\"100\":1,\"150\":1,\"153\":1,\"162\":1,\"166\":1,\"167\":1,\"182\":1,\"301\":1,\"369\":1,\"373\":1}}],[\"2msl\",{\"0\":{\"220\":1}}],[\"2\",{\"0\":{\"33\":1,\"43\":1,\"47\":1,\"55\":1,\"56\":1,\"96\":1,\"149\":1,\"152\":1,\"161\":1,\"163\":1,\"165\":1,\"180\":1,\"188\":1,\"249\":1,\"300\":1,\"366\":1,\"372\":1}}],[\"1和localhost和0\",{\"0\":{\"204\":1}}],[\"127\",{\"0\":{\"204\":1}}],[\"1吗\",{\"0\":{\"200\":1}}],[\"11\",{\"0\":{\"51\":1}}],[\"10\",{\"0\":{\"50\":1}}],[\"1\",{\"0\":{\"32\":1,\"42\":1,\"46\":1,\"54\":1,\"90\":1,\"93\":2,\"96\":1,\"100\":1,\"148\":1,\"151\":1,\"152\":1,\"159\":1,\"160\":1,\"164\":1,\"170\":1,\"179\":1,\"187\":1,\"201\":1,\"203\":1,\"248\":1,\"299\":1,\"365\":1,\"371\":1}}],[\"sql\",{\"0\":{\"383\":1,\"417\":1},\"2\":{\"384\":1,\"418\":1}}],[\"sql的ddl\",{\"0\":{\"22\":1},\"2\":{\"24\":1}}],[\"sack\",{\"0\":{\"302\":1}}],[\"sack方法\",{\"0\":{\"301\":1}}],[\"syn非法\",{\"0\":{\"334\":1}}],[\"syn合法\",{\"0\":{\"333\":1}}],[\"syn报文在什么情况下会被丢弃\",{\"0\":{\"273\":1}}],[\"syn延时和泛洪攻击\",{\"0\":{\"227\":1},\"2\":{\"230\":1}}],[\"sharing\",{\"0\":{\"29\":1}}],[\"cookies方案为什么不直接取代半连接队列\",{\"0\":{\"246\":1}}],[\"cors\",{\"0\":{\"29\":1}}],[\"cors策略\",{\"0\":{\"28\":1},\"2\":{\"30\":1}}],[\"close\",{\"0\":{\"219\":1,\"225\":1,\"240\":1},\"2\":{\"226\":1}}],[\"c类\",{\"0\":{\"210\":1}}],[\"cup的缓存一致性\",{\"0\":{\"77\":1},\"2\":{\"84\":1}}],[\"cup是如何执行任务的\",{\"0\":{\"67\":1},\"2\":{\"76\":1}}],[\"cup\",{\"0\":{\"61\":1}}],[\"cache\",{\"0\":{\"60\":1,\"61\":1,\"69\":1,\"78\":1},\"2\":{\"66\":1}}],[\"cpu如何执行任务的\",{\"0\":{\"68\":1}}],[\"cpu\",{\"0\":{\"60\":1,\"62\":1,\"65\":1,\"71\":1,\"74\":1,\"78\":1},\"2\":{\"66\":1}}],[\"cross\",{\"0\":{\"29\":1}}],[\"学习笔记\",{\"0\":{\"20\":1},\"2\":{\"21\":1}}],[\"个人格言\",{\"0\":{\"17\":1}}],[\"个人信息\",{\"0\":{\"3\":1}}],[\"兴趣爱好\",{\"0\":{\"16\":1}}],[\"证书优化\",{\"0\":{\"173\":1}}],[\"证书\",{\"0\":{\"15\":1}}],[\"教育背景\",{\"0\":{\"14\":1}}],[\"项目名称2\",{\"0\":{\"13\":1}}],[\"项目名称1\",{\"0\":{\"12\":1}}],[\"项目经验\",{\"0\":{\"11\":1}}],[\"工具\",{\"0\":{\"10\":1}}],[\"后端技术\",{\"0\":{\"8\":1}}],[\"前端技术\",{\"0\":{\"7\":1}}],[\"🎨\",{\"0\":{\"16\":1}}],[\"🎖️\",{\"0\":{\"15\":1}}],[\"🎓\",{\"0\":{\"14\":1}}],[\"🌐\",{\"0\":{\"7\":1}}],[\"🌟\",{\"0\":{\"2\":2}}],[\"编程语言\",{\"0\":{\"6\":1}}],[\"技能\",{\"0\":{\"5\":1}}],[\"💬\",{\"0\":{\"17\":1}}],[\"📦\",{\"0\":{\"12\":1}}],[\"📚\",{\"0\":{\"11\":1}}],[\"🔧\",{\"0\":{\"10\":1}}],[\"🗄️\",{\"0\":{\"9\":1}}],[\"🛠️\",{\"0\":{\"8\":1}}],[\"🖥️\",{\"0\":{\"6\":1}}],[\"🚀\",{\"0\":{\"5\":1}}],[\"📝\",{\"0\":{\"4\":1,\"13\":1}}],[\"📋\",{\"0\":{\"3\":1}}],[\"博客主页\",{\"0\":{\"0\":1},\"2\":{\"1\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
