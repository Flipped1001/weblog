const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":351,\"nextId\":351,\"documentIds\":{\"0\":\"1\",\"1\":\"1#📋-个人信息\",\"2\":\"1#📝-简介\",\"3\":\"1#🚀-技能\",\"4\":\"1#🖥️-编程语言\",\"5\":\"1#🌐-前端技术\",\"6\":\"1#🛠️-后端技术\",\"7\":\"1#🗄️-数据库\",\"8\":\"1#🔧-工具\",\"9\":\"1#📚-项目经验\",\"10\":\"1#📦-项目名称1\",\"11\":\"1#📝-项目名称2\",\"12\":\"1#🎓-教育背景\",\"13\":\"1#🎖️-证书\",\"14\":\"1#🎨-兴趣爱好\",\"15\":\"1#💬-个人格言\",\"16\":\"2\",\"17\":\"3\",\"18\":\"4\",\"19\":\"4#ddl\",\"20\":\"5\",\"21\":\"5#explain-一个sql语句可以查询到什么\",\"22\":\"6\",\"23\":\"6#cors-cross-origin-resource-sharing-跨域资源共享\",\"24\":\"7\",\"25\":\"7#_1-tcp和udp的区别\",\"26\":\"7#_2-tcp是如何做链接管理的\",\"27\":\"7#_3-tcp是如何保证可靠的\",\"28\":\"7#_4-重传机制有哪些\",\"29\":\"7#_5-tcp是如何保证有序的\",\"30\":\"7#_6-粘包问题\",\"31\":\"7#_7-滑动窗口\",\"32\":\"7#_8-拥塞控制\",\"33\":\"7#_9-tcp的三次握手和四次挥手\",\"34\":\"7#三次握手\",\"35\":\"7#_1-第一次握手\",\"36\":\"7#_2-第二次握手\",\"37\":\"7#_3-第三次握手\",\"38\":\"7#四次挥手\",\"39\":\"7#_1-第一次挥手\",\"40\":\"7#_2-第二次挥手\",\"41\":\"7#_3-第三次挥手\",\"42\":\"7#_4-第四次挥手\",\"43\":\"7#_10-time-wait状态的意义\",\"44\":\"7#_11-为什么需要三次握手而不是四次-两次\",\"45\":\"7#什么是restful风格\",\"46\":\"7#用户登录\",\"47\":\"7#_1-什么是oauth2-0\",\"48\":\"7#a-oauth-2-0-授权模式\",\"49\":\"7#_2-用户扫码是如何实现的\",\"50\":\"7#_3-如果要实现不同域名下的cookie正常使用-应该怎么处理\",\"51\":\"7#_4-假如1亿用户体量-如何设计一个登录验签服务\",\"52\":\"8\",\"53\":\"8#cup-cache\",\"54\":\"8#如何写出让-cpu-跑得更快的代码\",\"55\":\"8#数据缓存\",\"56\":\"8#指令缓存\",\"57\":\"8#多核-cpu-的缓存命中率\",\"58\":\"9\",\"59\":\"9#cpu如何执行任务的\",\"60\":\"9#cache-伪共享是什么\",\"61\":\"9#避免伪共享的方法\",\"62\":\"9#cpu-是根据什么来选择当前要执行的线程。\",\"63\":\"9#调度类\",\"64\":\"9#完全公平调度\",\"65\":\"9#cpu-运行队列\",\"66\":\"9#调整优先级\",\"67\":\"10\",\"68\":\"10#cpu-cache-的数据写入\",\"69\":\"10#写直达\",\"70\":\"10#写回\",\"71\":\"10#缓存一致性问题\",\"72\":\"10#总线嗅探\",\"73\":\"10#mesi-协议\",\"74\":\"11\",\"75\":\"11#中断\",\"76\":\"11#软中断\",\"77\":\"12\",\"78\":\"12#_1-虚拟内存\",\"79\":\"12#问题背景\",\"80\":\"12#基本概念\",\"81\":\"12#_1-1-内存分段\",\"82\":\"12#内存碎片\",\"83\":\"12#内存交换效率低\",\"84\":\"12#_1-2-内存分页\",\"85\":\"12#简单分页-有缺陷\",\"86\":\"12#多级页表\",\"87\":\"12#tlb\",\"88\":\"12#_1-3-段页式内存管理\",\"89\":\"12#linux内存布局\",\"90\":\"12#内核空间与用户空间的区别\",\"91\":\"12#虚拟内存的作用\",\"92\":\"12#虚拟内存的功能\",\"93\":\"12#虚拟内存管理器\",\"94\":\"13\",\"95\":\"13#内存\",\"96\":\"13#中央处理器\",\"97\":\"13#总线\",\"98\":\"13#输入、输出设备\",\"99\":\"13#存储器的层次结构\",\"100\":\"14\",\"101\":\"14#线程的优势\",\"102\":\"14#理解线程\",\"103\":\"14#线程与进程的比较\",\"104\":\"14#线程的上下文切换\",\"105\":\"14#线程的实现方式\",\"106\":\"14#线程的优劣势\",\"107\":\"15\",\"108\":\"15#用补码的形式保存负数\",\"109\":\"15#十进制小数与二进制的转换\",\"110\":\"15#计算机是怎么存小数的\",\"111\":\"15#在计算机中-0-1-0-2-并不等于完整的-0-3。\",\"112\":\"16\",\"113\":\"16#进程的状态\",\"114\":\"16#进程的控制结构\",\"115\":\"16#进程的控制\",\"116\":\"16#进程的上下文切换\",\"117\":\"17\",\"118\":\"17#http基本概念\",\"119\":\"17#http是什么\",\"120\":\"17#http常见的状态码\",\"121\":\"17#http常见字段有哪些\",\"122\":\"17#get与post请求\",\"123\":\"17#get与post的区别\",\"124\":\"17#get和post的方法都是安全和幂等的吗\",\"125\":\"17#http缓存技术\",\"126\":\"17#强缓存\",\"127\":\"17#协商缓存\",\"128\":\"17#http特性\",\"129\":\"18\",\"130\":\"18#_1-如何避免发送http请求\",\"131\":\"18#_2-如何减少http请求次数\",\"132\":\"18#_3-如何减少http响应的数据大小\",\"133\":\"18#_1-http的性能问题\",\"134\":\"18#_2-兼容http1-1\",\"135\":\"18#_3-头部压缩\",\"136\":\"18#静态表编码\",\"137\":\"18#动态编码表\",\"138\":\"18#_4-二进制帧\",\"139\":\"18#_5-并发传输\",\"140\":\"18#_6-服务器主动推送资源\",\"141\":\"18#_1-http2的问题\",\"142\":\"18#_1-队头阻塞\",\"143\":\"18#_2-tcp与tls的握手延迟\",\"144\":\"18#_3-网络迁移需要重新连接\",\"145\":\"18#_2-quic协议的特点\",\"146\":\"18#_1-无队头阻塞\",\"147\":\"18#_2-更快连接建立\",\"148\":\"18#_3-连接迁移\",\"149\":\"18#_3-http3协议\",\"150\":\"19\",\"151\":\"19#_1-分析性能损耗\",\"152\":\"19#硬件优化\",\"153\":\"19#软件优化\",\"154\":\"19#证书优化\",\"155\":\"19#会话复用\",\"156\":\"19#https中tcp三次握手和tls握手能同时进行吗\",\"157\":\"20\",\"158\":\"20#http和https\",\"159\":\"20#_1-http和https的区别\",\"160\":\"20#_2-https解决了http的那些问题\",\"161\":\"20#如何解决的\",\"162\":\"20#_3-https是如何建立连接的-期间交互了什么\",\"163\":\"20#_4-https的应用数据时如保证完整性的\",\"164\":\"21\",\"165\":\"21#tcp-是有三个特点-面向连接、可靠、基于字节流。\",\"166\":\"21#_1-http和rpc的区别\",\"167\":\"21#_2-websocket是什么\",\"168\":\"22\",\"169\":\"22#apr\",\"170\":\"22#dhcp\",\"171\":\"22#nat\",\"172\":\"22#icmp\",\"173\":\"23\",\"174\":\"23#ping的工作原理\",\"175\":\"23#查询报文类型\",\"176\":\"23#traceroute\",\"177\":\"23#断网了还能ping通127-0-0-1吗\",\"178\":\"23#什么是127-0-0-1\",\"179\":\"23#tcp和ping数据的区别\",\"180\":\"23#为什么断网了还能ping通127-0-0-1\",\"181\":\"23#_127-0-0-1和localhost和0-0-00有什么区别\",\"182\":\"24\",\"183\":\"24#ip基本认识\",\"184\":\"24#ip的基础知识\",\"185\":\"24#ip的分类\",\"186\":\"24#什么是a-b-c类\",\"187\":\"24#什么是d类-e类\",\"188\":\"24#无分类地址cidr\",\"189\":\"24#公有-ip-地址与私有-ip-地址\",\"190\":\"24#ip-地址与路由控制\",\"191\":\"24#ip分片与重组\",\"192\":\"24#ipv6-基本认识\",\"193\":\"24#ipv6的首部改进\",\"194\":\"25\",\"195\":\"25#为什么-time-wait-等待的时间是-2msl\",\"196\":\"25#为什么需要-time-wait-状态\",\"197\":\"25#time-wait-过多有什么危害\",\"198\":\"25#如何优化-time-wait\",\"199\":\"25#服务器出现大量-time-wait-状态的原因有哪些\",\"200\":\"25#服务器出现大量-close-wait-状态的原因有哪些\",\"201\":\"26\",\"202\":\"26#什么是syn攻击-如何避免syn攻击\",\"203\":\"26#什么时syn超时-如何解决syn超时\",\"204\":\"27\",\"205\":\"27#udp和tcp的区别和应用场景\",\"206\":\"27#tcp和udp的区别\",\"207\":\"27#连接\",\"208\":\"28\",\"209\":\"28#针对tcp应该如何socket编程\",\"210\":\"28#listen-时候参数-backlog-的意义\",\"211\":\"28#accept-发生在三次握手的哪一步\",\"212\":\"28#客户端调用-close-了-连接是断开的流程是什么\",\"213\":\"28#服务端没有调用listen-客户端请求建立连接会发生什么\",\"214\":\"28#没有listen可以建立tcp连接吗\",\"215\":\"28#没有accpet-能建立tcp连接吗\",\"216\":\"28#为什么半连接队列要设计成哈希表\",\"217\":\"28#会有一个cookies队列吗\",\"218\":\"28#cookies方案为什么不直接取代半连接队列\",\"219\":\"28#tcp和udp可以同时绑定相同的端口吗\",\"220\":\"28#_1-tcp和udp可以同时绑定相同的端口吗\",\"221\":\"28#_2-多个tcp可以同时绑定一个端口吗\",\"222\":\"28#_3-重启-tcp-服务进程时-为什么会有-address-in-use-的报错信息\",\"223\":\"28#_4-重启-tcp-服务进程时-如何避免-address-in-use-的报错信息\",\"224\":\"28#_5-客户端的端口可以重复使用吗\",\"225\":\"28#_6-多个客户端可以-bind-同一个端口吗\",\"226\":\"28#_7-客户端-tcp-连接-time-wait-状态过多-会导致端口资源耗尽而无法建立新的连接吗\",\"227\":\"29\",\"228\":\"29#如何优化tcp\",\"229\":\"29#tcp三次握手的性能提升\",\"230\":\"29#tcp四次挥手性能的提升\",\"231\":\"29#tcp传输数据的性能提升\",\"232\":\"30\",\"233\":\"30#tcp基本认识\",\"234\":\"30#tcp的头格式\",\"235\":\"30#tcp工作在那一层\",\"236\":\"30#什么是tcp协议\",\"237\":\"30#什么是tcp连接\",\"238\":\"30#如何确定一个tcp连接\",\"239\":\"30#如何理解tcp是基于字节流的协议\",\"240\":\"30#先来说说为什么-udp-是面向报文的协议\",\"241\":\"30#再来说说为什么-tcp-是面向字节流的协议\",\"242\":\"30#tcp半连接队列和全连接队列\",\"243\":\"30#syn报文在什么情况下会被丢弃\",\"244\":\"30#拔掉网线之后-tcp连接会消失吗\",\"245\":\"30#为什么-tcp-tw-reuse-默认是关闭的\",\"246\":\"30#用了tcp传输数据就一定不会丢包吗\",\"247\":\"31\",\"248\":\"31#拥塞控制\",\"249\":\"31#慢启动\",\"250\":\"31#拥塞避免\",\"251\":\"31#拥塞发生\",\"252\":\"31#快速恢复\",\"253\":\"32\",\"254\":\"32#滑动窗口\",\"255\":\"32#窗口大小由哪一方决定\",\"256\":\"32#发送方的滑动窗口\",\"257\":\"32#程序如何表示发送方的四个部分呢\",\"258\":\"32#接收方的滑动窗口\",\"259\":\"32#接收窗口和发送窗口的大小是相等的吗\",\"260\":\"32#流量控制\",\"261\":\"32#操作系统缓冲区和滑动窗口的关系\",\"262\":\"32#窗口关闭\",\"263\":\"32#糊涂窗口综合征\",\"264\":\"33\",\"265\":\"33#tcp的重传机制\",\"266\":\"33#_1-超时重传\",\"267\":\"33#_2-快速重传\",\"268\":\"33#_3-sack方法\",\"269\":\"33#_4-duplicate-sack\",\"270\":\"34\",\"271\":\"34#tcp连接的建立\",\"272\":\"34#为什么是三次握手\",\"273\":\"34#为什么每次建立tcp链接的时候-初始化序列号的都要求不一样\",\"274\":\"34#初始序列号isn是如何随机产生的\",\"275\":\"34#既然ip层会分片-为什么tcp层还需要mss\",\"276\":\"34#当第一次握手丢失\",\"277\":\"34#第二次握手丢失\",\"278\":\"34#第三次握手丢失\",\"279\":\"34#为什么每次建立tcp连接-初始化序列号都要不一样\",\"280\":\"34#tcp-序列号和确认号是如何变化的\",\"281\":\"34#万能公式\",\"282\":\"34#已建立的tcp连接-收到syn会发生什么\",\"283\":\"34#killcx-的工具\",\"284\":\"34#tcpkill-的工具\",\"285\":\"34#tcp-的-keepalive-和-http-的-keep-alive-是一个东西吗\",\"286\":\"35\",\"287\":\"35#tcp断开连接\",\"288\":\"35#tcp的四次挥手\",\"289\":\"35#第一次挥手丢失\",\"290\":\"35#第二次挥手丢失\",\"291\":\"35#第三次挥手丢失\",\"292\":\"35#第四次挥手丢失\",\"293\":\"35#tcp四次挥手可以变成三次吗\",\"294\":\"35#粗暴关闭vs优雅关闭\",\"295\":\"35#什么情况下会出现三次挥手\",\"296\":\"35#四次挥手中收到乱序的fin包怎么办\",\"297\":\"35#在time-wait状态的tcp接收到syn报文会怎么样\",\"298\":\"35#syn合法\",\"299\":\"35#syn非法\",\"300\":\"35#在-time-wait-状态-收到-rst-会断开连接吗\",\"301\":\"35#如果已经建立了链接-客户端突然挂怎么办\",\"302\":\"35#如果已经建立了链接-服务端突然挂怎么办\",\"303\":\"35#tcp连接-一端断电和进程崩溃有什么区别\",\"304\":\"35#客户端主机宕机又重启\",\"305\":\"36\",\"306\":\"36#如何基于udp实现可靠传输\",\"307\":\"36#quic是如何实现可靠传输的\",\"308\":\"36#packet-header\",\"309\":\"36#quic-frame-header\",\"310\":\"36#quic-是如何解决-tcp-队头阻塞问题的\",\"311\":\"36#quic-是如何做流量控制的\",\"312\":\"36#quic-对拥塞控制改进\",\"313\":\"36#quic-更快的连接建立\",\"314\":\"36#quic-是如何迁移连接的\",\"315\":\"37\",\"316\":\"37#网络模型\",\"317\":\"38\",\"318\":\"38#应用层\",\"319\":\"38#用户态和内核态\",\"320\":\"38#传输层-作为传输媒介\",\"321\":\"38#网络层-有着实际的传输功能\",\"322\":\"38#ip协议的寻址作用\",\"323\":\"38#ip协议还可以路由\",\"324\":\"38#网络接口层\",\"325\":\"39\",\"326\":\"39#_1-浏览器第一步工作是解析ulr-然后生产http请求消息-然后会委托操作系统发送消息\",\"327\":\"39#_2-在发送之前-必须查询服务器域名对应的ip地址-在委托操作系统发送消息时必须提供通讯对象的ip地址\",\"328\":\"39#dns服务器-专门保存了-web-服务器域名与-ip-的对应关系\",\"329\":\"39#只指路不带路\",\"330\":\"39#_3-通过dns获取到ip后-把传输工作给操作系统中的协议栈\",\"331\":\"39#_4-http协议是基于tcp协议传输的\",\"332\":\"39#_1-第一次握手\",\"333\":\"39#_2-第二次握手\",\"334\":\"39#_3-第三次握手\",\"335\":\"39#完整的tcp报文\",\"336\":\"39#_4-ip\",\"337\":\"39#_5-mac\",\"338\":\"39#_5-网卡-真正的数据发送\",\"339\":\"39#_6-交换机\",\"340\":\"39#_7-路由器\",\"341\":\"39#_8-客户端-服务器\",\"342\":\"40\",\"343\":\"41\",\"344\":\"42\",\"345\":\"43\",\"346\":\"44\",\"347\":\"45\",\"348\":\"46\",\"349\":\"47\",\"350\":\"48\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2],\"1\":[2],\"2\":[2],\"3\":[2],\"4\":[2],\"5\":[2],\"6\":[2],\"7\":[2],\"8\":[2],\"9\":[2],\"10\":[2],\"11\":[2],\"12\":[2],\"13\":[2],\"14\":[2],\"15\":[2],\"16\":[1],\"17\":[1],\"18\":[1],\"19\":[1],\"20\":[2],\"21\":[3],\"22\":[1],\"23\":[7],\"24\":[1],\"25\":[2],\"26\":[3],\"27\":[3],\"28\":[3],\"29\":[3],\"30\":[3],\"31\":[2],\"32\":[2],\"33\":[3],\"34\":[1],\"35\":[2],\"36\":[2],\"37\":[2],\"38\":[1],\"39\":[2],\"40\":[2],\"41\":[2],\"42\":[2],\"43\":[3],\"44\":[3],\"45\":[2],\"46\":[2],\"47\":[4],\"48\":[5],\"49\":[2],\"50\":[4],\"51\":[4],\"52\":[2],\"53\":[2],\"54\":[4],\"55\":[1],\"56\":[1],\"57\":[3],\"58\":[2],\"59\":[1],\"60\":[3],\"61\":[1],\"62\":[3],\"63\":[1],\"64\":[1],\"65\":[2],\"66\":[1],\"67\":[1],\"68\":[3],\"69\":[1],\"70\":[1],\"71\":[1],\"72\":[1],\"73\":[2],\"74\":[2],\"75\":[1],\"76\":[1],\"77\":[1],\"78\":[2],\"79\":[1],\"80\":[1],\"81\":[2],\"82\":[1],\"83\":[1],\"84\":[3],\"85\":[3],\"86\":[1],\"87\":[1],\"88\":[3],\"89\":[1],\"90\":[1],\"91\":[1],\"92\":[1],\"93\":[1],\"94\":[1],\"95\":[2],\"96\":[2],\"97\":[2],\"98\":[2],\"99\":[1],\"100\":[1],\"101\":[1],\"102\":[1],\"103\":[1],\"104\":[1],\"105\":[1],\"106\":[1],\"107\":[1],\"108\":[2],\"109\":[1],\"110\":[2],\"111\":[1],\"112\":[1],\"113\":[2],\"114\":[2],\"115\":[1],\"116\":[1],\"117\":[1],\"118\":[1],\"119\":[2],\"120\":[2],\"121\":[2],\"122\":[2],\"123\":[2],\"124\":[2],\"125\":[1],\"126\":[2],\"127\":[2],\"128\":[2],\"129\":[1],\"130\":[2],\"131\":[2],\"132\":[3],\"133\":[2],\"134\":[3],\"135\":[2],\"136\":[1],\"137\":[1],\"138\":[2],\"139\":[2],\"140\":[2],\"141\":[2],\"142\":[3],\"143\":[2],\"144\":[2],\"145\":[2],\"146\":[2],\"147\":[2],\"148\":[2],\"149\":[2],\"150\":[1],\"151\":[2],\"152\":[1],\"153\":[1],\"154\":[1],\"155\":[1],\"156\":[1],\"157\":[1],\"158\":[2],\"159\":[3],\"160\":[3],\"161\":[2],\"162\":[4],\"163\":[2],\"164\":[1],\"165\":[4],\"166\":[2],\"167\":[2],\"168\":[1],\"169\":[2],\"170\":[2],\"171\":[2],\"172\":[2],\"173\":[1],\"174\":[1],\"175\":[1],\"176\":[2],\"177\":[4],\"178\":[3],\"179\":[2],\"180\":[4],\"181\":[5],\"182\":[1],\"183\":[1],\"184\":[1],\"185\":[2],\"186\":[4],\"187\":[3],\"188\":[1],\"189\":[4],\"190\":[2],\"191\":[1],\"192\":[2],\"193\":[2],\"194\":[3],\"195\":[6],\"196\":[5],\"197\":[4],\"198\":[4],\"199\":[5],\"200\":[5],\"201\":[1],\"202\":[3],\"203\":[3],\"204\":[1],\"205\":[2],\"206\":[2],\"207\":[2],\"208\":[1],\"209\":[2],\"210\":[5],\"211\":[3],\"212\":[5],\"213\":[3],\"214\":[2],\"215\":[3],\"216\":[2],\"217\":[1],\"218\":[2],\"219\":[2],\"220\":[3],\"221\":[2],\"222\":[1],\"223\":[10],\"224\":[1],\"225\":[1],\"226\":[9],\"227\":[1],\"228\":[2],\"229\":[2],\"230\":[2],\"231\":[2],\"232\":[1],\"233\":[1],\"234\":[2],\"235\":[2],\"236\":[2],\"237\":[2],\"238\":[2],\"239\":[2],\"240\":[4],\"241\":[4],\"242\":[1],\"243\":[2],\"244\":[3],\"245\":[1],\"246\":[2],\"247\":[1],\"248\":[2],\"249\":[1],\"250\":[1],\"251\":[1],\"252\":[1],\"253\":[1],\"254\":[1],\"255\":[2],\"256\":[2],\"257\":[2],\"258\":[2],\"259\":[2],\"260\":[1],\"261\":[2],\"262\":[1],\"263\":[1],\"264\":[1],\"265\":[1],\"266\":[2],\"267\":[2],\"268\":[2],\"269\":[3],\"270\":[1],\"271\":[2],\"272\":[2],\"273\":[3],\"274\":[2],\"275\":[3],\"276\":[2],\"277\":[2],\"278\":[2],\"279\":[3],\"280\":[3],\"281\":[1],\"282\":[3],\"283\":[2],\"284\":[2],\"285\":[1],\"286\":[1],\"287\":[1],\"288\":[2],\"289\":[2],\"290\":[2],\"291\":[2],\"292\":[1],\"293\":[2],\"294\":[2],\"295\":[2],\"296\":[1],\"297\":[3],\"298\":[2],\"299\":[2],\"300\":[8],\"301\":[2],\"302\":[2],\"303\":[3],\"304\":[2],\"305\":[1],\"306\":[1],\"307\":[2],\"308\":[2],\"309\":[3],\"310\":[5],\"311\":[3],\"312\":[2],\"313\":[2],\"314\":[3],\"315\":[1],\"316\":[2],\"317\":[1],\"318\":[2],\"319\":[2],\"320\":[3],\"321\":[3],\"322\":[2],\"323\":[1],\"324\":[2],\"325\":[2],\"326\":[4],\"327\":[3],\"328\":[4],\"329\":[1],\"330\":[3],\"331\":[2],\"332\":[2],\"333\":[2],\"334\":[2],\"335\":[2],\"336\":[2],\"337\":[2],\"338\":[4],\"339\":[2],\"340\":[2],\"341\":[3],\"342\":[1,3],\"343\":[2],\"344\":[1],\"345\":[1],\"346\":[1],\"347\":[1],\"348\":[1],\"349\":[1],\"350\":[1]},\"averageFieldLength\":[2.0512820512820515,0.008746355685131196],\"storedFields\":{\"0\":{\"h\":\"🌟 Flipped的个人介绍页 🌟\"},\"1\":{\"h\":\"📋 个人信息\"},\"2\":{\"h\":\"📝 简介\"},\"3\":{\"h\":\"🚀 技能\"},\"4\":{\"h\":\"🖥️ 编程语言\"},\"5\":{\"h\":\"🌐 前端技术\"},\"6\":{\"h\":\"🛠️ 后端技术\"},\"7\":{\"h\":\"🗄️ 数据库\"},\"8\":{\"h\":\"🔧 工具\"},\"9\":{\"h\":\"📚 项目经验\"},\"10\":{\"h\":\"📦 项目名称1\"},\"11\":{\"h\":\"📝 项目名称2\"},\"12\":{\"h\":\"🎓 教育背景\"},\"13\":{\"h\":\"🎖️ 证书\"},\"14\":{\"h\":\"🎨 兴趣爱好\"},\"15\":{\"h\":\"💬 个人格言\"},\"16\":{\"h\":\"LeetCode\"},\"17\":{\"h\":\"学习笔记\"},\"18\":{\"h\":\"SQL的DDL\"},\"19\":{\"h\":\"DDL\"},\"20\":{\"h\":\"EXPLAIN 一个SQL语句\"},\"21\":{\"h\":\"EXPLAIN 一个SQL语句可以查询到什么？\"},\"22\":{\"h\":\"CORS策略\"},\"23\":{\"h\":\"CORS( Cross-Origin Resource Sharing )跨域资源共享：\"},\"24\":{\"h\":\"用户登录\"},\"25\":{\"h\":\"1.TCP和UDP的区别\"},\"26\":{\"h\":\"2.TCP是如何做链接管理的？\"},\"27\":{\"h\":\"3.TCP是如何保证可靠的？\"},\"28\":{\"h\":\"4.重传机制有哪些？\"},\"29\":{\"h\":\"5.TCP是如何保证有序的？\"},\"30\":{\"h\":\"6.粘包问题？\"},\"31\":{\"h\":\"7.滑动窗口\"},\"32\":{\"h\":\"8.拥塞控制\"},\"33\":{\"h\":\"9.TCP的三次握手和四次挥手？\"},\"34\":{\"h\":\"三次握手\"},\"35\":{\"h\":\"1.第一次握手\"},\"36\":{\"h\":\"2.第二次握手\"},\"37\":{\"h\":\"3.第三次握手\"},\"38\":{\"h\":\"四次挥手\"},\"39\":{\"h\":\"1.第一次挥手\"},\"40\":{\"h\":\"2.第二次挥手\"},\"41\":{\"h\":\"3.第三次挥手\"},\"42\":{\"h\":\"4.第四次挥手\"},\"43\":{\"h\":\"10.time_wait状态的意义\"},\"44\":{\"h\":\"11.为什么需要三次握手而不是四次，两次\"},\"45\":{\"h\":\"什么是restful风格？\"},\"46\":{\"h\":\"用户登录：\"},\"47\":{\"h\":\"1.什么是OAUTH2.0?\"},\"48\":{\"h\":\"a. OAuth 2.0 授权模式\"},\"49\":{\"h\":\"2.用户扫码是如何实现的\"},\"50\":{\"h\":\"3. 如果要实现不同域名下的cookie正常使用，应该怎么处理？\"},\"51\":{\"h\":\"4.假如1亿用户体量，如何设计一个登录验签服务？\"},\"52\":{\"h\":\"CPU Cache\"},\"53\":{\"h\":\"cup cache\"},\"54\":{\"h\":\"如何写出让 CPU 跑得更快的代码？\"},\"55\":{\"h\":\"数据缓存\"},\"56\":{\"h\":\"指令缓存\"},\"57\":{\"h\":\"多核 CPU 的缓存命中率\"},\"58\":{\"h\":\"CUP是如何执行任务的?\"},\"59\":{\"h\":\"CPU如何执行任务的\"},\"60\":{\"h\":\"Cache 伪共享是什么？\"},\"61\":{\"h\":\"避免伪共享的方法\"},\"62\":{\"h\":\"CPU 是根据什么来选择当前要执行的线程。\"},\"63\":{\"h\":\"调度类\"},\"64\":{\"h\":\"完全公平调度\"},\"65\":{\"h\":\"CPU 运行队列\"},\"66\":{\"h\":\"调整优先级\"},\"67\":{\"h\":\"CUP的缓存一致性\"},\"68\":{\"h\":\"CPU Cache 的数据写入\"},\"69\":{\"h\":\"写直达\"},\"70\":{\"h\":\"写回\"},\"71\":{\"h\":\"缓存一致性问题\"},\"72\":{\"h\":\"总线嗅探\"},\"73\":{\"h\":\"MESI 协议\"},\"74\":{\"h\":\"什么是中断？\"},\"75\":{\"h\":\"中断\"},\"76\":{\"h\":\"软中断\"},\"77\":{\"h\":\"内存管理\"},\"78\":{\"h\":\"1. 虚拟内存\"},\"79\":{\"h\":\"问题背景\"},\"80\":{\"h\":\"基本概念\"},\"81\":{\"h\":\"1.1 内存分段\"},\"82\":{\"h\":\"内存碎片\"},\"83\":{\"h\":\"内存交换效率低\"},\"84\":{\"h\":\"1.2 内存分页\"},\"85\":{\"h\":\"简单分页（有缺陷）\"},\"86\":{\"h\":\"多级页表\"},\"87\":{\"h\":\"TLB\"},\"88\":{\"h\":\"1.3 段页式内存管理\"},\"89\":{\"h\":\"Linux内存布局\"},\"90\":{\"h\":\"内核空间与用户空间的区别\"},\"91\":{\"h\":\"虚拟内存的作用\"},\"92\":{\"h\":\"虚拟内存的功能\"},\"93\":{\"h\":\"虚拟内存管理器\"},\"94\":{\"h\":\"冯诺依曼模型\"},\"95\":{\"h\":\"内存：\"},\"96\":{\"h\":\"中央处理器：\"},\"97\":{\"h\":\"总线：\"},\"98\":{\"h\":\"输入、输出设备\"},\"99\":{\"h\":\"存储器的层次结构\"},\"100\":{\"h\":\"线程\"},\"101\":{\"h\":\"线程的优势\"},\"102\":{\"h\":\"理解线程\"},\"103\":{\"h\":\"线程与进程的比较\"},\"104\":{\"h\":\"线程的上下文切换\"},\"105\":{\"h\":\"线程的实现方式\"},\"106\":{\"h\":\"线程的优劣势\"},\"107\":{\"h\":\"计算机保存数据的形式\"},\"108\":{\"h\":\"用补码的形式保存负数：\"},\"109\":{\"h\":\"十进制小数与二进制的转换\"},\"110\":{\"h\":\"计算机是怎么存小数的？\"},\"111\":{\"h\":\"。\"},\"112\":{\"h\":\"进程\"},\"113\":{\"h\":\"进程的状态：\"},\"114\":{\"h\":\"进程的控制结构：\"},\"115\":{\"h\":\"进程的控制\"},\"116\":{\"h\":\"进程的上下文切换\"},\"117\":{\"h\":\"HTTP\"},\"118\":{\"h\":\"HTTP基本概念\"},\"119\":{\"h\":\"HTTP是什么？\"},\"120\":{\"h\":\"HTTP常见的状态码：\"},\"121\":{\"h\":\"HTTP常见字段有哪些：\"},\"122\":{\"h\":\"GET与POST请求:\"},\"123\":{\"h\":\"GET与POST的区别:\"},\"124\":{\"h\":\"GET和POST的方法都是安全和幂等的吗？\"},\"125\":{\"h\":\"HTTP缓存技术\"},\"126\":{\"h\":\"强缓存：\"},\"127\":{\"h\":\"协商缓存：\"},\"128\":{\"h\":\"HTTP特性：\"},\"129\":{\"h\":\"HTTP的更迭\"},\"130\":{\"h\":\"1.如何避免发送HTTP请求\"},\"131\":{\"h\":\"2.如何减少HTTP请求次数\"},\"132\":{\"h\":\"3.如何减少HTTP响应的数据大小？\"},\"133\":{\"h\":\"1.HTTP的性能问题\"},\"134\":{\"h\":\"2.兼容HTTP1.1\"},\"135\":{\"h\":\"3.头部压缩\"},\"136\":{\"h\":\"静态表编码\"},\"137\":{\"h\":\"动态编码表\"},\"138\":{\"h\":\"4.二进制帧\"},\"139\":{\"h\":\"5.并发传输\"},\"140\":{\"h\":\"6.服务器主动推送资源\"},\"141\":{\"h\":\"1.HTTP2的问题\"},\"142\":{\"h\":\"1.队头阻塞：\"},\"143\":{\"h\":\"2.TCP与TLS的握手延迟\"},\"144\":{\"h\":\"3.网络迁移需要重新连接\"},\"145\":{\"h\":\"2.QUIC协议的特点\"},\"146\":{\"h\":\"1.无队头阻塞\"},\"147\":{\"h\":\"2.更快连接建立\"},\"148\":{\"h\":\"3.连接迁移\"},\"149\":{\"h\":\"3.HTTP3协议\"},\"150\":{\"h\":\"HTTPS如何优化\"},\"151\":{\"h\":\"1.分析性能损耗\"},\"152\":{\"h\":\"硬件优化\"},\"153\":{\"h\":\"软件优化\"},\"154\":{\"h\":\"证书优化\"},\"155\":{\"h\":\"会话复用\"},\"156\":{\"h\":\"\"},\"157\":{\"h\":\"HTTP和HTTPS的区别\"},\"158\":{\"h\":\"HTTP和HTTPS：\"},\"159\":{\"h\":\"1.HTTP和HTTPS的区别：\"},\"160\":{\"h\":\"2.HTTPS解决了HTTP的那些问题?\"},\"161\":{\"h\":\"如何解决的?\"},\"162\":{\"h\":\"3.HTTPS是如何建立连接的,期间交互了什么?\"},\"163\":{\"h\":\"4.HTTPS的应用数据时如保证完整性的\"},\"164\":{\"h\":\"应用层的协议\"},\"165\":{\"h\":\"TCP 是有三个特点， 、 、基于 。\"},\"166\":{\"h\":\"1.HTTP和RPC的区别\"},\"167\":{\"h\":\"2.WebSocket是什么\"},\"168\":{\"h\":\"IP协议的相关技术\"},\"169\":{\"h\":\"APR:\"},\"170\":{\"h\":\"DHCP:\"},\"171\":{\"h\":\"NAT:\"},\"172\":{\"h\":\"ICMP:\"},\"173\":{\"h\":\"ping的工作原理\"},\"174\":{\"h\":\"ping的工作原理\"},\"175\":{\"h\":\"查询报文类型\"},\"176\":{\"h\":\"traceroute :\"},\"177\":{\"h\":\"断网了还能ping通127.0.0.1吗？\"},\"178\":{\"h\":\"什么是127.0.0.1\"},\"179\":{\"h\":\"TCP和Ping数据的区别：\"},\"180\":{\"h\":\"为什么断网了还能ping通127.0.0.1？\"},\"181\":{\"h\":\"127.0.0.1和localhost和0.0.00有什么区别？\"},\"182\":{\"h\":\"基础IP\"},\"183\":{\"h\":\"IP基本认识\"},\"184\":{\"h\":\"IP的基础知识\"},\"185\":{\"h\":\"IP的分类：\"},\"186\":{\"h\":\"什么是A，B，C类？\"},\"187\":{\"h\":\"什么是D类，E类？\"},\"188\":{\"h\":\"无分类地址CIDR\"},\"189\":{\"h\":\"公有 IP 地址与私有 IP 地址\"},\"190\":{\"h\":\"IP 地址与路由控制\"},\"191\":{\"h\":\"IP分片与重组\"},\"192\":{\"h\":\"IPv6 基本认识\"},\"193\":{\"h\":\"IPv6的首部改进：\"},\"194\":{\"h\":\"CLOSE_WAIT和TIME_WAIT\"},\"195\":{\"h\":\"为什么 TIME_WAIT 等待的时间是 2MSL？\"},\"196\":{\"h\":\"为什么需要 TIME_WAIT 状态？\"},\"197\":{\"h\":\"TIME_WAIT 过多有什么危害？\"},\"198\":{\"h\":\"如何优化 TIME_WAIT？\"},\"199\":{\"h\":\"服务器出现大量 TIME_WAIT 状态的原因有哪些？\"},\"200\":{\"h\":\"服务器出现大量 CLOSE_WAIT 状态的原因有哪些？\"},\"201\":{\"h\":\"SYN延时和泛洪攻击\"},\"202\":{\"h\":\"什么是SYN攻击，如何避免SYN攻击？\"},\"203\":{\"h\":\"什么时SYN超时，如何解决SYN超时？\"},\"204\":{\"h\":\"TCP和UDP的区别\"},\"205\":{\"h\":\"UDP和TCP的区别和应用场景：\"},\"206\":{\"h\":\"TCP和UDP的区别：\"},\"207\":{\"h\":\"连接：\"},\"208\":{\"h\":\"TCP的socket编程\"},\"209\":{\"h\":\"针对TCP应该如何socket编程？\"},\"210\":{\"h\":\"listen 时候参数 backlog 的意义？\"},\"211\":{\"h\":\"accept 发生在三次握手的哪一步？\"},\"212\":{\"h\":\"客户端调用 close 了，连接是断开的流程是什么？\"},\"213\":{\"h\":\"服务端没有调用Listen,客户端请求建立连接会发生什么？\"},\"214\":{\"h\":\"没有listen可以建立TCP连接吗？\"},\"215\":{\"h\":\"没有Accpet，能建立TCP连接吗？\"},\"216\":{\"h\":\"为什么半连接队列要设计成哈希表？\"},\"217\":{\"h\":\"会有一个cookies队列吗\"},\"218\":{\"h\":\"cookies方案为什么不直接取代半连接队列？\"},\"219\":{\"h\":\"TCP和UDP可以同时绑定相同的端口吗？\"},\"220\":{\"h\":\"1.TCP和UDP可以同时绑定相同的端口吗？\"},\"221\":{\"h\":\"2.\"},\"222\":{\"h\":\"\"},\"223\":{\"h\":\"4.重启 TCP 服务进程时，如何避免“Address in use”的报错信息？\"},\"224\":{\"h\":\"\"},\"225\":{\"h\":\"\"},\"226\":{\"h\":\"7.客户端 TCP 连接 TIME_WAIT 状态过多，会导致端口资源耗尽而无法建立新的连接吗？\"},\"227\":{\"h\":\"TCP的优化\"},\"228\":{\"h\":\"如何优化TCP？\"},\"229\":{\"h\":\"TCP三次握手的性能提升？\"},\"230\":{\"h\":\"TCP四次挥手性能的提升？\"},\"231\":{\"h\":\"TCP传输数据的性能提升？\"},\"232\":{\"h\":\"TCP的基本认识\"},\"233\":{\"h\":\"TCP基本认识\"},\"234\":{\"h\":\"TCP的头格式：\"},\"235\":{\"h\":\"TCP工作在那一层：\"},\"236\":{\"h\":\"什么是TCP协议：\"},\"237\":{\"h\":\"什么是TCP连接:\"},\"238\":{\"h\":\"如何确定一个TCP连接：\"},\"239\":{\"h\":\"如何理解TCP是基于字节流的协议？\"},\"240\":{\"h\":\"先来说说为什么 UDP 是面向报文的协议？\"},\"241\":{\"h\":\"再来说说为什么 TCP 是面向字节流的协议？\"},\"242\":{\"h\":\"TCP半连接队列和全连接队列\"},\"243\":{\"h\":\"SYN报文在什么情况下会被丢弃？\"},\"244\":{\"h\":\"拔掉网线之后，TCP连接会消失吗？\"},\"245\":{\"h\":\"\"},\"246\":{\"h\":\"用了TCP传输数据就一定不会丢包吗？\"},\"247\":{\"h\":\"TCP的拥塞控制\"},\"248\":{\"h\":\"拥塞控制：\"},\"249\":{\"h\":\"慢启动\"},\"250\":{\"h\":\"拥塞避免\"},\"251\":{\"h\":\"拥塞发生\"},\"252\":{\"h\":\"快速恢复\"},\"253\":{\"h\":\"TCP的流量控制\"},\"254\":{\"h\":\"滑动窗口\"},\"255\":{\"h\":\"窗口大小由哪一方决定？\"},\"256\":{\"h\":\"发送方的滑动窗口：\"},\"257\":{\"h\":\"程序如何表示发送方的四个部分呢？\"},\"258\":{\"h\":\"接收方的滑动窗口：\"},\"259\":{\"h\":\"接收窗口和发送窗口的大小是相等的吗？\"},\"260\":{\"h\":\"流量控制\"},\"261\":{\"h\":\"操作系统缓冲区和滑动窗口的关系：\"},\"262\":{\"h\":\"窗口关闭\"},\"263\":{\"h\":\"糊涂窗口综合征\"},\"264\":{\"h\":\"TCP的重传机制\"},\"265\":{\"h\":\"TCP的重传机制\"},\"266\":{\"h\":\"1.超时重传\"},\"267\":{\"h\":\"2.快速重传\"},\"268\":{\"h\":\"3.SACK方法\"},\"269\":{\"h\":\"4.Duplicate SACK\"},\"270\":{\"h\":\"TCP连接的建立\"},\"271\":{\"h\":\"TCP连接的建立：\"},\"272\":{\"h\":\"为什么是三次握手：\"},\"273\":{\"h\":\"为什么每次建立TCP链接的时候，初始化序列号的都要求不一样？\"},\"274\":{\"h\":\"初始序列号ISN是如何随机产生的？\"},\"275\":{\"h\":\"既然IP层会分片，为什么TCP层还需要MSS？\"},\"276\":{\"h\":\"当第一次握手丢失：\"},\"277\":{\"h\":\"第二次握手丢失：\"},\"278\":{\"h\":\"第三次握手丢失：\"},\"279\":{\"h\":\"为什么每次建立TCP连接，初始化序列号都要不一样？\"},\"280\":{\"h\":\"TCP 序列号和确认号是如何变化的？\"},\"281\":{\"h\":\"万能公式\"},\"282\":{\"h\":\"已建立的TCP连接，收到SYN会发生什么？\"},\"283\":{\"h\":\"killcx 的工具\"},\"284\":{\"h\":\"tcpkill 的工具\"},\"285\":{\"h\":\"\"},\"286\":{\"h\":\"TCP连接的断开\"},\"287\":{\"h\":\"TCP断开连接\"},\"288\":{\"h\":\"TCP的四次挥手：\"},\"289\":{\"h\":\"第一次挥手丢失：\"},\"290\":{\"h\":\"第二次挥手丢失：\"},\"291\":{\"h\":\"第三次挥手丢失：\"},\"292\":{\"h\":\"第四次挥手丢失\"},\"293\":{\"h\":\"TCP四次挥手可以变成三次吗？\"},\"294\":{\"h\":\"粗暴关闭VS优雅关闭：\"},\"295\":{\"h\":\"什么情况下会出现三次挥手？\"},\"296\":{\"h\":\"四次挥手中收到乱序的FIN包怎么办\"},\"297\":{\"h\":\"在TIME_WAIT状态的TCP接收到SYN报文会怎么样？\"},\"298\":{\"h\":\"SYN合法：\"},\"299\":{\"h\":\"SYN非法：\"},\"300\":{\"h\":\"在 TIME_WAIT 状态，收到 RST 会断开连接吗？\"},\"301\":{\"h\":\"如果已经建立了链接，客户端突然挂怎么办\"},\"302\":{\"h\":\"如果已经建立了链接，服务端突然挂怎么办\"},\"303\":{\"h\":\"TCP连接，一端断电和进程崩溃有什么区别？\"},\"304\":{\"h\":\"客户端主机宕机又重启？\"},\"305\":{\"h\":\"QUIC协议\"},\"306\":{\"h\":\"\"},\"307\":{\"h\":\"QUIC是如何实现可靠传输的？\"},\"308\":{\"h\":\"Packet Header\"},\"309\":{\"h\":\"QUIC Frame Header\"},\"310\":{\"h\":\"QUIC 是如何解决 TCP 队头阻塞问题的？\"},\"311\":{\"h\":\"QUIC 是如何做流量控制的？\"},\"312\":{\"h\":\"QUIC 对拥塞控制改进\"},\"313\":{\"h\":\"QUIC 更快的连接建立\"},\"314\":{\"h\":\"QUIC 是如何迁移连接的？\"},\"315\":{\"h\":\"常见的网络分层模型\"},\"316\":{\"h\":\"网络模型：\"},\"317\":{\"h\":\"基础计网\"},\"318\":{\"h\":\"应用层：\"},\"319\":{\"h\":\"用户态和内核态：\"},\"320\":{\"h\":\"传输层：（作为传输媒介）\"},\"321\":{\"h\":\"网络层:(有着实际的传输功能)\"},\"322\":{\"h\":\"IP协议的寻址作用：\"},\"323\":{\"h\":\"IP协议还可以\"},\"324\":{\"h\":\"网络接口层：\"},\"325\":{\"h\":\"键入一个URL网络世界发生了什么？\"},\"326\":{\"h\":\"1.浏览器第一步工作是解析ULR，然后生产HTTP请求消息，然后会\"},\"327\":{\"h\":\"2.在发送之前， ，在委托操作系统发送消息时必须提供\"},\"328\":{\"h\":\"DNS服务器:专门保存了 服务器域名与 的对应关系\"},\"329\":{\"h\":\"只指路不带路\"},\"330\":{\"h\":\"3.通过DNS获取到IP后，把传输工作给操作系统中的协议栈\"},\"331\":{\"h\":\"4.http协议是基于TCP协议传输的\"},\"332\":{\"h\":\"1.第一次握手\"},\"333\":{\"h\":\"2.第二次握手\"},\"334\":{\"h\":\"3.第三次握手\"},\"335\":{\"h\":\"完整的TCP报文：\"},\"336\":{\"h\":\"4.IP\"},\"337\":{\"h\":\"5.MAC\"},\"338\":{\"h\":\"5.网卡（真正的数据发送）\"},\"339\":{\"h\":\"6.交换机\"},\"340\":{\"h\":\"7.路由器\"},\"341\":{\"h\":\"8.客户端&服务器\"},\"342\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"343\":{\"h\":\"My SQL\"},\"344\":{\"h\":\"业务场景\"},\"345\":{\"h\":\"计算机操作系统\"},\"346\":{\"h\":\"HTTP\"},\"347\":{\"h\":\"计算机网络\"},\"348\":{\"h\":\"IP\"},\"349\":{\"h\":\"TCP\"},\"350\":{\"h\":\"计算机网络基础\"}},\"dirtCount\":0,\"index\":[[\"业务场景\",{\"0\":{\"344\":1}}],[\"not\",{\"1\":{\"342\":1}}],[\"nat\",{\"0\":{\"171\":1}}],[\"路由器\",{\"0\":{\"340\":1}}],[\"交换机\",{\"0\":{\"339\":1}}],[\"真正的数据发送\",{\"0\":{\"338\":1}}],[\"网卡\",{\"0\":{\"338\":1}}],[\"网络接口层\",{\"0\":{\"324\":1}}],[\"网络层\",{\"0\":{\"321\":1}}],[\"网络模型\",{\"0\":{\"316\":1}}],[\"网络迁移需要重新连接\",{\"0\":{\"144\":1}}],[\"my\",{\"0\":{\"343\":1}}],[\"mac\",{\"0\":{\"337\":1}}],[\"mesi\",{\"0\":{\"73\":1}}],[\"完整的tcp报文\",{\"0\":{\"335\":1}}],[\"完全公平调度\",{\"0\":{\"64\":1}}],[\"把传输工作给操作系统中的协议栈\",{\"0\":{\"330\":1}}],[\"通过dns获取到ip后\",{\"0\":{\"330\":1}}],[\"只指路不带路\",{\"0\":{\"329\":1}}],[\"专门保存了\",{\"0\":{\"328\":1}}],[\"然后会\",{\"0\":{\"326\":1}}],[\"然后生产http请求消息\",{\"0\":{\"326\":1}}],[\"浏览器第一步工作是解析ulr\",{\"0\":{\"326\":1}}],[\"键入一个url网络世界发生了什么\",{\"0\":{\"325\":1}}],[\"有着实际的传输功能\",{\"0\":{\"321\":1}}],[\"有缺陷\",{\"0\":{\"85\":1}}],[\"作为传输媒介\",{\"0\":{\"320\":1}}],[\"传输层\",{\"0\":{\"320\":1}}],[\"常见的网络分层模型\",{\"0\":{\"315\":1}}],[\"更快的连接建立\",{\"0\":{\"313\":1}}],[\"更快连接建立\",{\"0\":{\"147\":1}}],[\"对拥塞控制改进\",{\"0\":{\"312\":1}}],[\"found\",{\"1\":{\"342\":1}}],[\"frame\",{\"0\":{\"309\":1}}],[\"flipped的个人介绍页\",{\"0\":{\"0\":1}}],[\"header\",{\"0\":{\"308\":1,\"309\":1}}],[\"http协议是基于tcp协议传输的\",{\"0\":{\"331\":1}}],[\"http和rpc的区别\",{\"0\":{\"166\":1}}],[\"http和https\",{\"0\":{\"158\":1}}],[\"http和https的区别\",{\"0\":{\"157\":1,\"159\":1}}],[\"https的应用数据时如保证完整性的\",{\"0\":{\"163\":1}}],[\"https是如何建立连接的\",{\"0\":{\"162\":1}}],[\"https解决了http的那些问题\",{\"0\":{\"160\":1}}],[\"https如何优化\",{\"0\":{\"150\":1}}],[\"http3协议\",{\"0\":{\"149\":1}}],[\"http2的问题\",{\"0\":{\"141\":1}}],[\"http的性能问题\",{\"0\":{\"133\":1}}],[\"http的更迭\",{\"0\":{\"129\":1}}],[\"http特性\",{\"0\":{\"128\":1}}],[\"http缓存技术\",{\"0\":{\"125\":1}}],[\"http常见字段有哪些\",{\"0\":{\"121\":1}}],[\"http常见的状态码\",{\"0\":{\"120\":1}}],[\"http是什么\",{\"0\":{\"119\":1}}],[\"http基本概念\",{\"0\":{\"118\":1}}],[\"http\",{\"0\":{\"117\":1,\"346\":1}}],[\"packet\",{\"0\":{\"308\":1}}],[\"ping的工作原理\",{\"0\":{\"173\":1,\"174\":1}}],[\"quic\",{\"0\":{\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1}}],[\"quic是如何实现可靠传输的\",{\"0\":{\"307\":1}}],[\"quic协议\",{\"0\":{\"305\":1}}],[\"quic协议的特点\",{\"0\":{\"145\":1}}],[\"一端断电和进程崩溃有什么区别\",{\"0\":{\"303\":1}}],[\"一个sql语句可以查询到什么\",{\"0\":{\"21\":1}}],[\"一个sql语句\",{\"0\":{\"20\":1}}],[\"rst\",{\"0\":{\"300\":1}}],[\"resource\",{\"0\":{\"23\":1}}],[\"收到\",{\"0\":{\"300\":1}}],[\"收到syn会发生什么\",{\"0\":{\"282\":1}}],[\"在委托操作系统发送消息时必须提供\",{\"0\":{\"327\":1}}],[\"在发送之前\",{\"0\":{\"327\":1}}],[\"在\",{\"0\":{\"300\":1}}],[\"在time\",{\"0\":{\"297\":1}}],[\"粗暴关闭vs优雅关闭\",{\"0\":{\"294\":1}}],[\"killcx\",{\"0\":{\"283\":1}}],[\"已建立的tcp连接\",{\"0\":{\"282\":1}}],[\"万能公式\",{\"0\":{\"281\":1}}],[\"序列号和确认号是如何变化的\",{\"0\":{\"280\":1}}],[\"当第一次握手丢失\",{\"0\":{\"276\":1}}],[\"既然ip层会分片\",{\"0\":{\"275\":1}}],[\"初始化序列号都要不一样\",{\"0\":{\"279\":1}}],[\"初始化序列号的都要求不一样\",{\"0\":{\"273\":1}}],[\"初始序列号isn是如何随机产生的\",{\"0\":{\"274\":1}}],[\"快速重传\",{\"0\":{\"267\":1}}],[\"快速恢复\",{\"0\":{\"252\":1}}],[\"超时重传\",{\"0\":{\"266\":1}}],[\"糊涂窗口综合征\",{\"0\":{\"263\":1}}],[\"窗口关闭\",{\"0\":{\"262\":1}}],[\"窗口大小由哪一方决定\",{\"0\":{\"255\":1}}],[\"操作系统缓冲区和滑动窗口的关系\",{\"0\":{\"261\":1}}],[\"流量控制\",{\"0\":{\"260\":1}}],[\"接收窗口和发送窗口的大小是相等的吗\",{\"0\":{\"259\":1}}],[\"接收方的滑动窗口\",{\"0\":{\"258\":1}}],[\"程序如何表示发送方的四个部分呢\",{\"0\":{\"257\":1}}],[\"发送方的滑动窗口\",{\"0\":{\"256\":1}}],[\"发生在三次握手的哪一步\",{\"0\":{\"211\":1}}],[\"拥塞发生\",{\"0\":{\"251\":1}}],[\"拥塞避免\",{\"0\":{\"250\":1}}],[\"拥塞控制\",{\"0\":{\"32\":1,\"248\":1}}],[\"慢启动\",{\"0\":{\"249\":1}}],[\"拔掉网线之后\",{\"0\":{\"244\":1}}],[\"再来说说为什么\",{\"0\":{\"241\":1}}],[\"先来说说为什么\",{\"0\":{\"240\":1}}],[\"udp\",{\"0\":{\"240\":1}}],[\"udp和tcp的区别和应用场景\",{\"0\":{\"205\":1}}],[\"use\",{\"0\":{\"223\":1}}],[\"重启\",{\"0\":{\"223\":1}}],[\"重传机制有哪些\",{\"0\":{\"28\":1}}],[\"会断开连接吗\",{\"0\":{\"300\":1}}],[\"会导致端口资源耗尽而无法建立新的连接吗\",{\"0\":{\"226\":1}}],[\"会有一个cookies队列吗\",{\"0\":{\"217\":1}}],[\"会话复用\",{\"0\":{\"155\":1}}],[\"能建立tcp连接吗\",{\"0\":{\"215\":1}}],[\"没有accpet\",{\"0\":{\"215\":1}}],[\"没有listen可以建立tcp连接吗\",{\"0\":{\"214\":1}}],[\"客户端主机宕机又重启\",{\"0\":{\"304\":1}}],[\"客户端突然挂怎么办\",{\"0\":{\"301\":1}}],[\"客户端\",{\"0\":{\"226\":1,\"341\":1}}],[\"客户端请求建立连接会发生什么\",{\"0\":{\"213\":1}}],[\"客户端调用\",{\"0\":{\"212\":1}}],[\"服务端突然挂怎么办\",{\"0\":{\"302\":1}}],[\"服务端没有调用listen\",{\"0\":{\"213\":1}}],[\"服务进程时\",{\"0\":{\"223\":1}}],[\"服务器\",{\"0\":{\"341\":1}}],[\"服务器域名与\",{\"0\":{\"328\":1}}],[\"服务器出现大量\",{\"0\":{\"199\":1,\"200\":1}}],[\"服务器主动推送资源\",{\"0\":{\"140\":1}}],[\"了\",{\"0\":{\"212\":1}}],[\"时候参数\",{\"0\":{\"210\":1}}],[\"针对tcp应该如何socket编程\",{\"0\":{\"209\":1}}],[\"连接是断开的流程是什么\",{\"0\":{\"212\":1}}],[\"连接\",{\"0\":{\"207\":1,\"226\":1}}],[\"连接迁移\",{\"0\":{\"148\":1}}],[\"什么情况下会出现三次挥手\",{\"0\":{\"295\":1}}],[\"什么时syn超时\",{\"0\":{\"203\":1}}],[\"什么是tcp连接\",{\"0\":{\"237\":1}}],[\"什么是tcp协议\",{\"0\":{\"236\":1}}],[\"什么是syn攻击\",{\"0\":{\"202\":1}}],[\"什么是d类\",{\"0\":{\"187\":1}}],[\"什么是a\",{\"0\":{\"186\":1}}],[\"什么是127\",{\"0\":{\"178\":1}}],[\"什么是中断\",{\"0\":{\"74\":1}}],[\"什么是oauth2\",{\"0\":{\"47\":1}}],[\"什么是restful风格\",{\"0\":{\"45\":1}}],[\"过多有什么危害\",{\"0\":{\"197\":1}}],[\"状态过多\",{\"0\":{\"226\":1}}],[\"状态的原因有哪些\",{\"0\":{\"199\":1,\"200\":1}}],[\"状态\",{\"0\":{\"196\":1,\"300\":1}}],[\"等待的时间是\",{\"0\":{\"195\":1}}],[\"地址与路由控制\",{\"0\":{\"190\":1}}],[\"地址与私有\",{\"0\":{\"189\":1}}],[\"地址\",{\"0\":{\"189\":1}}],[\"公有\",{\"0\":{\"189\":1}}],[\"无分类地址cidr\",{\"0\":{\"188\":1}}],[\"无队头阻塞\",{\"0\":{\"146\":1}}],[\"e类\",{\"0\":{\"187\":1}}],[\"explain\",{\"0\":{\"20\":1,\"21\":1}}],[\"backlog\",{\"0\":{\"210\":1}}],[\"b\",{\"0\":{\"186\":1}}],[\"为什么每次建立tcp连接\",{\"0\":{\"279\":1}}],[\"为什么每次建立tcp链接的时候\",{\"0\":{\"273\":1}}],[\"为什么tcp层还需要mss\",{\"0\":{\"275\":1}}],[\"为什么是三次握手\",{\"0\":{\"272\":1}}],[\"为什么半连接队列要设计成哈希表\",{\"0\":{\"216\":1}}],[\"为什么需要\",{\"0\":{\"196\":1}}],[\"为什么需要三次握手而不是四次\",{\"0\":{\"44\":1}}],[\"为什么\",{\"0\":{\"195\":1}}],[\"为什么断网了还能ping通127\",{\"0\":{\"180\":1}}],[\"断网了还能ping通127\",{\"0\":{\"177\":1}}],[\"查询报文类型\",{\"0\":{\"175\":1}}],[\"in\",{\"0\":{\"223\":1}}],[\"ip协议还可以\",{\"0\":{\"323\":1}}],[\"ip协议的寻址作用\",{\"0\":{\"322\":1}}],[\"ip协议的相关技术\",{\"0\":{\"168\":1}}],[\"ipv6的首部改进\",{\"0\":{\"193\":1}}],[\"ipv6\",{\"0\":{\"192\":1}}],[\"ip分片与重组\",{\"0\":{\"191\":1}}],[\"ip\",{\"0\":{\"189\":2,\"190\":1,\"336\":1,\"348\":1}}],[\"ip的分类\",{\"0\":{\"185\":1}}],[\"ip的基础知识\",{\"0\":{\"184\":1}}],[\"ip基本认识\",{\"0\":{\"183\":1}}],[\"icmp\",{\"0\":{\"172\":1}}],[\"dns服务器\",{\"0\":{\"328\":1}}],[\"duplicate\",{\"0\":{\"269\":1}}],[\"dhcp\",{\"0\":{\"170\":1}}],[\"ddl\",{\"0\":{\"19\":1}}],[\"wait状态的tcp接收到syn报文会怎么样\",{\"0\":{\"297\":1}}],[\"wait状态的意义\",{\"0\":{\"43\":1}}],[\"wait\",{\"0\":{\"194\":1,\"195\":1,\"196\":1,\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"226\":1,\"300\":1}}],[\"wait和time\",{\"0\":{\"194\":1}}],[\"websocket是什么\",{\"0\":{\"167\":1}}],[\"基础计网\",{\"0\":{\"317\":1}}],[\"基础ip\",{\"0\":{\"182\":1}}],[\"基本认识\",{\"0\":{\"192\":1}}],[\"基本概念\",{\"0\":{\"80\":1}}],[\"基于\",{\"0\":{\"165\":1}}],[\"是如何迁移连接的\",{\"0\":{\"314\":1}}],[\"是如何做流量控制的\",{\"0\":{\"311\":1}}],[\"是如何解决\",{\"0\":{\"310\":1}}],[\"是面向字节流的协议\",{\"0\":{\"241\":1}}],[\"是面向报文的协议\",{\"0\":{\"240\":1}}],[\"是有三个特点\",{\"0\":{\"165\":1}}],[\"是根据什么来选择当前要执行的线程\",{\"0\":{\"62\":1}}],[\"应用层\",{\"0\":{\"318\":1}}],[\"应用层的协议\",{\"0\":{\"164\":1}}],[\"应该怎么处理\",{\"0\":{\"50\":1}}],[\"期间交互了什么\",{\"0\":{\"162\":1}}],[\"软件优化\",{\"0\":{\"153\":1}}],[\"软中断\",{\"0\":{\"76\":1}}],[\"硬件优化\",{\"0\":{\"152\":1}}],[\"分析性能损耗\",{\"0\":{\"151\":1}}],[\"队头阻塞问题的\",{\"0\":{\"310\":1}}],[\"队头阻塞\",{\"0\":{\"142\":1}}],[\"并发传输\",{\"0\":{\"139\":1}}],[\"二进制帧\",{\"0\":{\"138\":1}}],[\"动态编码表\",{\"0\":{\"137\":1}}],[\"静态表编码\",{\"0\":{\"136\":1}}],[\"头部压缩\",{\"0\":{\"135\":1}}],[\"兼容http1\",{\"0\":{\"134\":1}}],[\"协商缓存\",{\"0\":{\"127\":1}}],[\"协议\",{\"0\":{\"73\":1}}],[\"强缓存\",{\"0\":{\"126\":1}}],[\"get和post的方法都是安全和幂等的吗\",{\"0\":{\"124\":1}}],[\"get与post的区别\",{\"0\":{\"123\":1}}],[\"get与post请求\",{\"0\":{\"122\":1}}],[\"进程的上下文切换\",{\"0\":{\"116\":1}}],[\"进程的控制\",{\"0\":{\"115\":1}}],[\"进程的控制结构\",{\"0\":{\"114\":1}}],[\"进程的状态\",{\"0\":{\"113\":1}}],[\"进程\",{\"0\":{\"112\":1}}],[\"计算机网络基础\",{\"0\":{\"350\":1}}],[\"计算机网络\",{\"0\":{\"347\":1}}],[\"计算机操作系统\",{\"0\":{\"345\":1}}],[\"计算机是怎么存小数的\",{\"0\":{\"110\":1}}],[\"计算机保存数据的形式\",{\"0\":{\"107\":1}}],[\"十进制小数与二进制的转换\",{\"0\":{\"109\":1}}],[\"用了tcp传输数据就一定不会丢包吗\",{\"0\":{\"246\":1}}],[\"用补码的形式保存负数\",{\"0\":{\"108\":1}}],[\"用户态和内核态\",{\"0\":{\"319\":1}}],[\"用户扫码是如何实现的\",{\"0\":{\"49\":1}}],[\"用户登录\",{\"0\":{\"24\":1,\"46\":1}}],[\"理解线程\",{\"0\":{\"102\":1}}],[\"线程的优劣势\",{\"0\":{\"106\":1}}],[\"线程的优势\",{\"0\":{\"101\":1}}],[\"线程的实现方式\",{\"0\":{\"105\":1}}],[\"线程的上下文切换\",{\"0\":{\"104\":1}}],[\"线程与进程的比较\",{\"0\":{\"103\":1}}],[\"线程\",{\"0\":{\"100\":1}}],[\"存储器的层次结构\",{\"0\":{\"99\":1}}],[\"输出设备\",{\"0\":{\"98\":1}}],[\"输入\",{\"0\":{\"98\":1}}],[\"总线\",{\"0\":{\"97\":1}}],[\"总线嗅探\",{\"0\":{\"72\":1}}],[\"中央处理器\",{\"0\":{\"96\":1}}],[\"中断\",{\"0\":{\"75\":1}}],[\"冯诺依曼模型\",{\"0\":{\"94\":1}}],[\"内核空间与用户空间的区别\",{\"0\":{\"90\":1}}],[\"内存\",{\"0\":{\"95\":1}}],[\"内存分页\",{\"0\":{\"84\":1}}],[\"内存分段\",{\"0\":{\"81\":1}}],[\"内存交换效率低\",{\"0\":{\"83\":1}}],[\"内存碎片\",{\"0\":{\"82\":1}}],[\"内存管理\",{\"0\":{\"77\":1}}],[\"listen\",{\"0\":{\"210\":1}}],[\"linux内存布局\",{\"0\":{\"89\":1}}],[\"leetcode\",{\"0\":{\"16\":1}}],[\"段页式内存管理\",{\"0\":{\"88\":1}}],[\"多级页表\",{\"0\":{\"86\":1}}],[\"多核\",{\"0\":{\"57\":1}}],[\"简单分页\",{\"0\":{\"85\":1}}],[\"简介\",{\"0\":{\"2\":1}}],[\"问题背景\",{\"0\":{\"79\":1}}],[\"虚拟内存管理器\",{\"0\":{\"93\":1}}],[\"虚拟内存的功能\",{\"0\":{\"92\":1}}],[\"虚拟内存的作用\",{\"0\":{\"91\":1}}],[\"虚拟内存\",{\"0\":{\"78\":1}}],[\"缓存一致性问题\",{\"0\":{\"71\":1}}],[\"写回\",{\"0\":{\"70\":1}}],[\"写直达\",{\"0\":{\"69\":1}}],[\"的对应关系\",{\"0\":{\"328\":1}}],[\"的工具\",{\"0\":{\"283\":1,\"284\":1}}],[\"的报错信息\",{\"0\":{\"223\":1}}],[\"的意义\",{\"0\":{\"210\":1}}],[\"的数据写入\",{\"0\":{\"68\":1}}],[\"的缓存命中率\",{\"0\":{\"57\":1}}],[\"调整优先级\",{\"0\":{\"66\":1}}],[\"调度类\",{\"0\":{\"63\":1}}],[\"运行队列\",{\"0\":{\"65\":1}}],[\"避免伪共享的方法\",{\"0\":{\"61\":1}}],[\"伪共享是什么\",{\"0\":{\"60\":1}}],[\"指令缓存\",{\"0\":{\"56\":1}}],[\"数据缓存\",{\"0\":{\"55\":1}}],[\"数据库\",{\"0\":{\"7\":1}}],[\"跑得更快的代码\",{\"0\":{\"54\":1}}],[\"如果已经建立了链接\",{\"0\":{\"301\":1,\"302\":1}}],[\"如果要实现不同域名下的cookie正常使用\",{\"0\":{\"50\":1}}],[\"如何理解tcp是基于字节流的协议\",{\"0\":{\"239\":1}}],[\"如何确定一个tcp连接\",{\"0\":{\"238\":1}}],[\"如何解决syn超时\",{\"0\":{\"203\":1}}],[\"如何解决的\",{\"0\":{\"161\":1}}],[\"如何避免\",{\"0\":{\"223\":1}}],[\"如何避免syn攻击\",{\"0\":{\"202\":1}}],[\"如何避免发送http请求\",{\"0\":{\"130\":1}}],[\"如何优化tcp\",{\"0\":{\"228\":1}}],[\"如何优化\",{\"0\":{\"198\":1}}],[\"如何减少http响应的数据大小\",{\"0\":{\"132\":1}}],[\"如何减少http请求次数\",{\"0\":{\"131\":1}}],[\"如何写出让\",{\"0\":{\"54\":1}}],[\"如何设计一个登录验签服务\",{\"0\":{\"51\":1}}],[\"假如1亿用户体量\",{\"0\":{\"51\":1}}],[\"授权模式\",{\"0\":{\"48\":1}}],[\"oauth\",{\"0\":{\"48\":1}}],[\"origin\",{\"0\":{\"23\":1}}],[\"address\",{\"0\":{\"223\":1}}],[\"accept\",{\"0\":{\"211\":1}}],[\"apr\",{\"0\":{\"169\":1}}],[\"a\",{\"0\":{\"48\":1}}],[\"00有什么区别\",{\"0\":{\"181\":1}}],[\"0\",{\"0\":{\"47\":1,\"48\":1,\"177\":2,\"178\":2,\"180\":2,\"181\":3}}],[\"两次\",{\"0\":{\"44\":1}}],[\"traceroute\",{\"0\":{\"176\":1}}],[\"tlb\",{\"0\":{\"87\":1}}],[\"time\",{\"0\":{\"43\":1,\"195\":1,\"196\":1,\"197\":1,\"198\":1,\"199\":1,\"226\":1,\"300\":1}}],[\"tcp四次挥手可以变成三次吗\",{\"0\":{\"293\":1}}],[\"tcp四次挥手性能的提升\",{\"0\":{\"230\":1}}],[\"tcp断开连接\",{\"0\":{\"287\":1}}],[\"tcpkill\",{\"0\":{\"284\":1}}],[\"tcp连接\",{\"0\":{\"303\":1}}],[\"tcp连接的断开\",{\"0\":{\"286\":1}}],[\"tcp连接的建立\",{\"0\":{\"270\":1,\"271\":1}}],[\"tcp连接会消失吗\",{\"0\":{\"244\":1}}],[\"tcp半连接队列和全连接队列\",{\"0\":{\"242\":1}}],[\"tcp工作在那一层\",{\"0\":{\"235\":1}}],[\"tcp基本认识\",{\"0\":{\"233\":1}}],[\"tcp传输数据的性能提升\",{\"0\":{\"231\":1}}],[\"tcp三次握手的性能提升\",{\"0\":{\"229\":1}}],[\"tcp的四次挥手\",{\"0\":{\"288\":1}}],[\"tcp的重传机制\",{\"0\":{\"264\":1,\"265\":1}}],[\"tcp的流量控制\",{\"0\":{\"253\":1}}],[\"tcp的拥塞控制\",{\"0\":{\"247\":1}}],[\"tcp的头格式\",{\"0\":{\"234\":1}}],[\"tcp的基本认识\",{\"0\":{\"232\":1}}],[\"tcp的优化\",{\"0\":{\"227\":1}}],[\"tcp的socket编程\",{\"0\":{\"208\":1}}],[\"tcp的三次握手和四次挥手\",{\"0\":{\"33\":1}}],[\"tcp和udp可以同时绑定相同的端口吗\",{\"0\":{\"219\":1,\"220\":1}}],[\"tcp和udp的区别\",{\"0\":{\"25\":1,\"204\":1,\"206\":1}}],[\"tcp和ping数据的区别\",{\"0\":{\"179\":1}}],[\"tcp\",{\"0\":{\"165\":1,\"223\":1,\"226\":1,\"241\":1,\"280\":1,\"310\":1,\"349\":1}}],[\"tcp与tls的握手延迟\",{\"0\":{\"143\":1}}],[\"tcp是如何保证有序的\",{\"0\":{\"29\":1}}],[\"tcp是如何保证可靠的\",{\"0\":{\"27\":1}}],[\"tcp是如何做链接管理的\",{\"0\":{\"26\":1}}],[\"四次挥手中收到乱序的fin包怎么办\",{\"0\":{\"296\":1}}],[\"四次挥手\",{\"0\":{\"38\":1}}],[\"第四次挥手丢失\",{\"0\":{\"292\":1}}],[\"第四次挥手\",{\"0\":{\"42\":1}}],[\"第三次挥手丢失\",{\"0\":{\"291\":1}}],[\"第三次挥手\",{\"0\":{\"41\":1}}],[\"第三次握手丢失\",{\"0\":{\"278\":1}}],[\"第三次握手\",{\"0\":{\"37\":1,\"334\":1}}],[\"第二次挥手丢失\",{\"0\":{\"290\":1}}],[\"第二次挥手\",{\"0\":{\"40\":1}}],[\"第二次握手丢失\",{\"0\":{\"277\":1}}],[\"第二次握手\",{\"0\":{\"36\":1,\"333\":1}}],[\"第一次挥手丢失\",{\"0\":{\"289\":1}}],[\"第一次挥手\",{\"0\":{\"39\":1}}],[\"第一次握手\",{\"0\":{\"35\":1,\"332\":1}}],[\"三次握手\",{\"0\":{\"34\":1}}],[\"9\",{\"0\":{\"33\":1}}],[\"8\",{\"0\":{\"32\":1,\"341\":1}}],[\"滑动窗口\",{\"0\":{\"31\":1,\"254\":1}}],[\"7\",{\"0\":{\"31\":1,\"226\":1,\"340\":1}}],[\"粘包问题\",{\"0\":{\"30\":1}}],[\"6\",{\"0\":{\"30\":1,\"140\":1,\"339\":1}}],[\"5\",{\"0\":{\"29\":1,\"139\":1,\"337\":1,\"338\":1}}],[\"404\",{\"1\":{\"342\":1}}],[\"4\",{\"0\":{\"28\":1,\"42\":1,\"51\":1,\"138\":1,\"163\":1,\"223\":1,\"269\":1,\"331\":1,\"336\":1}}],[\"3\",{\"0\":{\"27\":1,\"37\":1,\"41\":1,\"50\":1,\"88\":1,\"132\":1,\"135\":1,\"144\":1,\"148\":1,\"149\":1,\"162\":1,\"268\":1,\"330\":1,\"334\":1}}],[\"2msl\",{\"0\":{\"195\":1}}],[\"2\",{\"0\":{\"26\":1,\"36\":1,\"40\":1,\"48\":1,\"49\":1,\"84\":1,\"131\":1,\"134\":1,\"143\":1,\"145\":1,\"147\":1,\"160\":1,\"167\":1,\"221\":1,\"267\":1,\"327\":1,\"333\":1}}],[\"1和localhost和0\",{\"0\":{\"181\":1}}],[\"127\",{\"0\":{\"181\":1}}],[\"1吗\",{\"0\":{\"177\":1}}],[\"11\",{\"0\":{\"44\":1}}],[\"10\",{\"0\":{\"43\":1}}],[\"1\",{\"0\":{\"25\":1,\"35\":1,\"39\":1,\"47\":1,\"78\":1,\"81\":2,\"84\":1,\"88\":1,\"130\":1,\"133\":1,\"134\":1,\"141\":1,\"142\":1,\"146\":1,\"151\":1,\"159\":1,\"166\":1,\"178\":1,\"180\":1,\"220\":1,\"266\":1,\"326\":1,\"332\":1}}],[\"跨域资源共享\",{\"0\":{\"23\":1}}],[\"sql\",{\"0\":{\"343\":1}}],[\"sql的ddl\",{\"0\":{\"18\":1}}],[\"sack\",{\"0\":{\"269\":1}}],[\"sack方法\",{\"0\":{\"268\":1}}],[\"syn非法\",{\"0\":{\"299\":1}}],[\"syn合法\",{\"0\":{\"298\":1}}],[\"syn报文在什么情况下会被丢弃\",{\"0\":{\"243\":1}}],[\"syn延时和泛洪攻击\",{\"0\":{\"201\":1}}],[\"sharing\",{\"0\":{\"23\":1}}],[\"cookies方案为什么不直接取代半连接队列\",{\"0\":{\"218\":1}}],[\"cors\",{\"0\":{\"23\":1}}],[\"cors策略\",{\"0\":{\"22\":1}}],[\"close\",{\"0\":{\"194\":1,\"200\":1,\"212\":1}}],[\"c类\",{\"0\":{\"186\":1}}],[\"cup的缓存一致性\",{\"0\":{\"67\":1}}],[\"cup是如何执行任务的\",{\"0\":{\"58\":1}}],[\"cup\",{\"0\":{\"53\":1}}],[\"cache\",{\"0\":{\"52\":1,\"53\":1,\"60\":1,\"68\":1}}],[\"cpu如何执行任务的\",{\"0\":{\"59\":1}}],[\"cpu\",{\"0\":{\"52\":1,\"54\":1,\"57\":1,\"62\":1,\"65\":1,\"68\":1}}],[\"cross\",{\"0\":{\"23\":1}}],[\"学习笔记\",{\"0\":{\"17\":1}}],[\"个人格言\",{\"0\":{\"15\":1}}],[\"个人信息\",{\"0\":{\"1\":1}}],[\"兴趣爱好\",{\"0\":{\"14\":1}}],[\"证书优化\",{\"0\":{\"154\":1}}],[\"证书\",{\"0\":{\"13\":1}}],[\"教育背景\",{\"0\":{\"12\":1}}],[\"项目名称2\",{\"0\":{\"11\":1}}],[\"项目名称1\",{\"0\":{\"10\":1}}],[\"项目经验\",{\"0\":{\"9\":1}}],[\"工具\",{\"0\":{\"8\":1}}],[\"后端技术\",{\"0\":{\"6\":1}}],[\"前端技术\",{\"0\":{\"5\":1}}],[\"🎨\",{\"0\":{\"14\":1}}],[\"🎖️\",{\"0\":{\"13\":1}}],[\"🎓\",{\"0\":{\"12\":1}}],[\"🌐\",{\"0\":{\"5\":1}}],[\"🌟\",{\"0\":{\"0\":2}}],[\"编程语言\",{\"0\":{\"4\":1}}],[\"技能\",{\"0\":{\"3\":1}}],[\"💬\",{\"0\":{\"15\":1}}],[\"📦\",{\"0\":{\"10\":1}}],[\"📚\",{\"0\":{\"9\":1}}],[\"🔧\",{\"0\":{\"8\":1}}],[\"🗄️\",{\"0\":{\"7\":1}}],[\"🛠️\",{\"0\":{\"6\":1}}],[\"🖥️\",{\"0\":{\"4\":1}}],[\"🚀\",{\"0\":{\"3\":1}}],[\"📝\",{\"0\":{\"2\":1,\"11\":1}}],[\"📋\",{\"0\":{\"1\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
