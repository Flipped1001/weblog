"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[8686],{6786:(e,i)=>{i.A=(e,i)=>{const t=e.__vccOpts||e;for(const[e,d]of i)t[e]=d;return t}},1265:(e,i,t)=>{t.r(i),t.d(i,{comp:()=>r,data:()=>c});var d=t(2758);const s=[(0,d.Fv)('<h2 id="redis" tabindex="-1"><a class="header-anchor" href="#redis"><span>Redis</span></a></h2><p>Redis最主动的特点就是高性能，高并发；因为Redis是基于内存的且是单线程的，实现I/O的多路复用</p><h3 id="redis和memcached的区别" tabindex="-1"><a class="header-anchor" href="#redis和memcached的区别"><span>redis和Memcached的区别：</span></a></h3><ul><li>两者都是基于内存的数据库，一般被当作缓存来使用。</li><li>都有过期策略。</li><li>两者的性能都非常高。</li></ul><p>两者的区别：</p><ul><li>redis支持的数据类型丰富（String，Hash，List，Set，Zset），而Memcached只支持最简单的key-value数据类型</li><li>Redis支持数据的持久化，可以将内存中的数据保存到磁盘中，重启的时候后重新加载，而Memcached没有持久化功能，数据全在内存中，Memcached重启或者挂掉，数据就没有了</li><li>Redis 原生支持集群模式，Memcached 没有原生的集群模式，需要依靠客户端来实现往集群中分片写入数据;</li><li>Redis 支持发布订阅模型、Lua 脚本、事务等功能，而 Memcached 不支持</li></ul>',6)],a={},r=(0,t(6786).A)(a,[["render",function(e,i){return(0,d.uX)(),(0,d.CE)("div",null,s)}]]),c=JSON.parse('{"path":"/demo/Redis/1.redis.html","title":"高性能的redis","lang":"zh-CN","frontmatter":{"title":"高性能的redis","date":"2024-04-01T00:00:00.000Z","tags":["redis"],"categories":["redis","特点"],"description":"Redis Redis最主动的特点就是高性能，高并发；因为Redis是基于内存的且是单线程的，实现I/O的多路复用 redis和Memcached的区别： 两者都是基于内存的数据库，一般被当作缓存来使用。 都有过期策略。 两者的性能都非常高。 两者的区别： redis支持的数据类型丰富（String，Hash，List，Set，Zset），而Memca...","head":[["meta",{"property":"og:url","content":"https://flipped1001.cn/demo/Redis/1.redis.html"}],["meta",{"property":"og:site_name","content":"Flipped"}],["meta",{"property":"og:title","content":"高性能的redis"}],["meta",{"property":"og:description","content":"Redis Redis最主动的特点就是高性能，高并发；因为Redis是基于内存的且是单线程的，实现I/O的多路复用 redis和Memcached的区别： 两者都是基于内存的数据库，一般被当作缓存来使用。 都有过期策略。 两者的性能都非常高。 两者的区别： redis支持的数据类型丰富（String，Hash，List，Set，Zset），而Memca..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-13T12:06:08.000Z"}],["meta",{"property":"article:author","content":"Flipped"}],["meta",{"property":"article:tag","content":"redis"}],["meta",{"property":"article:published_time","content":"2024-04-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-13T12:06:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"高性能的redis\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-13T12:06:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Flipped\\",\\"url\\":\\"www.flipped1001.cn\\"}]}"]]},"headers":[{"level":2,"title":"Redis","slug":"redis","link":"#redis","children":[{"level":3,"title":"redis和Memcached的区别：","slug":"redis和memcached的区别","link":"#redis和memcached的区别","children":[]}]}],"git":{"createdTime":1723285542000,"updatedTime":1723550768000,"contributors":[{"name":"flipped1001","email":"3154147351@qq.com","commits":1}]},"readingTime":{"minutes":0.86,"words":257},"filePathRelative":"demo/Redis/1.redis.md","localizedDate":"2024年4月1日","excerpt":"<h2>Redis</h2>\\n<p>Redis最主动的特点就是高性能，高并发；因为Redis是基于内存的且是单线程的，实现I/O的多路复用</p>\\n<h3>redis和Memcached的区别：</h3>\\n<ul>\\n<li>两者都是基于内存的数据库，一般被当作缓存来使用。</li>\\n<li>都有过期策略。</li>\\n<li>两者的性能都非常高。</li>\\n</ul>\\n<p>两者的区别：</p>\\n<ul>\\n<li>redis支持的数据类型丰富（String，Hash，List，Set，Zset），而Memcached只支持最简单的key-value数据类型</li>\\n<li>Redis支持数据的持久化，可以将内存中的数据保存到磁盘中，重启的时候后重新加载，而Memcached没有持久化功能，数据全在内存中，Memcached重启或者挂掉，数据就没有了</li>\\n<li>Redis 原生支持集群模式，Memcached 没有原生的集群模式，需要依靠客户端来实现往集群中分片写入数据;</li>\\n<li>Redis 支持发布订阅模型、Lua 脚本、事务等功能，而 Memcached 不支持</li>\\n</ul>","autoDesc":true}')}}]);