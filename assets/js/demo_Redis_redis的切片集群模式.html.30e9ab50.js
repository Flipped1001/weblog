"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[6295],{6786:(e,t)=>{t.A=(e,t)=>{const i=e.__vccOpts||e;for(const[e,s]of t)i[e]=s;return i}},7419:(e,t,i)=>{i.r(t),i.d(t,{comp:()=>l,data:()=>o});var s=i(2758);const r=[(0,s.Fv)('<h3 id="切片集群模式" tabindex="-1"><a class="header-anchor" href="#切片集群模式"><span>切片集群模式</span></a></h3><p>当Redis的缓存数据量大到一台服务器无法缓存时，就需要使用<strong>Redis切片集群</strong>（Redis Cluster），他将数据分布在不同的服务器上，以此来降低系统对于单主节点的依赖，从而提高Redis服务的读写性能</p><p>Redis Cluster方案采用哈希槽（Hash Slot），来处理数据和节点之间的映射关系。在Redis Cluster方案中，一个切片集群共有16384个哈希槽。之后会根据Key来映射到对应的槽中</p><ul><li>根据键值对的 key，按照<code>CRC16</code>算法计算一个16 bit的值</li><li>再用 16 bit 值对 16384 取模，得到 0~16383 范围内的模数，每个模数代表一个相应编号的哈希槽。</li></ul><p>然后就是将槽映射到Redis上</p><ul><li>平均分配: 在使用<code>cluster create</code> 命令创建 Redis 集群时，Redis 会自动把所有哈希槽平均分布到集群节点上。比如集群中有 9 个节点，则每个节点上槽的个数为 16384/9 个。</li><li>手动分配: 可以使用<code>cluster meet</code> 命令手动建立节点间的连接，组成集群，再使用 cluster addslots 命令，指定每个节点上的哈希槽个数。再手动分配的时候要将所有槽都分配完</li></ul>',6)],d={},l=(0,i(6786).A)(d,[["render",function(e,t){return(0,s.uX)(),(0,s.CE)("div",null,r)}]]),o=JSON.parse('{"path":"/demo/Redis/redis%E7%9A%84%E5%88%87%E7%89%87%E9%9B%86%E7%BE%A4%E6%A8%A1%E5%BC%8F.html","title":"redis的切片集群模式","lang":"zh-CN","frontmatter":{"title":"redis的切片集群模式","date":"2022-04-30T00:00:00.000Z","tags":["redis"],"categories":["redis","切片集群"],"description":"切片集群模式 当Redis的缓存数据量大到一台服务器无法缓存时，就需要使用Redis切片集群（Redis Cluster），他将数据分布在不同的服务器上，以此来降低系统对于单主节点的依赖，从而提高Redis服务的读写性能 Redis Cluster方案采用哈希槽（Hash Slot），来处理数据和节点之间的映射关系。在Redis Cluster方案中，...","head":[["meta",{"property":"og:url","content":"https://flipped1001.cn/demo/Redis/redis%E7%9A%84%E5%88%87%E7%89%87%E9%9B%86%E7%BE%A4%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Flipped"}],["meta",{"property":"og:title","content":"redis的切片集群模式"}],["meta",{"property":"og:description","content":"切片集群模式 当Redis的缓存数据量大到一台服务器无法缓存时，就需要使用Redis切片集群（Redis Cluster），他将数据分布在不同的服务器上，以此来降低系统对于单主节点的依赖，从而提高Redis服务的读写性能 Redis Cluster方案采用哈希槽（Hash Slot），来处理数据和节点之间的映射关系。在Redis Cluster方案中，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-10T10:25:42.000Z"}],["meta",{"property":"article:author","content":"Flipped"}],["meta",{"property":"article:tag","content":"redis"}],["meta",{"property":"article:published_time","content":"2022-04-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-10T10:25:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"redis的切片集群模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-30T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-10T10:25:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Flipped\\",\\"url\\":\\"www.flipped1001.cn\\"}]}"]]},"headers":[{"level":3,"title":"切片集群模式","slug":"切片集群模式","link":"#切片集群模式","children":[]}],"git":{"createdTime":1723285542000,"updatedTime":1723285542000,"contributors":[{"name":"flipped1001","email":"3154147351@qq.com","commits":1}]},"readingTime":{"minutes":1.17,"words":350},"filePathRelative":"demo/Redis/redis的切片集群模式.md","localizedDate":"2022年4月30日","excerpt":"<h3>切片集群模式</h3>\\n<p>当Redis的缓存数据量大到一台服务器无法缓存时，就需要使用<strong>Redis切片集群</strong>（Redis Cluster），他将数据分布在不同的服务器上，以此来降低系统对于单主节点的依赖，从而提高Redis服务的读写性能</p>\\n<p>Redis Cluster方案采用哈希槽（Hash Slot），来处理数据和节点之间的映射关系。在Redis Cluster方案中，一个切片集群共有16384个哈希槽。之后会根据Key来映射到对应的槽中</p>\\n<ul>\\n<li>根据键值对的 key，按照<code>CRC16</code>算法计算一个16 bit的值</li>\\n<li>再用 16 bit 值对 16384 取模，得到 0~16383 范围内的模数，每个模数代表一个相应编号的哈希槽。</li>\\n</ul>","autoDesc":true}')}}]);