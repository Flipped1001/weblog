"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[9533],{6786:(e,t)=>{t.A=(e,t)=>{const n=e.__vccOpts||e;for(const[e,l]of t)n[e]=l;return n}},375:(e,t,n)=>{n.r(t),n.d(t,{comp:()=>o,data:()=>r});var l=n(2758);const c=(0,l.Fv)('<h2 id="拥塞控制" tabindex="-1"><a class="header-anchor" href="#拥塞控制"><span>拥塞控制：</span></a></h2><p><strong>避免「发送方」的数据填满整个网络</strong>，为了在「发送方」调节所要发送数据的量，定义了一个叫做「<strong>拥塞窗口</strong>」的概念。 $$ 什么是拥塞窗口，和发送窗口有什么关系？又是怎么知道当前网络出现了拥塞？拥塞控制有哪些？ $$ <strong>拥塞窗口 cwnd</strong>是发送方维护的一个的状态变量，它会根据<strong>网络的拥塞程度动态变化的</strong>。发送窗口的值是swnd = min(cwnd, rwnd)，</p><p>只要发生超时重传就会认为网络出现了拥塞</p><h3 id="慢启动" tabindex="-1"><a class="header-anchor" href="#慢启动"><span>慢启动</span></a></h3><p>TCP在刚建立的时候，会一点一点提高发送数据包的数量，<strong>当发送方每收到一个 ACK，拥塞窗口 cwnd 的大小就会加 1。</strong></p><p>发包个数呈指数增长</p><p>有一个叫慢启动门限 <code>ssthresh</code> （slow start threshold）状态变量。</p><ul><li>当 <code>cwnd</code> &lt; <code>ssthresh</code> 时，使用慢启动算法。</li><li>当 <code>cwnd</code> &gt;= <code>ssthresh</code> 时，就会使用「拥塞避免算法」。</li></ul><h3 id="拥塞避免" tabindex="-1"><a class="header-anchor" href="#拥塞避免"><span>拥塞避免</span></a></h3><p>**每当收到一个 ACK 时，cwnd 增加 1/cwnd。**从指数增长变成线性增长</p><p>当触发了重传机制，也就进入了「拥塞发生算法」。</p><h3 id="拥塞发生" tabindex="-1"><a class="header-anchor" href="#拥塞发生"><span>拥塞发生</span></a></h3><p>当发生了「超时重传」，则就会使用拥塞发生算法。</p><p>这个时候，ssthresh 和 cwnd 的值会发生变化：</p><ul><li><code>ssthresh</code> 设为 <code>cwnd/2</code>，</li><li><code>cwnd</code> 重置为 <code>1</code> （是恢复为 cwnd 初始化值，我这里假定 cwnd 初始化值</li></ul><p>当发生「快速重传」的时候，TCP 认为这种情况不严重，因为大部分没丢，只丢了一小部分，则 <code>ssthresh</code> 和 <code>cwnd</code> 变化如下：</p><ul><li><code>cwnd = cwnd/2</code> ，也就是设置为原来的一半;</li><li><code>ssthresh = cwnd</code>;</li><li>进入快速恢复算法</li></ul><h3 id="快速恢复" tabindex="-1"><a class="header-anchor" href="#快速恢复"><span>快速恢复</span></a></h3><p>进入快速恢复算法如下：</p><ul><li><p>拥塞窗口 <code>cwnd = ssthresh + 3</code> （ 3 的意思是确认有 3 个数据包被收到了）；</p></li><li><p>重传丢失的数据包；</p></li><li><p>如果再收到重复的 ACK，那么 cwnd 增加 1；目的是尽快将丢失的数据包发送给目标</p></li><li><p>如果收到新数据的 ACK 后，把 cwnd 设置为第一步中的 ssthresh 的值，原因是该 ACK 确认了新的数据，说明从 duplicated ACK 时的数据都已收到，该恢复过程已经结束，可以回到恢复之前的状态了，也即再次进入拥塞避免状态；</p></li></ul>',20),d={},o=(0,n(6786).A)(d,[["render",function(e,t){return(0,l.uX)(),(0,l.CE)("div",null,[(0,l.Q3)(" more "),c])}]]),r=JSON.parse('{"path":"/demo/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/TCP/TCP%E7%9A%84%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6.html","title":"TCP的拥塞控制","lang":"zh-CN","frontmatter":{"title":"TCP的拥塞控制","date":"2023-11-28T00:00:00.000Z","tags":["计算机基础","计算机网络","TCP"],"categories":["计算机网络"],"head":[["meta",{"property":"og:url","content":"https://flipped1001.cn/demo/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/TCP/TCP%E7%9A%84%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"Flipped"}],["meta",{"property":"og:title","content":"TCP的拥塞控制"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-16T10:13:48.000Z"}],["meta",{"property":"article:author","content":"Flipped"}],["meta",{"property":"article:tag","content":"计算机基础"}],["meta",{"property":"article:tag","content":"计算机网络"}],["meta",{"property":"article:tag","content":"TCP"}],["meta",{"property":"article:published_time","content":"2023-11-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-16T10:13:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TCP的拥塞控制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-28T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-16T10:13:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Flipped\\"}]}"]]},"headers":[{"level":2,"title":"拥塞控制：","slug":"拥塞控制","link":"#拥塞控制","children":[{"level":3,"title":"慢启动","slug":"慢启动","link":"#慢启动","children":[]},{"level":3,"title":"拥塞避免","slug":"拥塞避免","link":"#拥塞避免","children":[]},{"level":3,"title":"拥塞发生","slug":"拥塞发生","link":"#拥塞发生","children":[]},{"level":3,"title":"快速恢复","slug":"快速恢复","link":"#快速恢复","children":[]}]}],"git":{"createdTime":1721124828000,"updatedTime":1721124828000,"contributors":[{"name":"flipped1001","email":"3154147351@qq.com","commits":1}]},"readingTime":{"minutes":2.05,"words":616},"filePathRelative":"demo/计算机网络/TCP/TCP的拥塞控制.md","localizedDate":"2023年11月28日","excerpt":""}')}}]);